/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockSplitCodeFactory,
  MockSplitCodeFactoryInterface,
} from "../MockSplitCodeFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreationCodeContracts",
    outputs: [
      {
        internalType: "address",
        name: "contractA",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b5060405161002160208201610168565b601f1982820381018352601f90910116604052805160006002820460a081905280830360e081905281855290915083610064816100b1602090811b61023c17901c565b60601b6001600160601b0319166080528285018051838252610090826100b1602090811b61023c17901c565b60601b6001600160601b03191660c052949091529290925250610175915050565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f090845291506100fd6001600160a01b03831615156101ac610103565b50919050565b816101115761011181610115565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b610107806106a583390190565b60805160601c60a05160c05160601c60e0516104eb6101ba600039806102a352508061019b528061031f5250806102c452508061017a52806102fb52506104eb6000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062c194db14610045578063174481fa146100c25780637368a8ce14610113575b600080fd5b61004d610159565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561008757818101518382015260200161006f565b50505050905090810190601f1680156100b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100ca610178565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6101306004803603602081101561012957600080fd5b50356101be565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60606101736040518060200160405280600081525061029b565b905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000009091565b6000806101e98360405160200180828152602001915050604051602081830303815290604052610374565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312919081900360200190a192915050565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f0908452915061029573ffffffffffffffffffffffffffffffffffffffff831615156101ac6103bc565b50919050565b8051604080517f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000818101858101848101602090810190965280855293957f00000000000000000000000000000000000000000000000000000000000000009592947f000000000000000000000000000000000000000000000000000000000000000094938801866000828a3c846000888301883c50602089810190898501016103668183866103ce565b505050505050505050919050565b600060606103818361029b565b905060008151602083016000f0905073ffffffffffffffffffffffffffffffffffffffff81166103b5573d6000803e3d6000fd5b9392505050565b816103ca576103ca81610448565b5050565b5b6020811061040c5781518352602092830192909101907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0016103cf565b905182516020929092036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169116179052565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fdfea26469706673582212200833cad6c1e17d21ba31ea722678da327629ccc7347357e64e6959166085cec164736f6c63430007010033608060405234801561001057600080fd5b506040516101073803806101078339818101604052602081101561003357600080fd5b505180610075576040805162461bcd60e51b815260206004820152600b60248201526a1393d397d6915493d7d25160aa1b604482015290519081900360640190fd5b6000556081806100866000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635d1ca63114602d575b600080fd5b60336045565b60408051918252519081900360200190f35b6000549056fea2646970667358221220c50b8a24bb69c1c1b961abf3f15273a6c8f7ccdfb0f9d4b041d9bbc0de8112fb64736f6c63430007010033";

export class MockSplitCodeFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSplitCodeFactory> {
    return super.deploy(overrides || {}) as Promise<MockSplitCodeFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockSplitCodeFactory {
    return super.attach(address) as MockSplitCodeFactory;
  }
  connect(signer: Signer): MockSplitCodeFactory__factory {
    return super.connect(signer) as MockSplitCodeFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSplitCodeFactoryInterface {
    return new utils.Interface(_abi) as MockSplitCodeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSplitCodeFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockSplitCodeFactory;
  }
}
