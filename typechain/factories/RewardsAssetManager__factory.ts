/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  RewardsAssetManager,
  RewardsAssetManagerInterface,
} from "../RewardsAssetManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "targetPercentage",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lowerCriticalPercentage",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "upperCriticalPercentage",
        type: "uint64",
      },
    ],
    name: "InvestmentConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "Rebalance",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "capitalOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
    ],
    name: "getAUM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
    ],
    name: "getInvestmentConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "targetPercentage",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "upperCriticalPercentage",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lowerCriticalPercentage",
            type: "uint64",
          },
        ],
        internalType: "struct RewardsAssetManager.InvestmentConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
    ],
    name: "getPoolBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "poolCash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolManaged",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
    ],
    name: "maxInvestableBalance",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "rawConfig",
        type: "bytes",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "managed",
        type: "uint256",
      },
    ],
    name: "shouldRebalance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pId",
        type: "bytes32",
      },
    ],
    name: "updateBalanceOfPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class RewardsAssetManager__factory {
  static readonly abi = _abi;
  static createInterface(): RewardsAssetManagerInterface {
    return new utils.Interface(_abi) as RewardsAssetManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsAssetManager {
    return new Contract(address, _abi, signerOrProvider) as RewardsAssetManager;
  }
}
