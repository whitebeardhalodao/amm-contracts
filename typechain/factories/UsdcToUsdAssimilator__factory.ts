/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UsdcToUsdAssimilator,
  UsdcToUsdAssimilatorInterface,
} from "../UsdcToUsdAssimilator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "oracle_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "usdc_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_amount",
        type: "int128",
      },
    ],
    name: "intakeNumeraire",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int128",
        name: "_amount",
        type: "int128",
      },
    ],
    name: "intakeNumeraireLPRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "intakeRaw",
    outputs: [
      {
        internalType: "int128",
        name: "amount_",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "intakeRawAndGetBalance",
    outputs: [
      {
        internalType: "int128",
        name: "amount_",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "balance_",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dst",
        type: "address",
      },
      {
        internalType: "int128",
        name: "_amount",
        type: "int128",
      },
    ],
    name: "outputNumeraire",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "outputRaw",
    outputs: [
      {
        internalType: "int128",
        name: "amount_",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "outputRawAndGetBalance",
    outputs: [
      {
        internalType: "int128",
        name: "amount_",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "balance_",
        type: "int128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "viewNumeraireAmount",
    outputs: [
      {
        internalType: "int128",
        name: "amount_",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "viewNumeraireAmountAndBalance",
    outputs: [
      {
        internalType: "int128",
        name: "amount_",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "balance_",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "viewNumeraireBalance",
    outputs: [
      {
        internalType: "int128",
        name: "balance_",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "viewNumeraireBalanceLPRatio",
    outputs: [
      {
        internalType: "int128",
        name: "balance_",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "_amount",
        type: "int128",
      },
    ],
    name: "viewRawAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int128",
        name: "_amount",
        type: "int128",
      },
    ],
    name: "viewRawAmountLPRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516114d63803806114d68339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b0319918216179091556001805493909216921691909117905561145c8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636fc390521161008c578063df4efe4911610066578063df4efe4914610308578063f09a3fc314610350578063f5e6c0ca14610389578063fa00102a146103a6576100ea565b80636fc390521461027c5780637f328ecc146102b8578063ac969a73146102d5576100ea565b80631e9b2cba116100c85780631e9b2cba146101bf578063523bf2571461021b578063679aefce146102545780636b677a8f1461025c576100ea565b8063011847a0146100ef5780630271c3c81461014957806305cf7bb414610169575b600080fd5b6101376004803603608081101561010557600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff6040820135169060600135600f0b6103c3565b60408051918252519081900360200190f35b6101376004803603602081101561015f57600080fd5b5035600f0b6103df565b6101a86004803603606081101561017f57600080fd5b508035906020810135906040013573ffffffffffffffffffffffffffffffffffffffff16610535565b60408051600f9290920b8252519081900360200190f35b6101f8600480360360408110156101d557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105e5565b6040518083600f0b815260200182600f0b81526020019250505060405180910390f35b6101f86004803603604081101561023157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106d1565b6101376108d4565b6101376004803603602081101561027257600080fd5b5035600f0b61096e565b6101376004803603604081101561029257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135600f0b6109a2565b6101f8600480360360208110156102ce57600080fd5b5035610af4565b6101a8600480360360208110156102eb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610cf3565b6101376004803603608081101561031e57600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff6040820135169060600135600f0b610ddb565b6101a86004803603604081101561036657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610f16565b6101a86004803603602081101561039f57600080fd5b503561105f565b6101a8600480360360208110156103bc57600080fd5b5035611087565b60006103d6600f83900b620f42406111c5565b95945050505050565b6000806103ea6108d4565b9050806103fe600f85900b620f42406111c5565b6305f5e100028161040b57fe5b600154604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201529390920460448401819052915191945060009273ffffffffffffffffffffffffffffffffffffffff909116916323b872dd9160648082019260209290919082900301818787803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b505050506040513d60208110156104be57600080fd5b505190508061052e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43757276652f555344432d7472616e736665722d66726f6d2d6661696c656400604482015290519081900360640190fd5b5050919050565b600154604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301529151600093849316916370a08231916024808301926020929190829003018186803b1580156105aa57600080fd5b505afa1580156105be573d6000803e3d6000fd5b505050506040513d60208110156105d457600080fd5b505190506103d681620f4240611249565b60008060006105f26108d4565b905061060b620f42406305f5e1008684025b0490611249565b600154604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152915193965060009391909216916370a08231916024808301926020929190829003018186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d60208110156106ae57600080fd5b505190506106c6620f42406305f5e100848402610604565b925050509250929050565b60008060006106de6108d4565b600154604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301526305f5e100898602046024830181905292519495509193600093929092169163a9059cbb9160448082019260209290919082900301818787803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b505050506040513d602081101561079557600080fd5b505190508061080557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f43757276652f555344432d7472616e736665722d6661696c6564000000000000604482015290519081900360640190fd5b600154604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b15801561087657600080fd5b505afa15801561088a573d6000803e3d6000fd5b505050506040513d60208110156108a057600080fd5b505190506108b183620f4240611249565b95506108c7620f42406305f5e100838702610604565b9450505050509250929050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561093d57600080fd5b505afa158015610951573d6000803e3d6000fd5b505050506040513d602081101561096757600080fd5b5051905090565b6000806109796108d4565b90508061098d600f85900b620f42406111c5565b6305f5e100028161099a57fe5b049392505050565b6000806109ad6108d4565b9050806109c1600f85900b620f42406111c5565b6305f5e10002816109ce57fe5b600154604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8981166004830152949093046024840181905290519095506000939091169163a9059cbb91604480830192602092919082900301818787803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b505050506040513d6020811015610a7c57600080fd5b5051905080610aec57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f43757276652f555344432d7472616e736665722d6661696c6564000000000000604482015290519081900360640190fd5b505092915050565b600154604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905290516000928392839273ffffffffffffffffffffffffffffffffffffffff909216916323b872dd9160648082019260209290919082900301818787803b158015610b7a57600080fd5b505af1158015610b8e573d6000803e3d6000fd5b505050506040513d6020811015610ba457600080fd5b5051905080610c1457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43757276652f555344432d7472616e736665722d66726f6d2d6661696c656400604482015290519081900360640190fd5b600154604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905160009273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b158015610c8557600080fd5b505afa158015610c99573d6000803e3d6000fd5b505050506040513d6020811015610caf57600080fd5b505190506000610cbd6108d4565b9050610cd3620f42406305f5e100848402610604565b9350610ce9620f42406305f5e100888402610604565b9450505050915091565b600080610cfe6108d4565b600154604080517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152915193945060009391909216916370a08231916024808301926020929190829003018186803b158015610d7757600080fd5b505afa158015610d8b573d6000803e3d6000fd5b505050506040513d6020811015610da157600080fd5b5051905080610dbd57610db46000611292565b92505050610dd6565b610dd1620f42406305f5e100838502610604565b925050505b919050565b6000610dee600f83900b620f42406111c5565b600154604080517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101849052905192935060009273ffffffffffffffffffffffffffffffffffffffff909216916323b872dd9160648082019260209290919082900301818787803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b505050506040513d6020811015610e9d57600080fd5b5051905080610f0d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43757276652f555344432d7472616e736665722d66726f6d2d6661696c656400604482015290519081900360640190fd5b50949350505050565b600080610f216108d4565b600154604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301526305f5e100888602046024830181905292519495509193600093929092169163a9059cbb9160448082019260209290919082900301818787803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b505190508061104857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f43757276652f555344432d7472616e736665722d6661696c6564000000000000604482015290519081900360640190fd5b61105582620f4240611249565b9695505050505050565b60008061106a6108d4565b9050611080620f42406305f5e100858402610604565b9392505050565b600154604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600092839273ffffffffffffffffffffffffffffffffffffffff909116916323b872dd9160648082019260209290919082900301818787803b15801561110b57600080fd5b505af115801561111f573d6000803e3d6000fd5b505050506040513d602081101561113557600080fd5b50519050806111a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43757276652f555344432d7472616e736665722d66726f6d2d6661696c656400604482015290519081900360640190fd5b60006111af6108d4565b9050610dd1620f42406305f5e100868402610604565b6000816111d457506000611243565b600083600f0b12156111e557600080fd5b600f83900b6fffffffffffffffffffffffffffffffff8316810260401c90608084901c0277ffffffffffffffffffffffffffffffffffffffffffffffff81111561122e57600080fd5b60401b811981111561123f57600080fd5b0190505b92915050565b60008161125557600080fd5b600061126184846112b0565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff8216111561108057600080fd5b6000677fffffffffffffff8211156112a957600080fd5b5060401b90565b6000816112bc57600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff84116112f25782604085901b816112ea57fe5b049050611409565b60c084811c640100000000811061130b576020918201911c5b62010000811061131d576010918201911c5b610100811061132e576008918201911c5b6010811061133e576004918201911c5b6004811061134e576002918201911c5b6002811061135d576001820191505b60bf820360018603901c6001018260ff0387901b8161137857fe5b0492506fffffffffffffffffffffffffffffffff83111561139857600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b828110156113cd576001820391505b608084901b929003828110156113e4576001820391505b829003608084901c82146113f457fe5b8881816113fd57fe5b04870196505050505050505b6fffffffffffffffffffffffffffffffff81111561108057600080fdfea2646970667358221220cc74fd9a84268c511761a44d1d491a07ab226e36efa3d385698a9cd8e91990c064736f6c63430007030033";

export class UsdcToUsdAssimilator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    oracle_: string,
    usdc_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UsdcToUsdAssimilator> {
    return super.deploy(
      oracle_,
      usdc_,
      overrides || {}
    ) as Promise<UsdcToUsdAssimilator>;
  }
  getDeployTransaction(
    oracle_: string,
    usdc_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oracle_, usdc_, overrides || {});
  }
  attach(address: string): UsdcToUsdAssimilator {
    return super.attach(address) as UsdcToUsdAssimilator;
  }
  connect(signer: Signer): UsdcToUsdAssimilator__factory {
    return super.connect(signer) as UsdcToUsdAssimilator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsdcToUsdAssimilatorInterface {
    return new utils.Interface(_abi) as UsdcToUsdAssimilatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsdcToUsdAssimilator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UsdcToUsdAssimilator;
  }
}
