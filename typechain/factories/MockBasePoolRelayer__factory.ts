/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBasePoolRelayer,
  MockBasePoolRelayerInterface,
} from "../MockBasePoolRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "hasCalledPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_newHasCalledPool",
        type: "bool",
      },
    ],
    name: "mockHasCalledPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f48061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063b18f4df8146037578063dd0a7e26146055575b600080fd5b605360048036036020811015604b57600080fd5b503515156083565b005b606f60048036036020811015606957600080fd5b503560b4565b604080519115158252519081900360200190f35b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b5060005460ff169056fea26469706673582212202cc2284f7a45291aed1025afc621a403cb33f9c8d84d72318346b5765114b6ba64736f6c63430007030033";

export class MockBasePoolRelayer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBasePoolRelayer> {
    return super.deploy(overrides || {}) as Promise<MockBasePoolRelayer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockBasePoolRelayer {
    return super.attach(address) as MockBasePoolRelayer;
  }
  connect(signer: Signer): MockBasePoolRelayer__factory {
    return super.connect(signer) as MockBasePoolRelayer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBasePoolRelayerInterface {
    return new utils.Interface(_abi) as MockBasePoolRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBasePoolRelayer {
    return new Contract(address, _abi, signerOrProvider) as MockBasePoolRelayer;
  }
}
