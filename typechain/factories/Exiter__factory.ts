/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Exiter, ExiterInterface } from "../Exiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "distributorCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "ensurePoolTokenSetSaved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "poolHasToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "poolTokenAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "poolTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "savePoolTokenSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161114f38038061114f83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6110b6610099600039806102a652806104be528061065552506110b66000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ab322301161005b5780637ab32230146100d3578063dfad281c146100e6578063e1c2341014610106578063fbfa77cf146101265761007d565b806329d76f291461008257806343f28ddd1461009757806355c524c1146100c0575b600080fd5b610095610090366004610c43565b61012e565b005b6100aa6100a5366004610c43565b610150565b6040516100b79190610ee3565b60405180910390f35b6100956100ce366004610cc3565b61016d565b6100956100e1366004610c43565b610266565b6100f96100f4366004610ca2565b610485565b6040516100b79190610eb7565b610119610114366004610c73565b6104a4565b6040516100b79190610ed8565b6100f96104bc565b60008181526001602052604090205460ff1661014d5761014d81610266565b50565b6000818152602081905260408120610167906104e0565b92915050565b610175610abc565b61018182840184610d30565b905060005b815151811015610260576000826000015182815181106101a257fe5b60200260200101519050600081905060008173ffffffffffffffffffffffffffffffffffffffff166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f957600080fd5b505afa15801561020d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102319190610c5b565b905061023c8161012e565b6000839050610250818388602001516104e4565b5050600190920191506101869050565b50505050565b6040517ff94d466800000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063f94d4668906102db908590600401610ee3565b60006040518083038186803b1580156102f357600080fd5b505afa158015610307573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261034d9190810190610b77565b505060008381526001602052604090205490915060ff16156103f9576000828152602081905260408120610380906104e0565b905060005b818110156103f25760008481526020819052604081208284037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906103cc90836106cd565b60008781526020819052604090209091506103e79082610707565b505050600101610385565b5050610434565b600082815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790555b60005b81518110156104805761047782828151811061044f57fe5b60200260200101516000808681526020019081526020016000206108b590919063ffffffff16565b50600101610437565b505050565b600082815260208190526040812061049d908361093d565b9392505050565b600082815260208190526040812061049d9083610959565b7f000000000000000000000000000000000000000000000000000000000000000081565b5490565b60606104ef83610987565b90506060815167ffffffffffffffff8111801561050b57600080fd5b50604051908082528060200260200182016040528015610535578160200160208202803683370190505b50905060008573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105739190610eb7565b60206040518083038186803b15801561058b57600080fd5b505afa15801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190610c5b565b905060606001826040516020016105db929190610fe6565b604051602081830303815290604052905060006105f6610ad4565b506040805160808101825286815260208101869052808201849052821515606082015290517f8bdb391300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638bdb391390610690908b9030908c908790600401610eec565b600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b50505050505050505050505050565b60008260000182815481106106de57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169392505050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205480156108ab5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808301910180821461081057600086600001828154811061077557fe5b600091825260209091200154875473ffffffffffffffffffffffffffffffffffffffff909116915081908890859081106107ab57fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260018881019092526040902090830190555b855486908061081b57fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff8716825260018881019091526040822091909155935061016792505050565b6000915050610167565b60006108c18383610959565b61093557508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915585549082528286019093526040902091909155610167565b506000610167565b815460009061094f9083106064610a3d565b61049d83836106cd565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001919091016020526040902054151590565b6060600061099483610150565b90508067ffffffffffffffff811180156109ad57600080fd5b506040519080825280602002602001820160405280156109d7578160200160208202803683370190505b50915060005b81811015610a365760008481526020819052604090206109fd90826106cd565b838281518110610a0957fe5b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101526001016109dd565b5050919050565b81610a4b57610a4b81610a4f565b5050565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60408051808201909152606081526000602082015290565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b80356101678161105e565b600082601f830112610b19578081fd5b8151610b2c610b2782611025565b610ffe565b818152915060208083019084810181840286018201871015610b4d57600080fd5b60005b84811015610b6c57815184529282019290820190600101610b50565b505050505092915050565b600080600060608486031215610b8b578283fd5b835167ffffffffffffffff80821115610ba2578485fd5b818601915086601f830112610bb5578485fd5b8151610bc3610b2782611025565b80828252602080830192508086018b828387028901011115610be357898afd5b8996505b84871015610c0e578051610bfa8161105e565b845260019690960195928101928101610be7565b508901519097509350505080821115610c25578384fd5b50610c3286828701610b09565b925050604084015190509250925092565b600060208284031215610c54578081fd5b5035919050565b600060208284031215610c6c578081fd5b5051919050565b60008060408385031215610c85578182fd5b823591506020830135610c978161105e565b809150509250929050565b60008060408385031215610cb4578182fd5b50508035926020909101359150565b60008060208385031215610cd5578182fd5b823567ffffffffffffffff80821115610cec578384fd5b818501915085601f830112610cff578384fd5b813581811115610d0d578485fd5b866020828501011115610d1e578485fd5b60209290920196919550909350505050565b60006020808385031215610d42578182fd5b823567ffffffffffffffff80821115610d59578384fd5b9084019060408287031215610d6c578384fd5b610d766040610ffe565b823582811115610d84578586fd5b83019150601f82018713610d96578485fd5b8135610da4610b2782611025565b81815285810190848701878402860188018b1015610dc0578889fd5b8895505b83861015610deb578035610dd78161105e565b835260019590950194918701918701610dc4565b50835250610dfd905087848601610afe565b848201528094505050505092915050565b6000815180845260208085019450808401835b83811015610e3d57815187529582019590820190600101610e21565b509495945050505050565b15159052565b60008151808452815b81811015610e7357602081850181015186830182015201610e57565b81811115610e845782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b90815260200190565b6000858252602073ffffffffffffffffffffffffffffffffffffffff8087168285015280861660408501525060806060840152610100830184516080808601528181518084526101208701915084830193508592505b80831015610f6a57610f548451611045565b8252928401926001929092019190840190610f42565b508387015193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff809250828682030160a0870152610fa88185610e0e565b935050506040850151818584030160c0860152610fc58382610e4e565b925050506060840151610fdb60e0850182610e48565b509695505050505050565b6040810160038410610ff457fe5b9281526020015290565b60405181810167ffffffffffffffff8111828210171561101d57600080fd5b604052919050565b600067ffffffffffffffff82111561103b578081fd5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8116811461014d57600080fdfea26469706673582212209b82ccba1ab7e053501a535e7bcd2b841958660bf2026de3a3b66e2edf45a96b64736f6c63430007010033";

export class Exiter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Exiter> {
    return super.deploy(_vault, overrides || {}) as Promise<Exiter>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): Exiter {
    return super.attach(address) as Exiter;
  }
  connect(signer: Signer): Exiter__factory {
    return super.connect(signer) as Exiter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExiterInterface {
    return new utils.Interface(_abi) as ExiterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Exiter {
    return new Contract(address, _abi, signerOrProvider) as Exiter;
  }
}
