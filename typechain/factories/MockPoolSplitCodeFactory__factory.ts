/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPoolSplitCodeFactory,
  MockPoolSplitCodeFactoryInterface,
} from "../MockPoolSplitCodeFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreationCodeContracts",
    outputs: [
      {
        internalType: "address",
        name: "contractA",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "isPoolFromFactory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b5060405161085b38038061085b833981016040819052610030916101a4565b806040518060200161004190610198565b601f1982820381018352601f909101166040528051819060006002820460a081905280830360e081905281855290915083610086816100e1602090811b6101aa17901c565b60601b6001600160601b03191660805282850180518382526100b2826100e1602090811b6101aa17901c565b6001600160601b0319606091821b811660c0529690935290529590951b90911661010052506101d29350505050565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f0908452915061012d6001600160a01b03831615156101ac610133565b50919050565b816101415761014181610145565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b605c806107ff83390190565b6000602082840312156101b5578081fd5b81516001600160a01b03811681146101cb578182fd5b9392505050565b60805160601c60a05160c05160601c60e0516101005160601c6105dc6102236000398061016e52508061021152508061011e528061028d52508061023252508060fd528061026952506105dc6000f3fe608060405234801561001057600080fd5b50600436106100665760003560e01c80636634b753116100505780636634b7531461009f5780638d928af8146100bf578063efc81a8c146100d457610066565b8062c194db1461006b578063174481fa14610089575b600080fd5b6100736100dc565b6040516100809190610535565b60405180910390f35b6100916100fb565b604051610080929190610503565b6100b26100ad3660046104ae565b610141565b604051610080919061052a565b6100c761016c565b60405161008091906104e2565b6100c7610190565b60606100f660405180602001604052806000815250610209565b905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000009091565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006100f6604051806020016040528060008152506102e2565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f0908452915061020373ffffffffffffffffffffffffffffffffffffffff831615156101ac61036d565b50919050565b8051604080517f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000818101858101848101602090810190965280855293957f00000000000000000000000000000000000000000000000000000000000000009592947f000000000000000000000000000000000000000000000000000000000000000094938801866000828a3c846000888301883c50602089810190898501016102d481838661037f565b505050505050505050919050565b6000806102ee836103f9565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555192935090917f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc9190a292915050565b8161037b5761037b81610441565b5050565b5b602081106103bd5781518352602092830192909101907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001610380565b905182516020929092036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169116179052565b6000606061040683610209565b905060008151602083016000f0905073ffffffffffffffffffffffffffffffffffffffff811661043a573d6000803e3d6000fd5b9392505050565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000602082840312156104bf578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461043a578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561056157858101830151858201604001528201610545565b818111156105725783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea2646970667358221220cee72e7765f321a62db4be1a71382953e2ecc313ace8f26fe1463518aecec12364736f6c634300070300336080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fc5cfeec2fb8eb6e2afc51f75c8b42608eaf8bcbe52d4111ef59068cdc242a4264736f6c63430007030033";

export class MockPoolSplitCodeFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPoolSplitCodeFactory> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<MockPoolSplitCodeFactory>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): MockPoolSplitCodeFactory {
    return super.attach(address) as MockPoolSplitCodeFactory;
  }
  connect(signer: Signer): MockPoolSplitCodeFactory__factory {
    return super.connect(signer) as MockPoolSplitCodeFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPoolSplitCodeFactoryInterface {
    return new utils.Interface(_abi) as MockPoolSplitCodeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPoolSplitCodeFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPoolSplitCodeFactory;
  }
}
