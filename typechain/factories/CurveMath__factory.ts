/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CurveMath, CurveMathInterface } from "../CurveMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gLiq",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_bals",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delta",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "psi_",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610443610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063ff8f8f121461003a575b600080fd5b610174600480360360a081101561005057600080fd5b8135919081019060408101602082013564010000000081111561007257600080fd5b82018360208201111561008457600080fd5b803590602001918460208302840111640100000000831117156100a657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184602083028401116401000000008311171561013657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610186945050505050565b60408051918252519081900360200190f35b8351600090815b818110156101eb5760006101bd8583815181106101a657fe5b60200260200101518a6101f690919063ffffffff16565b90506101de8883815181106101ce57fe5b6020026020010151828989610272565b909301925060010161018d565b505095945050505050565b6000826102055750600061026c565b8282028284828161021257fe5b0414610269576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806103ed6021913960400191505060405180910390fd5b90505b92915050565b6000838510156102f257600061029485680100000000000000008690036101f6565b9050808610156102e7578581036102ab818761036b565b92506102b783856101f6565b92506740000000000000008311156102d55767400000000000000092505b6102df83826101f6565b9250506102ec565b600091505b50610363565b6000610309856801000000000000000086016101f6565b90508086111561035c57808603610320818761036b565b925061032c83856101f6565b925067400000000000000083111561034a5767400000000000000092505b61035483826101f6565b925050610361565b600091505b505b949350505050565b60008082116103db57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816103e457fe5b04939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220776353b8a85ab672eff6a1309687d73c44921e9c44357ffa1a0710d0da97d59964736f6c63430007030033";

export class CurveMath__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveMath> {
    return super.deploy(overrides || {}) as Promise<CurveMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CurveMath {
    return super.attach(address) as CurveMath;
  }
  connect(signer: Signer): CurveMath__factory {
    return super.connect(signer) as CurveMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveMathInterface {
    return new utils.Interface(_abi) as CurveMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveMath {
    return new Contract(address, _abi, signerOrProvider) as CurveMath;
  }
}
