/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CurveMath, CurveMathInterface } from "../CurveMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "_gLiq",
        type: "int128",
      },
      {
        internalType: "int128[]",
        name: "_bals",
        type: "int128[]",
      },
      {
        internalType: "int128",
        name: "_beta",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "_delta",
        type: "int128",
      },
      {
        internalType: "int128[]",
        name: "_weights",
        type: "int128[]",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "int128",
        name: "psi_",
        type: "int128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610444610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80630c147f221461003a575b600080fd5b61017f600480360360a081101561005057600080fd5b8135600f0b919081019060408101602082013564010000000081111561007557600080fd5b82018360208201111561008757600080fd5b803590602001918460208302840111640100000000831117156100a957600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092958435600f90810b96602087013590910b9591945092506060810191506040013564010000000081111561010d57600080fd5b82018360208201111561011f57600080fd5b8035906020019184602083028401116401000000008311171561014157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610196945050505050565b60408051600f9290920b8252519081900360200190f35b8351600090815b818110156101fe5760006101d08583815181106101b657fe5b60200260200101518a600f0b61020990919063ffffffff16565b90506101f18883815181106101e157fe5b6020026020010151828989610268565b909301925060010161019d565b505095945050505050565b6000600f83810b9083900b0260401d7fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061025857506f7fffffffffffffffffffffffffffffff8113155b61026157600080fd5b9392505050565b600083600f0b85600f0b1215610308576000610294600f86900b68010000000000000000869003610209565b905080600f0b86600f0b12156102fd578581036102b5600f82900b8761039b565b92506102c5600f84900b85610209565b9250674000000000000000600f84900b13156102e75767400000000000000092505b6102f5600f84900b82610209565b925050610302565b600091505b50610393565b6000610323600f86900b680100000000000000008601610209565b905080600f0b86600f0b131561038c57808603610344600f82900b8761039b565b9250610354600f84900b85610209565b9250674000000000000000600f84900b13156103765767400000000000000092505b610384600f84900b82610209565b925050610391565b600091505b505b949350505050565b600081600f0b600014156103ae57600080fd5b600082600f0b604085600f0b901b816103c357fe5b0590507fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061025857506f7fffffffffffffffffffffffffffffff81131561026157600080fdfea264697066735822122084bdba5a1267f77c09c173fc6495160491bd9ba0fd4b641ffb32fe2e2577fb6e64736f6c63430007030033";

export class CurveMath__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveMath> {
    return super.deploy(overrides || {}) as Promise<CurveMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CurveMath {
    return super.attach(address) as CurveMath;
  }
  connect(signer: Signer): CurveMath__factory {
    return super.connect(signer) as CurveMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveMathInterface {
    return new utils.Interface(_abi) as CurveMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveMath {
    return new Contract(address, _abi, signerOrProvider) as CurveMath;
  }
}
