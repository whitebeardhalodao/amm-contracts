/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Assimilators, AssimilatorsInterface } from "../Assimilators";

const _abi = [
  {
    inputs: [],
    name: "iAsmltr",
    outputs: [
      {
        internalType: "contract IAssimilator",
        name: "",
        type: "IAssimilator",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_assim",
        type: "address",
      },
    ],
    name: "viewNumeraireBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quoteWeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_assim",
        type: "address",
      },
    ],
    name: "viewNumeraireBalanceLPRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_assim",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "viewRawAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_assim",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_baseWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quoteWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "viewRawAmountLPRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6108d7610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c80638f91c222116100655780638f91c222146101af57806393de19d5146101e8578063ac969a731461023a578063c9adcd9a1461026d57610092565b806305cf7bb414610097578063253b3345146100e857806353350e751461013857806375bb15361461017e575b600080fd5b6100d6600480360360608110156100ad57600080fd5b508035906020810135906040013573ffffffffffffffffffffffffffffffffffffffff166102b2565b60408051918252519081900360200190f35b8180156100f457600080fd5b506100d66004803603606081101561010b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610364565b81801561014457600080fd5b506100d66004803603604081101561015b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610412565b610186610499565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6100d6600480360360408110156101c557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561049e565b8180156101f457600080fd5b506100d66004803603608081101561020b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060408101359060600135610524565b6100d66004803603602081101561025057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166105cb565b6100d66004803603608081101561028357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060208101359060408101359060600135610666565b604080517f05cf7bb40000000000000000000000000000000000000000000000000000000081526004810185905260248101849052306044820152905160009173ffffffffffffffffffffffffffffffffffffffff8416916305cf7bb491606480820192602092909190829003018186803b15801561033057600080fd5b505afa158015610344573d6000803e3d6000fd5b505050506040513d602081101561035a57600080fd5b5051949350505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fef40df22000000000000000000000000000000000000000000000000000000001790526000906103f38582610715565b806020019051602081101561040757600080fd5b505195945050505050565b6040805160248082018490528251808303909101815260449091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f7695ab51000000000000000000000000000000000000000000000000000000001790526000906104858482610715565b806020019051602081101561035a57600080fd5b600081565b60008273ffffffffffffffffffffffffffffffffffffffff1663049ca270836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156104f157600080fd5b505afa158015610505573d6000803e3d6000fd5b505050506040513d602081101561051b57600080fd5b50519392505050565b60408051602481018590526044810184905230606482015260848082018490528251808303909101815260a49091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f15c60d51000000000000000000000000000000000000000000000000000000001790526000906105ab8682610715565b80602001905160208110156105bf57600080fd5b50519695505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff1663ac969a73306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561063457600080fd5b505afa158015610648573d6000803e3d6000fd5b505050506040513d602081101561065e57600080fd5b505192915050565b604080517fd22398c1000000000000000000000000000000000000000000000000000000008152600481018590526024810184905230604482015260648101839052905160009173ffffffffffffffffffffffffffffffffffffffff87169163d22398c191608480820192602092909190829003018186803b1580156106eb57600080fd5b505afa1580156106ff573d6000803e3d6000fd5b505050506040513d602081101561040757600080fd5b60606107368373ffffffffffffffffffffffffffffffffffffffff16610876565b61078b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061087d6025913960400191505060405180910390fd5b600060608473ffffffffffffffffffffffffffffffffffffffff16846040518082805190602001908083835b602083106107f457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016107b7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610854576040519150601f19603f3d011682016040523d82523d6000602084013e610859565b606091505b5091509150600082141561086e573d60208201fd5b949350505050565b3b15159056fe417373696d696c61746f72732f63616c6c65652d69732d6e6f742d612d636f6e7472616374a26469706673582212202440d06ea58518f5a9645a8b2644b92d540c091b76366177331c167f3987fcdd64736f6c63430007030033";

export class Assimilators__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Assimilators> {
    return super.deploy(overrides || {}) as Promise<Assimilators>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Assimilators {
    return super.attach(address) as Assimilators;
  }
  connect(signer: Signer): Assimilators__factory {
    return super.connect(signer) as Assimilators__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssimilatorsInterface {
    return new utils.Interface(_abi) as AssimilatorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Assimilators {
    return new Contract(address, _abi, signerOrProvider) as Assimilators;
  }
}
