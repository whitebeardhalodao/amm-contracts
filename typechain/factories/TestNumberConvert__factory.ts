/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestNumberConvert,
  TestNumberConvertInterface,
} from "../TestNumberConvert";

const _abi = [
  {
    inputs: [
      {
        internalType: "int128",
        name: "input",
        type: "int128",
      },
    ],
    name: "fromInt128ToUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806314dd1ce614610030575b600080fd5b6100506004803603602081101561004657600080fd5b5035600f0b610062565b60408051918252519081900360200190f35b60008061006e83610090565b9050600061007b82610099565b90506100868161013b565b925050505b919050565b600f0b60401b90565b6000816100a85750600061008b565b60008083136100ba57826000036100bc565b825b905060006100c9826101fb565b905060708110156100e2578060700382901b91506100f5565b60708111156100f5576070810382901c91505b6dffffffffffffffffffffffffffff909116613fff820160701b17906000841215610130576f80000000000000000000000000000000821791505b5060801b905061008b565b6000617fff60f083901c16613fff81101561015a57600091505061008b565b6f80000000000000000000000000000000608084901c1061017a57600080fd5b6140fe81111561018957600080fd5b6e0100000000000000000000000000006dffffffffffffffffffffffffffff608085901c161761406f8210156101c55761406f8290031c6101f4565b61406f8211156101f4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbf9182011b5b9392505050565b600080821161020957600080fd5b6000700100000000000000000000000000000000831061022b57608092831c92015b68010000000000000000831061024357604092831c92015b640100000000831061025757602092831c92015b62010000831061026957601092831c92015b610100831061027a57600892831c92015b6010831061028a57600492831c92015b6004831061029a57600292831c92015b600283106102a6576001015b9291505056fea2646970667358221220a1b24e7a5eb0f05128401e10f8186a06e45998b62059166262113ca1c7cfadfb64736f6c63430007030033";

export class TestNumberConvert__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestNumberConvert> {
    return super.deploy(overrides || {}) as Promise<TestNumberConvert>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestNumberConvert {
    return super.attach(address) as TestNumberConvert;
  }
  connect(signer: Signer): TestNumberConvert__factory {
    return super.connect(signer) as TestNumberConvert__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNumberConvertInterface {
    return new utils.Interface(_abi) as TestNumberConvertInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestNumberConvert {
    return new Contract(address, _abi, signerOrProvider) as TestNumberConvert;
  }
}
