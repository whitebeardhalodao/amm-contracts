/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FXPool, FXPoolInterface } from "../FXPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_assetWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "contract ProportionalLiquidity",
        name: "proportionalLiquidty_",
        type: "address",
      },
      {
        internalType: "contract AmmV1Swaps",
        name: "swaps_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AssetIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "derivative",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assimilator",
        type: "address",
      },
    ],
    name: "AssimilatorIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epsilon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lambda",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    name: "TestingSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "ix",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epsilon",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assim",
        type: "address",
      },
    ],
    name: "getAssimilator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeights",
    outputs: [
      {
        internalType: "int128[]",
        name: "",
        type: "int128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeightsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lambda",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assimAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "assimilator",
        type: "tuple",
      },
    ],
    name: "setAssimilator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAtHalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epsilon",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lambda",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistingStage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6102006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526015805463ff0000001962ffffff1990911662010000171663010000001790553480156200005757600080fd5b50604051620059cc380380620059cc8339810160408190526200007a916200124e565b8a60018b8b8b8c516001600160401b03811180156200009857600080fd5b50604051908082528060200260200182016040528015620000c3578160200160208202803683370190505b508a8a8a33828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b8152505050604051806040016040528060128152602001714d6f636b6564205377697373204672616e6360701b815250600390805190602001906200016292919062000f70565b506040805180820190915260038082526221a42360e91b60209092019182526200018f9160049162000f70565b505060058054600860ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200020290506276a70083111561019462000407565b6200021662278d0082111561019562000407565b429091016101608190520161018052855162000238906002111560c862000407565b62000252620002466200041c565b8751111560c962000407565b62000268866200042160201b620017971760201c565b62000273846200042d565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f90620002a4908d906004016200148a565b602060405180830381600087803b158015620002bf57600080fd5b505af1158015620002d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002fa919062001235565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d2906200032f9084908b908b90600401620013f0565b600060405180830381600087803b1580156200034a57600080fd5b505af11580156200035f573d6000803e3d6000fd5b50505050806101a0818152505050505050505050505050506200039d886000815181106200038957fe5b6020026020010151620004b960201b60201c565b6101c0528751620003b690899060019081106200038957fe5b6101e052600980546001600160a01b038085166001600160a01b031992831617909255600a805492841692909116919091179055620003f687876200058d565b50505050505050505050506200170a565b816200041857620004188162000821565b5050565b600290565b80620004188162000874565b6200044264e8d4a5100082101560cb62000407565b6200045a67016345785d8a000082111560ca62000407565b620004798160c0600854620008fe60201b620017a1179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620004ae908390620016a9565b60405180910390a150565b60006001600160a01b038216301415620004dd5750670de0b6b3a764000062000588565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200051957600080fd5b505afa1580156200052e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005549190620013a0565b60ff1690506000620005736012836200091360201b620017b71760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b8051600214620005ba5760405162461bcd60e51b8152600401620005b190620014e5565b60405180910390fd5b6005825181620005c657fe5b0615620005e75760405162461bcd60e51b8152600401620005b1906200152a565b60005b81518110156200081c57600081600502905060138482815181106200060b57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583516012908590839081106200065857fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558351601490859060028401908110620006a857fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558351849060028301908110620006f557fe5b60200260200101516001600160a01b03168482815181106200071357fe5b60200260200101516001600160a01b031614620007785760128482600201815181106200073c57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b620008128482815181106200078957fe5b6020026020010151858360010181518110620007a157fe5b6020026020010151868460020181518110620007b957fe5b6020026020010151878560030181518110620007d157fe5b6020026020010151888660040181518110620007e957fe5b6020026020010151888881518110620007fe57fe5b60200260200101516200092b60201b60201c565b50600101620005ea565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200088557620008fb565b6000816000815181106200089557fe5b602002602001015190506000600190505b82518110156200081c576000838281518110620008bf57fe5b60200260200101519050620008f0816001600160a01b0316846001600160a01b03161060656200040760201b60201c565b9150600101620008a6565b50565b6001600160401b03811b1992909216911b1790565b60006200092583831115600162000407565b50900390565b6001600160a01b038616620009545760405162461bcd60e51b8152600401620005b190620015c2565b6001600160a01b0385166200097d5760405162461bcd60e51b8152600401620005b1906200164c565b6001600160a01b038416620009a65760405162461bcd60e51b8152600401620005b1906200149f565b6001600160a01b038316620009cf5760405162461bcd60e51b8152600401620005b19062001570565b670de0b6b3a76400008110620009f95760405162461bcd60e51b8152600401620005b1906200160a565b836001600160a01b0316866001600160a01b03161462000a9d5760405163095ea7b360e01b81526001600160a01b0387169063095ea7b39062000a4590859060001990600401620013d7565b602060405180830381600087803b15801562000a6057600080fd5b505af115801562000a75573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9b919062001213565b505b62000aa762000ff5565b506040805180820182526001600160a01b038088168252600f5460ff90811660208085019182528b84166000908152601090915294909420835181549551909216600160a01b0260ff60a01b19929093166001600160a01b031990951694909417161790915562000b1762000ff5565b506040805180820182526001600160a01b038681168252600f5460ff90811660208085019182528a84166000908152601082529586208551815493516001600160a01b031990941695169490941760ff60a01b1916600160a01b92909316919091029190911790915590919062000be29062000ba990600190670de0b6b3a76400009062000d9d811b620017cd17901c565b62000bcb670de0b6b3a76400008762000d9d60201b620017cd1790919060201c565b600f0b62000ddf60201b6200181d1790919060201c565b600e805460018082019092557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd600282040180549183166010026101000a6001600160801b0381810219909316600f86810b94909416919091021790558054918201815560005284517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802909101805460208701516001600160a01b03199091166001600160a01b039384161760ff60a01b1916600160a01b60ff9092169190910217905560405191925088811691908b16907f69745294f8c4916d2a4ca68ea4e3be1d5990927ba68481e69368deb3c4395d029062000ce3908890620016a9565b60405180910390a3866001600160a01b0316896001600160a01b03168a6001600160a01b0316600080516020620059ac8339815191528b60405162000d299190620013c3565b60405180910390a4856001600160a01b0316886001600160a01b03161462000d9257866001600160a01b0316896001600160a01b0316886001600160a01b0316600080516020620059ac8339815191528960405162000d899190620013c3565b60405180910390a45b505050505050505050565b60008162000daa57600080fd5b600062000db8848462000e15565b905060016001607f1b036001600160801b038216111562000dd857600080fd5b9392505050565b6000600f83810b9083900b0160016001607f1b0319811280159062000e0b575060016001607f1b038113155b62000dd857600080fd5b60008162000e2257600080fd5b60006001600160c01b03841162000e4a5782604085901b8162000e4157fe5b04905062000f5b565b60c084811c640100000000811062000e64576020918201911c5b62010000811062000e77576010918201911c5b610100811062000e89576008918201911c5b6010811062000e9a576004918201911c5b6004811062000eab576002918201911c5b6002811062000ebb576001820191505b60bf820360018603901c6001018260ff0387901b8162000ed757fe5b0492506001600160801b0383111562000eef57600080fd5b608085901c83026001600160801b038616840260c088901c604089901b8281101562000f1c576001820391505b608084901b9290038281101562000f34576001820391505b829003608084901c821462000f4557fe5b88818162000f4f57fe5b04870196505050505050505b6001600160801b0381111562000dd857600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000fb357805160ff191683800117855562000fe3565b8280016001018555821562000fe3579182015b8281111562000fe357825182559160200191906001019062000fc6565b5062000ff19291506200100c565b5090565b604080518082019091526000808252602082015290565b5b8082111562000ff157600081556001016200100d565b600082601f83011262001034578081fd5b81516200104b6200104582620016d6565b620016b2565b8181529150602080830190848101818402860182018710156200106d57600080fd5b60005b84811015620010995781516200108681620016f4565b8452928201929082019060010162001070565b505050505092915050565b600082601f830112620010b5578081fd5b8151620010c66200104582620016d6565b818152915060208083019084810181840286018201871015620010e857600080fd5b60005b84811015620010995781516200110181620016f4565b84529282019290820190600101620010eb565b600082601f83011262001125578081fd5b8151620011366200104582620016d6565b8181529150602080830190848101818402860182018710156200115857600080fd5b60005b8481101562001099578151845292820192908201906001016200115b565b80516200058881620016f4565b600082601f83011262001197578081fd5b81516001600160401b03811115620011ab57fe5b6020620011c1601f8301601f19168201620016b2565b92508183528481838601011115620011d857600080fd5b60005b82811015620011f8578481018201518482018301528101620011db565b828111156200120a5760008284860101525b50505092915050565b60006020828403121562001225578081fd5b8151801515811462000dd8578182fd5b60006020828403121562001247578081fd5b5051919050565b60008060008060008060008060008060006101608c8e03121562001270578687fd5b6200127b8c62001179565b60208d0151909b506001600160401b0381111562001297578788fd5b620012a58e828f0162001186565b60408e0151909b5090506001600160401b03811115620012c3578788fd5b620012d18e828f0162001186565b60608e0151909a5090506001600160401b03811115620012ef578788fd5b620012fd8e828f01620010a4565b60808e015190995090506001600160401b038111156200131b578788fd5b620013298e828f0162001023565b60a08e015190985090506001600160401b0381111562001347578687fd5b620013558e828f0162001114565b96505060c08c0151945060e08c015193506101008c015192506200137d6101208d0162001179565b91506200138e6101408d0162001179565b90509295989b509295989b9093969950565b600060208284031215620013b2578081fd5b815160ff8116811462000dd8578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006060820185835260206060818501528186518084526080860191508288019350845b818110156200143b5784516001600160a01b03168352938301939183019160010162001414565b505084810360408601528551808252908201925081860190845b818110156200147c5782516001600160a01b03168552938301939183019160010162001455565b509298975050505050505050565b60208101600383106200149957fe5b91905290565b60208082526026908201527f43757276652f726573657276652d63616e6e6f742d62652d7a65726f74682d6160408201526564647265737360d01b606082015260800190565b60208082526025908201527f43757276652f6173736574576569676874732d6d7573742d62652d6c656e6774604082015264682d74776f60d81b606082015260800190565b60208082526026908201527f43757276652f6173736574732d6d7573742d62652d646976697369626c652d62604082015265792d6669766560d01b606082015260800190565b60208082526032908201527f43757276652f726573657276652d617373696d696c61746f722d63616e6e6f746040820152712d62652d7a65726f74682d6164647265737360701b606082015260800190565b60208082526028908201527f43757276652f6e756d6572616972652d63616e6e6f742d62652d7a65726f74686040820152672d6164647265737360c01b606082015260800190565b60208082526022908201527f43757276652f7765696768742d6d7573742d62652d6c6573732d7468616e2d6f6040820152616e6560f01b606082015260800190565b60208082526034908201527f43757276652f6e756d6572616972652d617373696d696c61746f722d63616e6e60408201527f6f742d62652d7a65726f74682d61646472657373000000000000000000000000606082015260800190565b90815260200190565b6040518181016001600160401b0381118282101715620016ce57fe5b604052919050565b60006001600160401b03821115620016ea57fe5b5060209081020190565b6001600160a01b0381168114620008fb57600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516101e0516142166200179660003980611a81525080611a475250806109755250806119ff5250806119db525080610cfb5250806110e7525080611bac525080611bee525080611bcd525080610cd7525080610c6152506142166000f3fe608060405234801561001057600080fd5b50600436106103575760003560e01c806387ec6817116101c8578063addd509911610104578063d5c096c4116100a2578063dad0be611161007c578063dad0be61146106d3578063db1d0fd5146106db578063dd62ed3e146106e3578063eac8f5b8146106f657610357565b8063d5c096c41461069a578063d828bb88146106ad578063d851fdfd146106c057610357565b8063c0046e39116100de578063c0046e391461064b578063caa6fea41461065e578063cf35bdd014610666578063d505accf1461068757610357565b8063addd509914610605578063b5f163ff14610618578063bb6d485a1461062b57610357565b80639faa3c9111610171578063a89d490c1161014b578063a89d490c146105cf578063a8e9d528146105d7578063a9059cbb146105ea578063aaabadc5146105fd57610357565b80639faa3c91146105ac578063a457c2d7146105b4578063a7ba9fb1146105c757610357565b806395d89b41116101a257806395d89b41146105895780639d1dd428146105915780639d2c110c1461059957610357565b806387ec681714610566578063893d20e8146105795780638d928af81461058157610357565b806338fff2d01161029757806367e4ac2c1161024057806379f93a671161021a57806379f93a67146105185780637ecebe00146105205780638334278d14610533578063851c1bb31461055357610357565b806367e4ac2c146104cf57806370a08231146104e457806374f3b009146104f757610357565b806355c676281161027157806355c67628146104935780636028bfd41461049b57806361718b83146104bc57610357565b806338fff2d014610465578063395093511461046d57806350dd6ed91461048057610357565b80631c0de0511161030457806323b872dd116102de57806323b872dd14610422578063313ce567146104355780633644e5151461044a57806338e9922e1461045257610357565b80631c0de051146103e15780631dd746ea146103f857806322acb8671461040d57610357565b806312b495a81161033557806312b495a8146103a257806316c38b3c146103b757806318160ddd146103cc57610357565b8063054f7d9c1461035c57806306fdde031461037a578063095ea7b31461038f575b600080fd5b610364610709565b6040516103719190613c33565b60405180910390f35b610382610712565b6040516103719190613ea9565b61036461039d366004613563565b6107c6565b6103aa6107dd565b6040516103719190613d8c565b6103ca6103c53660046135c1565b6107e6565b005b6103d46107fa565b6040516103719190613c56565b6103e9610800565b60405161037193929190613c3e565b610400610829565b6040516103719190613bf2565b610415610838565b6040516103719190613b5e565b610364610430366004613433565b6108b5565b61043d610947565b6040516103719190614152565b6103d4610950565b6103ca610460366004613910565b61095a565b6103d4610973565b61036461047b366004613563565b610997565b6103ca61048e366004613752565b6109d2565b6103d46109f0565b6104ae6104a93660046135f9565b610a01565b604051610371929190614116565b6103ca6104ca3660046134e3565b610a38565b6104d7610acc565b6040516103719190613ba5565b6103d46104f23660046133df565b610b53565b61050a6105053660046135f9565b610b72565b604051610371929190613c05565b6103d4610c15565b6103d461052e3660046133df565b610c1b565b610546610541366004613910565b610c36565b6040516103719190613b2e565b6103d46105613660046136f6565b610c5d565b6104ae6105743660046135f9565b610caf565b610546610cd5565b610546610cf9565b610382610d1d565b610364610d9c565b6103d46105a7366004613819565b610dab565b6103aa610f09565b6103646105c2366004613563565b610f26565b6103aa610f64565b6103d4610f81565b6105466105e5366004613910565b610f87565b6103646105f8366004613563565b610f94565b610546610fa1565b6105466106133660046133df565b610fab565b6103aa610626366004613910565b610fc6565b61063e6106393660046133df565b610ffa565b6040516103719190614108565b610546610659366004613910565b611054565b610364611061565b610679610674366004613910565b61106f565b604051610371929190613b42565b6103ca610695366004613473565b6110b2565b61050a6106a83660046135f9565b6111fb565b6103ca6106bb3660046139bb565b61132c565b6103aa6106ce366004613910565b611690565b6103aa6116c9565b6103aa6116d2565b6103d46106f13660046133fb565b6116db565b61063e610704366004613910565b611736565b60155460ff1681565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107bc5780601f10610791576101008083540402835291602001916107bc565b820191906000526020600020905b81548152906001019060200180831161079f57829003601f168201915b5050505050905090565b60006107d3338484611872565b5060015b92915050565b600c54600f0b81565b6107ee6118da565b6107f781611920565b50565b60025490565b600080600061080d6119bc565b1592506108186119d9565b91506108226119fd565b9050909192565b6060610833611a21565b905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156107bc57602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f010492830192600103820291508084116108755790505050505050905090565b6000806108c285336116db565b90506108e6336001600160a01b03871614806108de5750838210155b61019e611abd565b6108f1858585611acb565b336001600160a01b0386161480159061092a57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b1561093c5761093c8533858403611872565b506001949350505050565b60055460ff1690565b6000610833611ba8565b6109626118da565b61096a611c45565b6107f781611c5a565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107d39185906109cd9086611cc5565b611872565b6109da6118da565b6109e2611c45565b6109ec8282611cea565b5050565b6008546000906108339060c0611e02565b60006060610a178651610a12611e10565b611e15565b610a2c89898989898989611e22611f57611fbd565b97509795505050505050565b6001600160a01b0391821660009081526010602090815260409091208251815493909201517fffffffffffffffffffffffff000000000000000000000000000000000000000090931691909316177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000060ff90921691909102179055565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610b4a57600084815260209081902060408051808201909152908401546001600160a01b038116825274010000000000000000000000000000000000000000900460ff1681830152825260019092019101610af0565b50505050905090565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610b9c610b81610cf9565b6001600160a01b0316336001600160a01b03161460cd611abd565b610bb1610ba7610973565b82146101f4611abd565b6060610bbb611a21565b9050610bc7888261214d565b6000606080610bdc8e8e8e8e8e8e8a8f611e22565b925092509250610bec8d846121ae565b610bf68285611f57565b610c008185611f57565b909550935050505b5097509795505050505050565b600e5490565b6001600160a01b031660009081526006602052604090205490565b60148181548110610c4357fe5b6000918252602090912001546001600160a01b0316905081565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610c92929190613ab8565b604051602081830303815290604052805190602001209050919050565b60006060610cc08651610a12611e10565b610a2c898989898989896121b8612326611fbd565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107bc5780601f10610791576101008083540402835291602001916107bc565b60155462010000900460ff1681565b60008360800151610dbd610b81610cf9565b610dc8610ba7610973565b6000610dd78660200151612387565b90506000610de88760400151612387565b9050600087516001811115610df957fe5b1415610e89576000610e0e8860600151612392565b90506000818960600151039050610e328960200151610e2d83876123b3565b6123bf565b60608901829052610e4388856123b3565b9750610e4f87846123b3565b9650610e5f8960600151856123b3565b60608a01526000610e718a8a8a6123d1565b9050610e7d818561250e565b96505050505050610f01565b610e9386836123b3565b9550610e9f85826123b3565b9450610eaf8760600151826123b3565b60608801526000610ec188888861251a565b9050610ecd8184612523565b90506000610eda8261252f565b905060008282039050610ef58a60200151610e2d83886123b3565b509450610f0192505050565b509392505050565b600b547001000000000000000000000000000000009004600f0b81565b600080610f3333856116db565b9050808310610f4d57610f4833856000611872565b610f5a565b610f5a3385858403611872565b5060019392505050565b600c547001000000000000000000000000000000009004600f0b81565b600f5490565b60138181548110610c4357fe5b60006107d3338484611acb565b6000610833612555565b6011602052600090815260409020546001600160a01b031681565b600e8181548110610fd357fe5b9060005260206000209060029182820401919006601002915054906101000a9004600f0b81565b6110026132d9565b506001600160a01b0390811660009081526010602090815260409182902082518084019093525492831682527401000000000000000000000000000000000000000090920460ff169181019190915290565b60128181548110610c4357fe5b601554610100900460ff1681565b600f818154811061107c57fe5b6000918252602090912001546001600160a01b038116915074010000000000000000000000000000000000000000900460ff1682565b6110c08442111560d1611abd565b6001600160a01b0387166000908152600660209081526040808320549051909291611117917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613c7e565b604051602081830303815290604052805190602001209050600061113a826125cf565b90506000600182888888604051600081526020016040526040516111619493929190613d0e565b6020604051602081039080840390855afa158015611183573d6000803e3d6000fd5b5050604051601f19015191506111c590506001600160a01b038216158015906111bd57508b6001600160a01b0316826001600160a01b0316145b6101f8611abd565b6001600160a01b038b1660009081526006602052604090206001850190556111ee8b8b8b611872565b5050505050505050505050565b6060808861120a610b81610cf9565b611215610ba7610973565b606061121f611a21565b90506112296107fa565b6112dc576000606061123e8d8d8d868b6125eb565b9150915061125761124d612772565b83101560cc611abd565b6112696000611264612772565b612779565b61127c8b611275612772565b8403612779565b6112868184612326565b8061128f611e10565b67ffffffffffffffff811180156112a557600080fd5b506040519080825280602002602001820160405280156112cf578160200160208202803683370190505b5095509550505050610c08565b6112e6888261214d565b60006060806112fb8e8e8e8e8e8e8a8f6121b8565b92509250925061130b8c84612779565b6113158285612326565b61131f8185611f57565b9095509350610c08915050565b8460001080156113435750670de0b6b3a764000085105b6113685760405162461bcd60e51b815260040161135f9061402c565b60405180910390fd5b8484106113875760405162461bcd60e51b815260040161135f90613ebc565b6706f05b59d3b200008311156113af5760405162461bcd60e51b815260040161135f90613ff5565b662386f26fc100008211156113d65760405162461bcd60e51b815260040161135f90614063565b670de0b6b3a76400008111156113fe5760405162461bcd60e51b815260040161135f906140d1565b30600061140a82612783565b905061142160018801670de0b6b3a76400006117cd565b600b8054600f9290920b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921691909117905561147c60018701670de0b6b3a76400006117cd565b600b80546fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000600f94850b92909216820217918290556000926114cc9280820b820b929004900b6129f9565b905060126115056114ea836114e16002612a4d565b600f0b90612a6b565b6114fc89670de0b6b3a76400006117cd565b600f0b90612ac2565b600c805492909101600f0b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921691909117905561156160018601670de0b6b3a76400006117cd565b600c8054600f9290920b6fffffffffffffffffffffffffffffffff9081167001000000000000000000000000000000000292169190911790556115af60018501670de0b6b3a76400006117cd565b600d8054600f9290920b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909216919091179055600061160084612783565b905080600f0b83600f0b12156116285760405162461bcd60e51b815260040161135f9061409a565b600c547fb399767364127d5a414f09f214fa5606358052b764894b1084ce5ef067c05a97908a908a9061166a90600f90810b900b670de0b6b3a7640000612b35565b898960405161167d95949392919061412f565b60405180910390a1505050505050505050565b6000600e828154811061169f57fe5b90600052602060002090600291828204019190066010029054906101000a9004600f0b9050919050565b600d54600f0b81565b600b54600f0b81565b60006116e5610cf9565b6001600160a01b0316826001600160a01b0316141561172557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6107d7565b61172f8383612bb7565b90506107d7565b61173e6132d9565b600f828154811061174b57fe5b6000918252602091829020604080518082019091529101546001600160a01b038116825274010000000000000000000000000000000000000000900460ff169181019190915292915050565b806109ec81612be2565b67ffffffffffffffff811b1992909216911b1790565b60006117c7838311156001611abd565b50900390565b6000816117d957600080fd5b60006117e58484612c5b565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff8216111561181657600080fd5b9392505050565b6000600f83810b9083900b017fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061186957506f7fffffffffffffffffffffffffffffff8113155b61181657600080fd5b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906118cd908590613c56565b60405180910390a3505050565b60006119096000357fffffffff0000000000000000000000000000000000000000000000000000000016610c5d565b90506107f76119188233612dd1565b610191611abd565b80156119405761193b6119316119d9565b4210610193611abd565b611955565b61195561194b6119fd565b42106101a9611abd565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be64906119b1908390613c33565b60405180910390a150565b60006119c66119fd565b42118061083357505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6040805160028082526060808301845292839291906020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110611a7357fe5b6020026020010181815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110611aad57fe5b6020908102919091010152905090565b816109ec576109ec81612eba565b611ae26001600160a01b0384161515610198611abd565b611af96001600160a01b0383161515610199611abd565b611b04838383611fb8565b6001600160a01b038316600090815260208190526040902054611b279082612f0d565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611b569082611cc5565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906118cd908590613c56565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611c15612f2f565b30604051602001611c2a959493929190613cb2565b60405160208183030381529060405280519060200120905090565b611c58611c506119bc565b610192611abd565b565b611c6d64e8d4a5100082101560cb611abd565b611c8367016345785d8a000082111560ca611abd565b600854611c92908260c06117a1565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906119b1908390613c56565b6000828201838110156118165760405162461bcd60e51b815260040161135f90613ef3565b6000611cf4610973565b90506000611d00610cf9565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b8152600401611d2d929190613cf7565b60806040518083038186803b158015611d4557600080fd5b505afa158015611d59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7d919061397b565b6040517f18e736d40000000000000000000000000000000000000000000000000000000081529094506001600160a01b03851693506318e736d49250611dca915085908790600401613cde565b600060405180830381600087803b158015611de457600080fd5b505af1158015611df8573d6000803e3d6000fd5b5050505050505050565b1c67ffffffffffffffff1690565b600290565b6109ec8183146067611abd565b6000606080606084806020019051810190611e3d919061358e565b905088516002148015611e51575080516002145b611e6d5760405162461bcd60e51b815260040161135f90613fbe565b6040805160028082526060820183526305f5e10096509091602083019080368337019050509150600082600081518110611ea357fe5b602002602001018181525050600082600181518110611ebe57fe5b6020908102919091010152604080516002808252606082019092529081602001602082028036833701905050925080600081518110611ef957fe5b602002602001015183600081518110611f0e57fe5b60200260200101818152505080600181518110611f2757fe5b602002602001015183600181518110611f3c57fe5b60200260200101818152505050985098509895505050505050565b60005b611f62611e10565b811015611fb857611f99838281518110611f7857fe5b6020026020010151838381518110611f8c57fe5b6020026020010151612f33565b838281518110611fa557fe5b6020908102919091010152600101611f5a565b505050565b3330146120ac576000306001600160a01b0316600036604051611fe1929190613ae8565b6000604051808303816000865af19150503d806000811461201e576040519150601f19603f3d011682016040523d82523d6000602084013e612023565b606091505b50509050806000811461203257fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb00000000000000000000000000000000000000000000000000000000811461208e573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606120b6611a21565b90506120c2878261214d565b600060606120da8c8c8c8c8c8c898d8d63ffffffff16565b50915091506120ed81848663ffffffff16565b8051601f1982018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60005b612158611e10565b811015611fb85761218f83828151811061216e57fe5b602002602001015183838151811061218257fe5b6020026020010151612f84565b83828151811061219b57fe5b6020908102919091010152600101612150565b6109ec8282612fba565b60006060806060848060200190518101906121d3919061358e565b9050885160021480156121e7575080516002145b6122035760405162461bcd60e51b815260040161135f90613fbe565b60006060600960009054906101000a90046001600160a01b03166001600160a01b0316636e38abdf308560008151811061223957fe5b60200260200101516040518363ffffffff1660e01b815260040161225e929190613d73565b600060405180830381600087803b15801561227857600080fd5b505af115801561228c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122b49190810190613940565b604080516002808252606082019092529294509092508160200160208202803683370190505093506002846000815181106122eb57fe5b60200260200101818152505060028460018151811061230657fe5b6020908102919091010152909d909c50919a509098505050505050505050565b60005b612331611e10565b811015611fb85761236883828151811061234757fe5b602002602001015183838151811061235b57fe5b6020026020010151613073565b83828151811061237457fe5b6020908102919091010152600101612329565b60006107d7826130c1565b6000806123a76123a06109f0565b849061317d565b905061181683826117b7565b60006118168383612f84565b6109ec6123cb836131d7565b826131dd565b60006123db6132d9565b60405180604001604052806123fd64e8d4a5100087816123f757fe5b04612a4d565b600f0b815260200161241464e8d4a51000866123f7565b600f0b9052600a54602087015160408089015160608a015191517f7c4eaaac0000000000000000000000000000000000000000000000000000000081529495506000946001600160a01b0390941693637c4eaaac9361247c9330938993909190600401613d2c565b60206040518083038186803b15801561249457600080fd5b505afa1580156124a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124cc9190613928565b90507fb498cafe3e3088f7b7b5cf6afd13373111c6ffee5ce1618f58a2adf2cc9c5a83816040516124fd9190613c56565b60405180910390a195945050505050565b60006118168383612f33565b50506060015190565b60006118168383613073565b60006107d761254e61253f6109f0565b670de0b6b3a7640000906117b7565b8390613073565b600061255f610cf9565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561259757600080fd5b505afa1580156125ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190613736565b60006125d9611ba8565b82604051602001610c92929190613af8565b600060608083806020019051810190612604919061358e565b905061260e611e10565b81511461262d5760405162461bcd60e51b815260040161135f90613f2a565b60006060600960009054906101000a90046001600160a01b03166001600160a01b0316636e38abdf308560008151811061266357fe5b60200260200101516040518363ffffffff1660e01b8152600401612688929190613d73565b600060405180830381600087803b1580156126a257600080fd5b505af11580156126b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126de9190810190613940565b604080516002808252606082019092529297508794509092508160200160208202803683370190505093508060008151811061271657fe5b60200260200101518460008151811061272b57fe5b6020026020010181815250508060018151811061274457fe5b60200260200101518460018151811061275957fe5b6020026020010181815250505050509550959350505050565b620f424090565b6109ec82826131e7565b60408051600280825260608083018452600093849391929060208301908036833701905050905060005b8151811015612926576040517feac8f5b80000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063eac8f5b8906127fe908590600401613c56565b604080518083038186803b15801561281557600080fd5b505afa158015612829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061284d91906137c1565b516040517fac969a7300000000000000000000000000000000000000000000000000000000815290915060009073__$28039fd024dee0e5c388b469625a331089$__9063ac969a73906128a4908590600401613b2e565b60206040518083038186803b1580156128bc57600080fd5b505af41580156128d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128f491906137a0565b90508084848151811061290357fe5b600f92830b90920b602092830291909101909101529390930192506001016127ad565b50600b54600c546040517f0c147f2200000000000000000000000000000000000000000000000000000000815273__$374ff109b8599801873fe38f05adb3baa6$__92630c147f22926129a19287928792700100000000000000000000000000000000909104600f90810b9291900b90600e90600401613d9a565b60206040518083038186803b1580156129b957600080fd5b505af41580156129cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f191906137a0565b949350505050565b6000600f82810b9084900b037fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061186957506f7fffffffffffffffffffffffffffffff81131561181657600080fd5b6000677fffffffffffffff821115612a6457600080fd5b5060401b90565b6000600f83810b9083900b0260401d7fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061186957506f7fffffffffffffffffffffffffffffff81131561181657600080fd5b600081600f0b60001415612ad557600080fd5b600082600f0b604085600f0b901b81612aea57fe5b0590507fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061186957506f7fffffffffffffffffffffffffffffff81131561181657600080fd5b600081612b44575060006107d7565b600083600f0b1215612b5557600080fd5b600f83900b6fffffffffffffffffffffffffffffffff8316810260401c90608084901c0277ffffffffffffffffffffffffffffffffffffffffffffffff811115612b9e57600080fd5b60401b8119811115612baf57600080fd5b019392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600281511015612bf1576107f7565b600081600081518110612c0057fe5b602002602001015190506000600190505b8251811015611fb8576000838281518110612c2857fe5b60200260200101519050612c51816001600160a01b0316846001600160a01b0316106065611abd565b9150600101612c11565b600081612c6757600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff8411612c9d5782604085901b81612c9557fe5b049050612db4565b60c084811c6401000000008110612cb6576020918201911c5b620100008110612cc8576010918201911c5b6101008110612cd9576008918201911c5b60108110612ce9576004918201911c5b60048110612cf9576002918201911c5b60028110612d08576001820191505b60bf820360018603901c6001018260ff0387901b81612d2357fe5b0492506fffffffffffffffffffffffffffffffff831115612d4357600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015612d78576001820391505b608084901b92900382811015612d8f576001820391505b829003608084901c8214612d9f57fe5b888181612da857fe5b04870196505050505050505b6fffffffffffffffffffffffffffffffff81111561181657600080fd5b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612df0610cd5565b6001600160a01b031614158015612e0b5750612e0b83613275565b15612e3357612e18610cd5565b6001600160a01b0316336001600160a01b03161490506107d7565b612e3b612555565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612e6a93929190613c5f565b60206040518083038186803b158015612e8257600080fd5b505afa158015612e96573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172f91906135dd565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000828211156117c75760405162461bcd60e51b815260040161135f90613f87565b4690565b6000612f428215156004611abd565b82612f4f575060006107d7565b670de0b6b3a764000083810290612f7290858381612f6957fe5b04146005611abd565b828181612f7b57fe5b049150506107d7565b6000828202612fa8841580612fa1575083858381612f9e57fe5b04145b6003611abd565b670de0b6b3a764000090049392505050565b612fd16001600160a01b038316151561019b611abd565b612fdd82600083611fb8565b6001600160a01b0382166000908152602081905260409020546130009082612f0d565b6001600160a01b0383166000908152602081905260409020556002546130269082612f0d565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613067908590613c56565b60405180910390a35050565b60006130828215156004611abd565b8261308f575060006107d7565b670de0b6b3a7640000838102906130a990858381612f6957fe5b8260018203816130b557fe5b046001019150506107d7565b60006001600160a01b0382163014156130e35750670de0b6b3a7640000610b6d565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561311e57600080fd5b505afa158015613132573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061315691906139f5565b60ff16905060006131686012836117b7565b600a0a670de0b6b3a764000002949350505050565b6000828202613197841580612fa1575083858381612f9e57fe5b806131a65760009150506107d7565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82016130b5565b50600090565b6109ec82826109ec565b6131f360008383611fb8565b6002546132009082611cc5565b6002556001600160a01b0382166000908152602081905260409020546132269082611cc5565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613067908590613c56565b60006132a07f38e9922e00000000000000000000000000000000000000000000000000000000610c5d565b8214806107d757506132d17f50dd6ed900000000000000000000000000000000000000000000000000000000610c5d565b909114919050565b604080518082019091526000808252602082015290565b8035610b6d816141ae565b600082601f83011261330b578081fd5b815161331e61331982614184565b614160565b81815291506020808301908481018184028601820187101561333f57600080fd5b60005b8481101561335e57815184529282019290820190600101613342565b505050505092915050565b600082601f830112613379578081fd5b813567ffffffffffffffff81111561338d57fe5b6133a06020601f19601f84011601614160565b91508082528360208285010111156133b757600080fd5b8060208401602084013760009082016020015292915050565b803560028110610b6d57600080fd5b6000602082840312156133f0578081fd5b8135611816816141ae565b6000806040838503121561340d578081fd5b8235613418816141ae565b91506020830135613428816141ae565b809150509250929050565b600080600060608486031215613447578081fd5b8335613452816141ae565b92506020840135613462816141ae565b929592945050506040919091013590565b600080600080600080600060e0888a03121561348d578283fd5b8735613498816141ae565b965060208801356134a8816141ae565b9550604088013594506060880135935060808801356134c6816141d1565b9699959850939692959460a0840135945060c09093013592915050565b60008082840360608112156134f6578283fd5b8335613501816141ae565b92506040601f1982011215613514578182fd5b506040516040810181811067ffffffffffffffff8211171561353257fe5b6040526020840135613543816141ae565b81526040840135613553816141d1565b6020820152919491935090915050565b60008060408385031215613575578182fd5b8235613580816141ae565b946020939093013593505050565b60006020828403121561359f578081fd5b815167ffffffffffffffff8111156135b5578182fd5b6129f1848285016132fb565b6000602082840312156135d2578081fd5b8135611816816141c3565b6000602082840312156135ee578081fd5b8151611816816141c3565b600080600080600080600060e0888a031215613613578081fd5b87359650602080890135613626816141ae565b96506040890135613636816141ae565b9550606089013567ffffffffffffffff80821115613652578384fd5b818b0191508b601f830112613665578384fd5b813561367361331982614184565b8082825285820191508585018f878886028801011115613691578788fd5b8795505b838610156136b3578035835260019590950194918601918601613695565b509850505060808b0135955060a08b0135945060c08b01359250808311156136d9578384fd5b50506136e78a828b01613369565b91505092959891949750929550565b600060208284031215613707578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611816578182fd5b600060208284031215613747578081fd5b8151611816816141ae565b60008060408385031215613764578182fd5b823561376f816141ae565b9150602083013567ffffffffffffffff81111561378a578182fd5b61379685828601613369565b9150509250929050565b6000602082840312156137b1578081fd5b815180600f0b8114611816578182fd5b6000604082840312156137d2578081fd5b6040516040810181811067ffffffffffffffff821117156137ef57fe5b60405282516137fd816141ae565b8152602083015161380d816141d1565b60208201529392505050565b60008060006060848603121561382d578081fd5b833567ffffffffffffffff80821115613844578283fd5b818601915061012080838903121561385a578384fd5b61386381614160565b905061386e836133d0565b815261387c602084016132f0565b602082015261388d604084016132f0565b6040820152606083013560608201526080830135608082015260a083013560a08201526138bc60c084016132f0565b60c08201526138cd60e084016132f0565b60e082015261010080840135838111156138e5578586fd5b6138f18a828701613369565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613921578081fd5b5035919050565b600060208284031215613939578081fd5b5051919050565b60008060408385031215613952578182fd5b82519150602083015167ffffffffffffffff81111561396f578182fd5b613796858286016132fb565b60008060008060808587031215613990578182fd5b84519350602085015192506040850151915060608501516139b0816141ae565b939692955090935050565b600080600080600060a086880312156139d2578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b600060208284031215613a06578081fd5b8151611816816141d1565b6000815180845260208085019450808401835b83811015613a4057815187529582019590820190600101613a24565b509495945050505050565b60008151808452815b81811015613a7057602081850181015186830182015201613a54565b81811115613a815782602083870101525b50601f01601f19169290920160200192915050565b600f0b9052565b80516001600160a01b0316825260209081015160ff16910152565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613b99578351600f0b83529284019291840191600101613b7a565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613be557613bd5848351613a9d565b9284019290850190600101613bc2565b5091979650505050505050565b6000602082526118166020830184613a11565b600060408252613c186040830185613a11565b8281036020840152613c2a8185613a11565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000838252604060208301526129f16040830184613a4b565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0395861681528451600f90810b6020808401919091529095015190940b60408501529184166060840152909216608082015260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b600f9190910b815260200190565b600060a08201600f88810b8452602060a08186015282895180855260c087019150828b019450855b81811015613de0578551850b83529483019491830191600101613dc2565b50506040935088830b8487015287830b6060870152608086820381880152818854613e0b8185613c56565b9150613e168a6141a2565b9350875b60018281830110613e2b5750613e5b565b8554613e3985828b0b613a96565b613e4988860182881c8b0b613a96565b50949094019391870191600201613e1a565b8454975081811015613e7b57613e738389890b613a96565b918501916001015b81811015613e9657613e918389861c890b613a96565b918501915b50909d9c50505050505050505050505050565b6000602082526118166020830184613a4b565b6020808252601c908201527f43757276652f706172616d657465722d696e76616c69642d6265746100000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f496e76616c6964206c656e677468206f66206d6178416d6f756e7473496e207060408201527f61796c6f61642e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f43757276652f706172616d657465722d696e76616c69642d6d61780000000000604082015260600190565b6020808252601d908201527f43757276652f706172616d657465722d696e76616c69642d616c706861000000604082015260600190565b6020808252601f908201527f43757276652f706172616d657465722d696e76616c69642d657073696c6f6e00604082015260600190565b6020808252601d908201527f43757276652f706172616d65746572732d696e6372656173652d666565000000604082015260600190565b6020808252601e908201527f43757276652f706172616d657465722d696e76616c69642d6c616d6264610000604082015260600190565b604081016107d78284613a9d565b6000838252604060208301526129f16040830184613a11565b948552602085019390935260408401919091526060830152608082015260a00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561417c57fe5b604052919050565b600067ffffffffffffffff82111561419857fe5b5060209081020190565b60009081526020902090565b6001600160a01b03811681146107f757600080fd5b80151581146107f757600080fd5b60ff811681146107f757600080fdfea2646970667358221220140ece57b102dfd0407e846c9dde4ea3ea583d239919e1621ae97a9656c8b80a64736f6c634300070300334b18271a7872ab0f9e58e9ca39180e3c710490f802d663f20ae751a8e6b29bc1";

type FXPoolConstructorParams =
  | [linkLibraryAddresses: FXPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FXPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FXPool__factory extends ContractFactory {
  constructor(...args: FXPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, FXPool__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: FXPoolLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28039fd024dee0e5c388b469625a331089\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/Assimilators.sol:Assimilators"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$374ff109b8599801873fe38f05adb3baa6\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/CurveMath.sol:CurveMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidty_: string,
    swaps_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FXPool> {
    return super.deploy(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidty_,
      swaps_,
      overrides || {}
    ) as Promise<FXPool>;
  }
  getDeployTransaction(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidty_: string,
    swaps_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidty_,
      swaps_,
      overrides || {}
    );
  }
  attach(address: string): FXPool {
    return super.attach(address) as FXPool;
  }
  connect(signer: Signer): FXPool__factory {
    return super.connect(signer) as FXPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FXPoolInterface {
    return new utils.Interface(_abi) as FXPoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FXPool {
    return new Contract(address, _abi, signerOrProvider) as FXPool;
  }
}

export interface FXPoolLibraryAddresses {
  ["contracts/amm-v1/Assimilators.sol:Assimilators"]: string;
  ["contracts/amm-v1/CurveMath.sol:CurveMath"]: string;
}
