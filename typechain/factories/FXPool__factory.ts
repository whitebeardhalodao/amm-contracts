/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FXPool, FXPoolInterface } from "../FXPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_assetWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "contract ProportionalLiquidity",
        name: "proportionalLiquidty_",
        type: "address",
      },
      {
        internalType: "contract AmmV1Swaps",
        name: "swaps_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AssetIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "derivative",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assimilator",
        type: "address",
      },
    ],
    name: "AssimilatorIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epsilon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lambda",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    name: "TestingSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "ix",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epsilon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assim",
        type: "address",
      },
    ],
    name: "getAssimilator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeightsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lambda",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assimAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "assimilator",
        type: "tuple",
      },
    ],
    name: "setAssimilator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAtHalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epsilon",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lambda",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistingStage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6102006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526017805463ff0000001962ffffff1990911662010000171663010000001790553480156200005757600080fd5b50604051620051dc380380620051dc8339810160408190526200007a9162001036565b8a60018b8b8b8c516001600160401b03811180156200009857600080fd5b50604051908082528060200260200182016040528015620000c3578160200160208202803683370190505b508a8a8a33828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200013892919062000d51565b5080516200014e90600490602084019062000d51565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b0319166101405250620001c190506276a700831115610194620003c6565b620001d562278d00821115610195620003c6565b4290910161016081905201610180528551620001f7906002111560c8620003c6565b6200021162000205620003db565b8751111560c9620003c6565b6200022786620003e060201b620015941760201c565b6200023284620003ec565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f9062000263908d9060040162001272565b602060405180830381600087803b1580156200027e57600080fd5b505af115801562000293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b991906200101d565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d290620002ee9084908b908b90600401620011d8565b600060405180830381600087803b1580156200030957600080fd5b505af11580156200031e573d6000803e3d6000fd5b50505050806101a0818152505050505050505050505050506200035c886000815181106200034857fe5b60200260200101516200047860201b60201c565b6101c05287516200037590899060019081106200034857fe5b6101e052600980546001600160a01b038085166001600160a01b031992831617909255600a805492841692909116919091179055620003b587876200054c565b505050505050505050505062001529565b81620003d757620003d781620007e0565b5050565b600290565b80620003d78162000833565b6200040164e8d4a5100082101560cb620003c6565b6200041967016345785d8a000082111560ca620003c6565b620004388160c0600854620008bd60201b6200159e179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200046d908390620014c8565b60405180910390a150565b60006001600160a01b0382163014156200049c5750670de0b6b3a764000062000547565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620004d857600080fd5b505afa158015620004ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000513919062001188565b60ff169050600062000532601283620008d260201b620015b41760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b8051600214620005795760405162461bcd60e51b81526004016200057090620012cd565b60405180910390fd5b60058251816200058557fe5b0615620005a65760405162461bcd60e51b8152600401620005709062001312565b60005b8151811015620007db5760008160050290506015848281518110620005ca57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583516014908590839081106200061757fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583516016908590600284019081106200066757fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558351849060028301908110620006b457fe5b60200260200101516001600160a01b0316848281518110620006d257fe5b60200260200101516001600160a01b03161462000737576014848260020181518110620006fb57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b620007d18482815181106200074857fe5b60200260200101518583600101815181106200076057fe5b60200260200101518684600201815181106200077857fe5b60200260200101518785600301815181106200079057fe5b6020026020010151888660040181518110620007a857fe5b6020026020010151888881518110620007bd57fe5b6020026020010151620008ea60201b60201c565b50600101620005a9565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200084457620008ba565b6000816000815181106200085457fe5b602002602001015190506000600190505b8251811015620007db5760008382815181106200087e57fe5b60200260200101519050620008af816001600160a01b0316846001600160a01b0316106065620003c660201b60201c565b915060010162000865565b50565b6001600160401b03811b1992909216911b1790565b6000620008e4838311156001620003c6565b50900390565b6001600160a01b038616620009135760405162461bcd60e51b81526004016200057090620013aa565b6001600160a01b0385166200093c5760405162461bcd60e51b815260040162000570906200146b565b6001600160a01b038416620009655760405162461bcd60e51b8152600401620005709062001287565b6001600160a01b0383166200098e5760405162461bcd60e51b8152600401620005709062001358565b670de0b6b3a76400008110620009b85760405162461bcd60e51b8152600401620005709062001429565b836001600160a01b0316866001600160a01b03161462000a5c5760405163095ea7b360e01b81526001600160a01b0387169063095ea7b39062000a0490859060001990600401620011bf565b602060405180830381600087803b15801562000a1f57600080fd5b505af115801562000a34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a5a919062000ff4565b505b62000a6662000dd6565b506040805180820182526001600160a01b03808816825260115460ff90811660208085019182528b84166000908152601290915294909420835181549551909216600160a01b0260ff60a01b19929093166001600160a01b031990951694909417161790915562000ad662000dd6565b506040805180820182526001600160a01b03868116825260115460ff90811660208085019182528a84166000908152601282529586208551815493516001600160a01b031990941695169490941760ff60a01b1916600160a01b92909316919091029190911790915590919062000b6390600190670de0b6b3a76400009062000d1b811b620015ca17901c565b62000b85670de0b6b3a76400008662000d1b60201b620015ca1790919060201c565b601080546001808201909255919092017f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290910181905560118054928301815560005284517f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68909201805460208701516001600160a01b03199091166001600160a01b039485161760ff60a01b1916600160a01b60ff90921691909102179055604051909250888216918b16907f69745294f8c4916d2a4ca68ea4e3be1d5990927ba68481e69368deb3c4395d029062000c61908890620014c8565b60405180910390a3866001600160a01b0316896001600160a01b03168a6001600160a01b0316600080516020620051bc8339815191528b60405162000ca79190620011ab565b60405180910390a4856001600160a01b0316886001600160a01b03161462000d1057866001600160a01b0316896001600160a01b0316886001600160a01b0316600080516020620051bc8339815191528960405162000d079190620011ab565b60405180910390a45b505050505050505050565b600080821162000d3f5760405162461bcd60e51b81526004016200057090620013f2565b81838162000d4957fe5b049392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000d9457805160ff191683800117855562000dc4565b8280016001018555821562000dc4579182015b8281111562000dc457825182559160200191906001019062000da7565b5062000dd292915062000ded565b5090565b604080518082019091526000808252602082015290565b5b8082111562000dd2576000815560010162000dee565b600082601f83011262000e15578081fd5b815162000e2c62000e2682620014f5565b620014d1565b81815291506020808301908481018184028601820187101562000e4e57600080fd5b60005b8481101562000e7a57815162000e678162001513565b8452928201929082019060010162000e51565b505050505092915050565b600082601f83011262000e96578081fd5b815162000ea762000e2682620014f5565b81815291506020808301908481018184028601820187101562000ec957600080fd5b60005b8481101562000e7a57815162000ee28162001513565b8452928201929082019060010162000ecc565b600082601f83011262000f06578081fd5b815162000f1762000e2682620014f5565b81815291506020808301908481018184028601820187101562000f3957600080fd5b60005b8481101562000e7a5781518452928201929082019060010162000f3c565b8051620005478162001513565b600082601f83011262000f78578081fd5b81516001600160401b0381111562000f8c57fe5b602062000fa2601f8301601f19168201620014d1565b9250818352848183860101111562000fb957600080fd5b60005b8281101562000fd957848101820151848201830152810162000fbc565b8281111562000feb5760008284860101525b50505092915050565b60006020828403121562001006578081fd5b8151801515811462001016578182fd5b9392505050565b6000602082840312156200102f578081fd5b5051919050565b60008060008060008060008060008060006101608c8e03121562001058578687fd5b620010638c62000f5a565b60208d0151909b506001600160401b038111156200107f578788fd5b6200108d8e828f0162000f67565b60408e0151909b5090506001600160401b03811115620010ab578788fd5b620010b98e828f0162000f67565b60608e0151909a5090506001600160401b03811115620010d7578788fd5b620010e58e828f0162000e85565b60808e015190995090506001600160401b0381111562001103578788fd5b620011118e828f0162000e04565b60a08e015190985090506001600160401b038111156200112f578687fd5b6200113d8e828f0162000ef5565b96505060c08c0151945060e08c015193506101008c01519250620011656101208d0162000f5a565b9150620011766101408d0162000f5a565b90509295989b509295989b9093969950565b6000602082840312156200119a578081fd5b815160ff8116811462001016578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620012235784516001600160a01b031683529383019391830191600101620011fc565b505084810360408601528551808252908201925081860190845b81811015620012645782516001600160a01b0316855293830193918301916001016200123d565b509298975050505050505050565b60208101600383106200128157fe5b91905290565b60208082526026908201527f43757276652f726573657276652d63616e6e6f742d62652d7a65726f74682d6160408201526564647265737360d01b606082015260800190565b60208082526025908201527f43757276652f6173736574576569676874732d6d7573742d62652d6c656e6774604082015264682d74776f60d81b606082015260800190565b60208082526026908201527f43757276652f6173736574732d6d7573742d62652d646976697369626c652d62604082015265792d6669766560d01b606082015260800190565b60208082526032908201527f43757276652f726573657276652d617373696d696c61746f722d63616e6e6f746040820152712d62652d7a65726f74682d6164647265737360701b606082015260800190565b60208082526028908201527f43757276652f6e756d6572616972652d63616e6e6f742d62652d7a65726f74686040820152672d6164647265737360c01b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526022908201527f43757276652f7765696768742d6d7573742d62652d6c6573732d7468616e2d6f6040820152616e6560f01b606082015260800190565b60208082526034908201527f43757276652f6e756d6572616972652d617373696d696c61746f722d63616e6e60408201527f6f742d62652d7a65726f74682d61646472657373000000000000000000000000606082015260800190565b90815260200190565b6040518181016001600160401b0381118282101715620014ed57fe5b604052919050565b60006001600160401b038211156200150957fe5b5060209081020190565b6001600160a01b0381168114620008ba57600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516101e051613c07620015b56000398061180b5250806117d1525080610932525080611789525080611765525080610cb8525080611060525080611936525080611978525080611957525080610c94525080610c1e5250613c076000f3fe608060405234801561001057600080fd5b50600436106103575760003560e01c806387ec6817116101c8578063addd509911610104578063d5c096c4116100a2578063dad0be611161007c578063dad0be61146106b9578063db1d0fd5146106c1578063dd62ed3e146106c9578063eac8f5b8146106dc57610357565b8063d5c096c414610680578063d828bb8814610693578063d851fdfd146106a657610357565b8063c0046e39116100de578063c0046e3914610631578063caa6fea414610644578063cf35bdd01461064c578063d505accf1461066d57610357565b8063addd5099146105eb578063b5f163ff146105fe578063bb6d485a1461061157610357565b80639faa3c9111610171578063a89d490c1161014b578063a89d490c146105b5578063a8e9d528146105bd578063a9059cbb146105d0578063aaabadc5146105e357610357565b80639faa3c9114610592578063a457c2d71461059a578063a7ba9fb1146105ad57610357565b806395d89b41116101a257806395d89b411461056f5780639d1dd428146105775780639d2c110c1461057f57610357565b806387ec68171461054c578063893d20e81461055f5780638d928af81461056757610357565b806338fff2d01161029757806367e4ac2c1161024057806379f93a671161021a57806379f93a67146104fe5780637ecebe00146105065780638334278d14610519578063851c1bb31461053957610357565b806367e4ac2c146104b557806370a08231146104ca57806374f3b009146104dd57610357565b806355c676281161027157806355c67628146104795780636028bfd41461048157806361718b83146104a257610357565b806338fff2d01461044b578063395093511461045357806350dd6ed91461046657610357565b80631c0de0511161030457806323b872dd116102de57806323b872dd14610408578063313ce5671461041b5780633644e5151461043057806338e9922e1461043857610357565b80631c0de051146103d45780631dd746ea146103eb57806322acb8671461040057610357565b806312b495a81161033557806312b495a8146103a257806316c38b3c146103b757806318160ddd146103cc57610357565b8063054f7d9c1461035c57806306fdde031461037a578063095ea7b31461038f575b600080fd5b6103646106ef565b604051610371919061362b565b60405180910390f35b6103826106f8565b604051610371919061377c565b61036461039d366004612fca565b6107ac565b6103aa6107c3565b604051610371919061364e565b6103ca6103c5366004613028565b6107c9565b005b6103aa6107dd565b6103dc6107e3565b60405161037193929190613636565b6103f361080c565b60405161037191906135ea565b6103f361081b565b610364610416366004612e9a565b610872565b610423610904565b6040516103719190613b4f565b6103aa61090d565b6103ca610446366004613356565b610917565b6103aa610930565b610364610461366004612fca565b610954565b6103ca6104743660046131b9565b61098f565b6103aa6109ad565b61049461048f366004613060565b6109be565b604051610371929190613a7d565b6103ca6104b0366004612f4a565b6109f5565b6104bd610a89565b604051610371919061359d565b6103aa6104d8366004612e46565b610b10565b6104f06104eb366004613060565b610b2f565b6040516103719291906135fd565b6103aa610bd2565b6103aa610514366004612e46565b610bd8565b61052c610527366004613356565b610bf3565b604051610371919061356d565b6103aa61054736600461315d565b610c1a565b61049461055a366004613060565b610c6c565b61052c610c92565b61052c610cb6565b610382610cda565b610364610d59565b6103aa61058d36600461325f565b610d68565b6103aa610ec6565b6103646105a8366004612fca565b610ecc565b6103aa610f0a565b6103aa610f10565b61052c6105cb366004613356565b610f16565b6103646105de366004612fca565b610f23565b61052c610f30565b61052c6105f9366004612e46565b610f3a565b6103aa61060c366004613356565b610f55565b61062461061f366004612e46565b610f73565b6040516103719190613a6f565b61052c61063f366004613356565b610fcd565b610364610fda565b61065f61065a366004613356565b610fe8565b604051610371929190613581565b6103ca61067b366004612eda565b61102b565b6104f061068e366004613060565b611174565b6103ca6106a1366004613401565b6112a5565b6103aa6106b4366004613356565b6114ab565b6103aa6114cc565b6103aa6114d2565b6103aa6106d7366004612e62565b6114d8565b6106246106ea366004613356565b611533565b60175460ff1681565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b5050505050905090565b60006107b93384846115fc565b5060015b92915050565b600d5481565b6107d1611664565b6107da816116aa565b50565b60025490565b60008060006107f0611746565b1592506107fb611763565b9150610805611787565b9050909192565b60606108166117ab565b905090565b606060108054806020026020016040519081016040528092919081815260200182805480156107a257602002820191906000526020600020905b815481526020019060010190808311610855575050505050905090565b60008061087f85336114d8565b90506108a3336001600160a01b038716148061089b5750838210155b61019e611847565b6108ae858585611855565b336001600160a01b038616148015906108e757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b156108f9576108f985338584036115fc565b506001949350505050565b60055460ff1690565b6000610816611932565b61091f611664565b6109276119cf565b6107da816119e4565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107b991859061098a9086611a4f565b6115fc565b610997611664565b61099f6119cf565b6109a98282611a7b565b5050565b6008546000906108169060c0611b93565b600060606109d486516109cf611ba1565b611ba6565b6109e989898989898989611bb3611ce8611d4e565b97509795505050505050565b6001600160a01b0391821660009081526012602090815260409091208251815493909201517fffffffffffffffffffffffff000000000000000000000000000000000000000090931691909316177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000060ff90921691909102179055565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610b0757600084815260209081902060408051808201909152908401546001600160a01b038116825274010000000000000000000000000000000000000000900460ff1681830152825260019092019101610aad565b50505050905090565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610b59610b3e610cb6565b6001600160a01b0316336001600160a01b03161460cd611847565b610b6e610b64610930565b82146101f4611847565b6060610b786117ab565b9050610b848882611ede565b6000606080610b998e8e8e8e8e8e8a8f611bb3565b925092509250610ba98d84611f3f565b610bb38285611ce8565b610bbd8185611ce8565b909550935050505b5097509795505050505050565b60105490565b6001600160a01b031660009081526006602052604090205490565b60168181548110610c0057fe5b6000918252602090912001546001600160a01b0316905081565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610c4f9291906134f7565b604051602081830303815290604052805190602001209050919050565b60006060610c7d86516109cf611ba1565b6109e989898989898989611f496120c4611d4e565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a25780601f10610777576101008083540402835291602001916107a2565b60175462010000900460ff1681565b60008360800151610d7a610b3e610cb6565b610d85610b64610930565b6000610d948660200151612125565b90506000610da58760400151612125565b9050600087516001811115610db657fe5b1415610e46576000610dcb8860600151612130565b90506000818960600151039050610def8960200151610dea8387612151565b61215d565b60608901829052610e008885612151565b9750610e0c8784612151565b9650610e1c896060015185612151565b60608a01526000610e2e8a8a8a61216f565b9050610e3a818561227c565b96505050505050610ebe565b610e508683612151565b9550610e5c8582612151565b9450610e6c876060015182612151565b60608801526000610e7e888888612288565b9050610e8a8184612291565b90506000610e978261229d565b905060008282039050610eb28a60200151610dea8388612151565b509450610ebe92505050565b509392505050565b600c5481565b600080610ed933856114d8565b9050808310610ef357610eee338560006115fc565b610f00565b610f0033858584036115fc565b5060019392505050565b600e5481565b60115490565b60158181548110610c0057fe5b60006107b9338484611855565b60006108166122c3565b6013602052600090815260409020546001600160a01b031681565b60108181548110610f6257fe5b600091825260209091200154905081565b610f7b612d26565b506001600160a01b0390811660009081526012602090815260409182902082518084019093525492831682527401000000000000000000000000000000000000000090920460ff169181019190915290565b60148181548110610c0057fe5b601754610100900460ff1681565b60118181548110610ff557fe5b6000918252602090912001546001600160a01b038116915074010000000000000000000000000000000000000000900460ff1682565b6110398442111560d1611847565b6001600160a01b0387166000908152600660209081526040808320549051909291611090917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613676565b60405160208183030381529060405280519060200120905060006110b38261233d565b90506000600182888888604051600081526020016040526040516110da9493929190613706565b6020604051602081039080840390855afa1580156110fc573d6000803e3d6000fd5b5050604051601f190151915061113e90506001600160a01b0382161580159061113657508b6001600160a01b0316826001600160a01b0316145b6101f8611847565b6001600160a01b038b1660009081526006602052604090206001850190556111678b8b8b6115fc565b5050505050505050505050565b60608088611183610b3e610cb6565b61118e610b64610930565b60606111986117ab565b90506111a26107dd565b61125557600060606111b78d8d8d868b612359565b915091506111d06111c66124e0565b83101560cc611847565b6111e260006111dd6124e0565b6124e7565b6111f58b6111ee6124e0565b84036124e7565b6111ff81846120c4565b80611208611ba1565b67ffffffffffffffff8111801561121e57600080fd5b50604051908082528060200260200182016040528015611248578160200160208202803683370190505b5095509550505050610bc5565b61125f8882611ede565b60006060806112748e8e8e8e8e8e8a8f611f49565b9250925092506112848c846124e7565b61128e82856120c4565b6112988185611ce8565b9095509350610bc5915050565b8460001080156112bc5750670de0b6b3a764000085105b6112e15760405162461bcd60e51b81526004016112d890613936565b60405180910390fd5b8484106113005760405162461bcd60e51b81526004016112d89061378f565b6706f05b59d3b200008311156113285760405162461bcd60e51b81526004016112d8906138ff565b662386f26fc1000082111561134f5760405162461bcd60e51b81526004016112d8906139ca565b670de0b6b3a76400008111156113775760405162461bcd60e51b81526004016112d890613a38565b306000611383826124f1565b905061139a60018801670de0b6b3a76400006115ca565b600b556113b260018701670de0b6b3a76400006115ca565b600c819055600b54036113e16113c9600283612740565b6113db88670de0b6b3a76400006115ca565b906115ca565b6001908101600d556113fd908601670de0b6b3a76400006115ca565b600e5561141560018501670de0b6b3a76400006115ca565b600f556000611423846124f1565b9050808310156114455760405162461bcd60e51b81526004016112d890613a01565b7fb399767364127d5a414f09f214fa5606358052b764894b1084ce5ef067c05a978989611485670de0b6b3a7640000600d5461274090919063ffffffff16565b8989604051611498959493929190613b2c565b60405180910390a1505050505050505050565b6000601082815481106114ba57fe5b90600052602060002001549050919050565b600f5481565b600b5481565b60006114e2610cb6565b6001600160a01b0316826001600160a01b0316141561152257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6107bd565b61152c838361277a565b90506107bd565b61153b612d26565b6011828154811061154857fe5b6000918252602091829020604080518082019091529101546001600160a01b038116825274010000000000000000000000000000000000000000900460ff169181019190915292915050565b806109a9816127a5565b67ffffffffffffffff811b1992909216911b1790565b60006115c4838311156001611847565b50900390565b60008082116115eb5760405162461bcd60e51b81526004016112d8906138c8565b8183816115f457fe5b049392505050565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061165790859061364e565b60405180910390a3505050565b60006116936000357fffffffff0000000000000000000000000000000000000000000000000000000016610c1a565b90506107da6116a2823361281e565b610191611847565b80156116ca576116c56116bb611763565b4210610193611847565b6116df565b6116df6116d5611787565b42106101a9611847565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be649061173b90839061362b565b60405180910390a150565b6000611750611787565b42118061081657505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6040805160028082526060808301845292839291906020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106117fd57fe5b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061183757fe5b6020908102919091010152905090565b816109a9576109a981612907565b61186c6001600160a01b0384161515610198611847565b6118836001600160a01b0383161515610199611847565b61188e838383611d49565b6001600160a01b0383166000908152602081905260409020546118b1908261295a565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546118e09082611a4f565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061165790859061364e565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061199f61297c565b306040516020016119b49594939291906136aa565b60405160208183030381529060405280519060200120905090565b6119e26119da611746565b610192611847565b565b6119f764e8d4a5100082101560cb611847565b611a0d67016345785d8a000082111560ca611847565b600854611a1c908260c061159e565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061173b90839061364e565b600082820183811015611a745760405162461bcd60e51b81526004016112d8906137c6565b9392505050565b6000611a85610930565b90506000611a91610cb6565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b8152600401611abe9291906136ef565b60806040518083038186803b158015611ad657600080fd5b505afa158015611aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0e91906133c1565b6040517f18e736d40000000000000000000000000000000000000000000000000000000081529094506001600160a01b03851693506318e736d49250611b5b9150859087906004016136d6565b600060405180830381600087803b158015611b7557600080fd5b505af1158015611b89573d6000803e3d6000fd5b5050505050505050565b1c67ffffffffffffffff1690565b600290565b6109a98183146067611847565b6000606080606084806020019051810190611bce9190612ff5565b905088516002148015611be2575080516002145b611bfe5760405162461bcd60e51b81526004016112d890613891565b6040805160028082526060820183526305f5e10096509091602083019080368337019050509150600082600081518110611c3457fe5b602002602001018181525050600082600181518110611c4f57fe5b6020908102919091010152604080516002808252606082019092529081602001602082028036833701905050925080600081518110611c8a57fe5b602002602001015183600081518110611c9f57fe5b60200260200101818152505080600181518110611cb857fe5b602002602001015183600181518110611ccd57fe5b60200260200101818152505050985098509895505050505050565b60005b611cf3611ba1565b811015611d4957611d2a838281518110611d0957fe5b6020026020010151838381518110611d1d57fe5b6020026020010151612980565b838281518110611d3657fe5b6020908102919091010152600101611ceb565b505050565b333014611e3d576000306001600160a01b0316600036604051611d72929190613527565b6000604051808303816000865af19150503d8060008114611daf576040519150601f19603f3d011682016040523d82523d6000602084013e611db4565b606091505b505090508060008114611dc357fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb000000000000000000000000000000000000000000000000000000008114611e1f573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6060611e476117ab565b9050611e538782611ede565b60006060611e6b8c8c8c8c8c8c898d8d63ffffffff16565b5091509150611e7e81848663ffffffff16565b8051601f1982018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60005b611ee9611ba1565b811015611d4957611f20838281518110611eff57fe5b6020026020010151838381518110611f1357fe5b60200260200101516129d1565b838281518110611f2c57fe5b6020908102919091010152600101611ee1565b6109a98282612a07565b6000606080606084806020019051810190611f649190612ff5565b905088516002148015611f78575080516002145b611f945760405162461bcd60e51b81526004016112d890613891565b60006060600960009054906101000a90046001600160a01b03166001600160a01b0316636e38abdf30600286600081518110611fcc57fe5b602002602001015181611fdb57fe5b046040518363ffffffff1660e01b8152600401611ff9929190613763565b600060405180830381600087803b15801561201357600080fd5b505af1158015612027573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261204f9190810190613386565b6040805160028082526060820190925292985090965087935086925081602001602082028036833701905050935060028460008151811061208c57fe5b6020026020010181815250506002846001815181106120a757fe5b602002602001018181525050505050985098509895505050505050565b60005b6120cf611ba1565b811015611d49576121068382815181106120e557fe5b60200260200101518383815181106120f957fe5b6020026020010151612ac0565b83828151811061211257fe5b60209081029190910101526001016120c7565b60006107bd82612b0e565b60008061214561213e6109ad565b8490612bca565b9050611a7483826115b4565b6000611a7483836129d1565b6109a961216983612c24565b82612c2a565b6000612179612d3d565b506040805180820182528481526020808201859052600a549087015187840151606089015194517fa34f62ea00000000000000000000000000000000000000000000000000000000815293946000946001600160a01b039094169363a34f62ea936121ea9330938993600401613724565b60206040518083038186803b15801561220257600080fd5b505afa158015612216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223a919061336e565b90507fb498cafe3e3088f7b7b5cf6afd13373111c6ffee5ce1618f58a2adf2cc9c5a838160405161226b919061364e565b60405180910390a195945050505050565b6000611a748383612980565b50506060015190565b6000611a748383612ac0565b60006107bd6122bc6122ad6109ad565b670de0b6b3a7640000906115b4565b8390612ac0565b60006122cd610cb6565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561230557600080fd5b505afa158015612319573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610816919061319d565b6000612347611932565b82604051602001610c4f929190613537565b6000606080838060200190518101906123729190612ff5565b905061237c611ba1565b81511461239b5760405162461bcd60e51b81526004016112d8906137fd565b60006060600960009054906101000a90046001600160a01b03166001600160a01b0316636e38abdf30856000815181106123d157fe5b60200260200101516040518363ffffffff1660e01b81526004016123f6929190613763565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261244c9190810190613386565b604080516002808252606082019092529297508794509092508160200160208202803683370190505093508060008151811061248457fe5b60200260200101518460008151811061249957fe5b602002602001018181525050806001815181106124b257fe5b6020026020010151846001815181106124c757fe5b6020026020010181815250505050509550959350505050565b620f424090565b6109a98282612c34565b60408051600280825260608083018452600093849391929060208301908036833701905050905060005b815181101561268a576040517feac8f5b80000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063eac8f5b89061256c90859060040161364e565b604080518083038186803b15801561258357600080fd5b505afa158015612597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125bb9190613207565b516040517fac969a7300000000000000000000000000000000000000000000000000000000815290915060009073__$28039fd024dee0e5c388b469625a331089$__9063ac969a739061261290859060040161356d565b60206040518083038186803b15801561262a57600080fd5b505af415801561263e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612662919061336e565b90508084848151811061267157fe5b602090810291909101015293909301925060010161251b565b50600c54600d546040517fff8f8f1200000000000000000000000000000000000000000000000000000000815273__$374ff109b8599801873fe38f05adb3baa6$__9263ff8f8f12926126e892879287929091601090600401613a96565b60206040518083038186803b15801561270057600080fd5b505af4158015612714573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612738919061336e565b949350505050565b60008261274f575060006107bd565b8282028284828161275c57fe5b0414611a745760405162461bcd60e51b81526004016112d89061396d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6002815110156127b4576107da565b6000816000815181106127c357fe5b602002602001015190506000600190505b8251811015611d495760008382815181106127eb57fe5b60200260200101519050612814816001600160a01b0316846001600160a01b0316106065611847565b91506001016127d4565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b61283d610c92565b6001600160a01b031614158015612858575061285883612cc2565b1561288057612865610c92565b6001600160a01b0316336001600160a01b03161490506107bd565b6128886122c3565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b81526004016128b793929190613657565b60206040518083038186803b1580156128cf57600080fd5b505afa1580156128e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152c9190613044565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000828211156115c45760405162461bcd60e51b81526004016112d89061385a565b4690565b600061298f8215156004611847565b8261299c575060006107bd565b670de0b6b3a7640000838102906129bf908583816129b657fe5b04146005611847565b8281816129c857fe5b049150506107bd565b60008282026129f58415806129ee5750838583816129eb57fe5b04145b6003611847565b670de0b6b3a764000090049392505050565b612a1e6001600160a01b038316151561019b611847565b612a2a82600083611d49565b6001600160a01b038216600090815260208190526040902054612a4d908261295a565b6001600160a01b038316600090815260208190526040902055600254612a73908261295a565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612ab490859061364e565b60405180910390a35050565b6000612acf8215156004611847565b82612adc575060006107bd565b670de0b6b3a764000083810290612af6908583816129b657fe5b826001820381612b0257fe5b046001019150506107bd565b60006001600160a01b038216301415612b305750670de0b6b3a7640000610b2a565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612b6b57600080fd5b505afa158015612b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ba3919061343b565b60ff1690506000612bb56012836115b4565b600a0a670de0b6b3a764000002949350505050565b6000828202612be48415806129ee5750838583816129eb57fe5b80612bf35760009150506107bd565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201612b02565b50600090565b6109a982826109a9565b612c4060008383611d49565b600254612c4d9082611a4f565b6002556001600160a01b038216600090815260208190526040902054612c739082611a4f565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612ab490859061364e565b6000612ced7f38e9922e00000000000000000000000000000000000000000000000000000000610c1a565b8214806107bd5750612d1e7f50dd6ed900000000000000000000000000000000000000000000000000000000610c1a565b909114919050565b604080518082019091526000808252602082015290565b604051806040016040528060008152602001600081525090565b8035610b2a81613b9f565b600082601f830112612d72578081fd5b8151612d85612d8082613b81565b613b5d565b818152915060208083019084810181840286018201871015612da657600080fd5b60005b84811015612dc557815184529282019290820190600101612da9565b505050505092915050565b600082601f830112612de0578081fd5b813567ffffffffffffffff811115612df457fe5b612e076020601f19601f84011601613b5d565b9150808252836020828501011115612e1e57600080fd5b8060208401602084013760009082016020015292915050565b803560028110610b2a57600080fd5b600060208284031215612e57578081fd5b8135611a7481613b9f565b60008060408385031215612e74578081fd5b8235612e7f81613b9f565b91506020830135612e8f81613b9f565b809150509250929050565b600080600060608486031215612eae578081fd5b8335612eb981613b9f565b92506020840135612ec981613b9f565b929592945050506040919091013590565b600080600080600080600060e0888a031215612ef4578283fd5b8735612eff81613b9f565b96506020880135612f0f81613b9f565b955060408801359450606088013593506080880135612f2d81613bc2565b9699959850939692959460a0840135945060c09093013592915050565b6000808284036060811215612f5d578283fd5b8335612f6881613b9f565b92506040601f1982011215612f7b578182fd5b506040516040810181811067ffffffffffffffff82111715612f9957fe5b6040526020840135612faa81613b9f565b81526040840135612fba81613bc2565b6020820152919491935090915050565b60008060408385031215612fdc578182fd5b8235612fe781613b9f565b946020939093013593505050565b600060208284031215613006578081fd5b815167ffffffffffffffff81111561301c578182fd5b61273884828501612d62565b600060208284031215613039578081fd5b8135611a7481613bb4565b600060208284031215613055578081fd5b8151611a7481613bb4565b600080600080600080600060e0888a03121561307a578081fd5b8735965060208089013561308d81613b9f565b9650604089013561309d81613b9f565b9550606089013567ffffffffffffffff808211156130b9578384fd5b818b0191508b601f8301126130cc578384fd5b81356130da612d8082613b81565b8082825285820191508585018f8788860288010111156130f8578788fd5b8795505b8386101561311a5780358352600195909501949186019186016130fc565b509850505060808b0135955060a08b0135945060c08b0135925080831115613140578384fd5b505061314e8a828b01612dd0565b91505092959891949750929550565b60006020828403121561316e578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611a74578182fd5b6000602082840312156131ae578081fd5b8151611a7481613b9f565b600080604083850312156131cb578182fd5b82356131d681613b9f565b9150602083013567ffffffffffffffff8111156131f1578182fd5b6131fd85828601612dd0565b9150509250929050565b600060408284031215613218578081fd5b6040516040810181811067ffffffffffffffff8211171561323557fe5b604052825161324381613b9f565b8152602083015161325381613bc2565b60208201529392505050565b600080600060608486031215613273578081fd5b833567ffffffffffffffff8082111561328a578283fd5b81860191506101208083890312156132a0578384fd5b6132a981613b5d565b90506132b483612e37565b81526132c260208401612d57565b60208201526132d360408401612d57565b6040820152606083013560608201526080830135608082015260a083013560a082015261330260c08401612d57565b60c082015261331360e08401612d57565b60e0820152610100808401358381111561332b578586fd5b6133378a828701612dd0565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613367578081fd5b5035919050565b60006020828403121561337f578081fd5b5051919050565b60008060408385031215613398578182fd5b82519150602083015167ffffffffffffffff8111156133b5578182fd5b6131fd85828601612d62565b600080600080608085870312156133d6578182fd5b84519350602085015192506040850151915060608501516133f681613b9f565b939692955090935050565b600080600080600060a08688031215613418578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b60006020828403121561344c578081fd5b8151611a7481613bc2565b6000815180845260208085019450808401835b838110156134865781518752958201959082019060010161346a565b509495945050505050565b60008151808452815b818110156134b65760208185018101518683018201520161349a565b818111156134c75782602083870101525b50601f01601f19169290920160200192915050565b80516001600160a01b0316825260209081015160ff16910152565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b602080825282518282018190526000919060409081850190868401855b828110156135dd576135cd8483516134dc565b92840192908501906001016135ba565b5091979650505050505050565b600060208252611a746020830184613457565b6000604082526136106040830185613457565b82810360208401526136228185613457565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000838252604060208301526127386040830184613491565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b03958616815284516020808301919091529094015160408501529184166060840152909216608082015260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b600060208252611a746020830184613491565b6020808252601c908201527f43757276652f706172616d657465722d696e76616c69642d6265746100000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f496e76616c6964206c656e677468206f66206d6178416d6f756e7473496e207060408201527f61796c6f61642e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601b908201527f43757276652f706172616d657465722d696e76616c69642d6d61780000000000604082015260600190565b6020808252601d908201527f43757276652f706172616d657465722d696e76616c69642d616c706861000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f43757276652f706172616d657465722d696e76616c69642d657073696c6f6e00604082015260600190565b6020808252601d908201527f43757276652f706172616d65746572732d696e6372656173652d666565000000604082015260600190565b6020808252601e908201527f43757276652f706172616d657465722d696e76616c69642d6c616d6264610000604082015260600190565b604081016107bd82846134dc565b6000838252604060208301526127386040830184613457565b600060a08201878352602060a08185015281885180845260c086019150828a019350845b81811015613ad657845183529383019391830191600101613aba565b50506040850188905260608501879052848103608086015285548082528685528285209183019350845b81811015613b1c57825485529383019360019283019201613b00565b50929a9950505050505050505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715613b7957fe5b604052919050565b600067ffffffffffffffff821115613b9557fe5b5060209081020190565b6001600160a01b03811681146107da57600080fd5b80151581146107da57600080fd5b60ff811681146107da57600080fdfea26469706673582212206f6f5a32df26c681c3c128f2d0f301d896d530974d9a50473cc9431355f4cfc764736f6c634300070300334b18271a7872ab0f9e58e9ca39180e3c710490f802d663f20ae751a8e6b29bc1";

type FXPoolConstructorParams =
  | [linkLibraryAddresses: FXPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FXPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FXPool__factory extends ContractFactory {
  constructor(...args: FXPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, FXPool__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: FXPoolLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28039fd024dee0e5c388b469625a331089\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/Assimilators.sol:Assimilators"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$374ff109b8599801873fe38f05adb3baa6\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/CurveMath.sol:CurveMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidty_: string,
    swaps_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FXPool> {
    return super.deploy(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidty_,
      swaps_,
      overrides || {}
    ) as Promise<FXPool>;
  }
  getDeployTransaction(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidty_: string,
    swaps_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidty_,
      swaps_,
      overrides || {}
    );
  }
  attach(address: string): FXPool {
    return super.attach(address) as FXPool;
  }
  connect(signer: Signer): FXPool__factory {
    return super.connect(signer) as FXPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FXPoolInterface {
    return new utils.Interface(_abi) as FXPoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FXPool {
    return new Contract(address, _abi, signerOrProvider) as FXPool;
  }
}

export interface FXPoolLibraryAddresses {
  ["contracts/amm-v1/Assimilators.sol:Assimilators"]: string;
  ["contracts/amm-v1/CurveMath.sol:CurveMath"]: string;
}
