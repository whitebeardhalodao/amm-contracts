/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DepositRelayer,
  DepositRelayerInterface,
} from "../DepositRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ProportionalLiquidity",
        name: "_proportionalLiquidity",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161010738038061010783398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6077806100906000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632832b757146037578063d0e30db0146037575b600080fd5b603d603f565b005b56fea26469706673582212200ae27b3bfbbe88d72b0fa357f2be6f5a7e96b9a9ea920e51e7350c746329f23064736f6c63430007030033";

export class DepositRelayer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _proportionalLiquidity: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositRelayer> {
    return super.deploy(
      _proportionalLiquidity,
      overrides || {}
    ) as Promise<DepositRelayer>;
  }
  getDeployTransaction(
    _proportionalLiquidity: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proportionalLiquidity, overrides || {});
  }
  attach(address: string): DepositRelayer {
    return super.attach(address) as DepositRelayer;
  }
  connect(signer: Signer): DepositRelayer__factory {
    return super.connect(signer) as DepositRelayer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositRelayerInterface {
    return new utils.Interface(_abi) as DepositRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositRelayer {
    return new Contract(address, _abi, signerOrProvider) as DepositRelayer;
  }
}
