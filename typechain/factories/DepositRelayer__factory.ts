/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DepositRelayer,
  DepositRelayerInterface,
} from "../DepositRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ProportionalLiquidity",
        name: "_proportionalLiquidity",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseNumeraire",
        type: "uint256",
      },
    ],
    name: "GetBaseNumeraire",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "GetToUint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int128",
        name: "weight",
        type: "int128",
      },
    ],
    name: "GetWeight",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lpTokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "requiredTokens",
        type: "uint256[]",
      },
    ],
    name: "TestDeposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "multiSidedDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "singleSidedDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "viewDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bda380380610bda83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610b49806100916000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638fd6566d146100465780639142893314610070578063db7b0fae14610083575b600080fd5b6100596100543660046107fc565b610091565b604051610067929190610a5f565b60405180910390f35b61005961007e3660046108fe565b61009d565b610059610054366004610833565b60006060935093915050565b60006060600060606100b1863333886100be565b9097909650945050505050565b6000606080606073ba12222222228d8ba445958a75a0704d566bf2c873ffffffffffffffffffffffffffffffffffffffff1663f94d4668896040518263ffffffff1660e01b81526004016101129190610a22565b60006040518083038186803b15801561012a57600080fd5b505afa15801561013e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526101849190810190610730565b506040517ff6c00927000000000000000000000000000000000000000000000000000000008152919350915060009073ba12222222228d8ba445958a75a0704d566bf2c89063f6c00927906101dd908c90600401610a22565b604080518083038186803b1580156101f457600080fd5b505afa158015610208573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022c91906106f4565b509050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663bb6d485a8660008151811061025f57fe5b60200260200101516040518263ffffffff1660e01b81526004016102839190610a01565b604080518083038186803b15801561029a57600080fd5b505afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610947565b60000151905060008173ffffffffffffffffffffffffffffffffffffffff1663679aefce6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906109a4565b90506000818a0290507f191c2a8659f4fc1f62e54fd03c5632ae5a7825d8bae3e3d50f195daf630d5271816040516103909190610a22565b60405180910390a16040517fd851fdfd00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff86169063d851fdfd906103ed908490600401610a22565b60206040518083038186803b15801561040557600080fd5b505afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061091f565b90507fbc0e2bb57857f5fd6d55a38e85d18c802006288eee4e106c7dd1ac2fd198af348160405161046e9190610a51565b60405180910390a1600081600f0b90507fa21fa87a234a88016da2ddd9819267ad2c1ab2e4953fbae96f37bcc0421b7150816040516104ad9190610a22565b60405180910390a160006104d6600f84900b68010000000000000000816104d057fe5b0561060c565b600080546040517fefe5049c00000000000000000000000000000000000000000000000000000000815267ffffffffffffffff9390931687029350909160609173ffffffffffffffffffffffffffffffffffffffff169063efe5049c90610543908d908790600401610a2b565b600060405180830381600087803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105b791908101906109bc565b915091507ffcad06236eba78ee1336e5243f15fd3a9983a69a882946550ddca548d55e51ba82826040516105ec929190610a5f565b60405180910390a1909c509a505050505050505050505094509492505050565b60008082600f0b121561061e57600080fd5b50600f0b60401d90565b600082601f830112610638578081fd5b813561064b61064682610ad0565b610aac565b81815291506020808301908481018184028601820187101561066c57600080fd5b60005b8481101561068b5781358452928201929082019060010161066f565b505050505092915050565b600082601f8301126106a6578081fd5b81516106b461064682610ad0565b8181529150602080830190848101818402860182018710156106d557600080fd5b60005b8481101561068b578151845292820192908201906001016106d8565b60008060408385031215610706578182fd5b825161071181610aee565b602084015190925060038110610725578182fd5b809150509250929050565b600080600060608486031215610744578081fd5b835167ffffffffffffffff8082111561075b578283fd5b818601915086601f83011261076e578283fd5b815161077c61064682610ad0565b80828252602080830192508086018b82838702890101111561079c578788fd5b8796505b848710156107c75780516107b381610aee565b8452600196909601959281019281016107a0565b5089015190975093505050808211156107de578283fd5b506107eb86828701610696565b925050604084015190509250925092565b600080600060608486031215610810578283fd5b83359250602084013561082281610aee565b929592945050506040919091013590565b600080600060608486031215610847578283fd5b8335925060208085013567ffffffffffffffff80821115610866578485fd5b818701915087601f830112610879578485fd5b813561088761064682610ad0565b81815284810190848601868402860187018c10156108a3578889fd5b8895505b838610156108ce5780356108ba81610aee565b8352600195909501949186019186016108a7565b509650505060408701359250808311156108e6578384fd5b50506108f486828701610628565b9150509250925092565b60008060408385031215610910578182fd5b50508035926020909101359150565b600060208284031215610930578081fd5b815180600f0b8114610940578182fd5b9392505050565b600060408284031215610958578081fd5b6040516040810181811067ffffffffffffffff8211171561097557fe5b604052825161098381610aee565b8152602083015160ff81168114610998578283fd5b60208201529392505050565b6000602082840312156109b5578081fd5b5051919050565b600080604083850312156109ce578182fd5b82519150602083015167ffffffffffffffff8111156109eb578182fd5b6109f785828601610696565b9150509250929050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600f9190910b815260200190565b60006040820184835260206040818501528185518084526060860191508287019350845b81811015610a9f57845183529383019391830191600101610a83565b5090979650505050505050565b60405181810167ffffffffffffffff81118282101715610ac857fe5b604052919050565b600067ffffffffffffffff821115610ae457fe5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff81168114610b1057600080fd5b5056fea264697066735822122081edd6485a80bdb1afe884d0243dc8f35504a34134712ea7cdb0ef50f279a3de64736f6c63430007030033";

export class DepositRelayer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _proportionalLiquidity: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositRelayer> {
    return super.deploy(
      _proportionalLiquidity,
      overrides || {}
    ) as Promise<DepositRelayer>;
  }
  getDeployTransaction(
    _proportionalLiquidity: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proportionalLiquidity, overrides || {});
  }
  attach(address: string): DepositRelayer {
    return super.attach(address) as DepositRelayer;
  }
  connect(signer: Signer): DepositRelayer__factory {
    return super.connect(signer) as DepositRelayer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositRelayerInterface {
    return new utils.Interface(_abi) as DepositRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositRelayer {
    return new Contract(address, _abi, signerOrProvider) as DepositRelayer;
  }
}
