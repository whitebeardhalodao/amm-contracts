/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EnumerableIERC20ToBytes32MapMock,
  EnumerableIERC20ToBytes32MapMockInterface,
} from "../EnumerableIERC20ToBytes32MapMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "OperationResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "at",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "unchecked_at",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "key",
        type: "address",
      },
    ],
    name: "unchecked_indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "unchecked_setAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "unchecked_valueAt",
    outputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061087a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80635dbe47e811610081578063c65d26831161005b578063c65d268314610249578063e0886f9014610296578063e37b1903146102b3576100c9565b80635dbe47e8146101ac578063adcd29d9146101f3578063b464631b14610210576100c9565b806329092d0e116100b257806329092d0e1461011b5780633e7b8e711461015057806354996d5d14610189576100c9565b80630127190b146100ce5780631f7b6d3214610113575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102ec565b60408051918252519081900360200190f35b6101016102fe565b61014e6004803603602081101561013157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661030f565b005b61014e6004803603604081101561016657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610358565b61014e6004803603604081101561019f57600080fd5b50803590602001356103a3565b6101df600480360360208110156101c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103b3565b604080519115158252519081900360200190f35b6101016004803603602081101561020957600080fd5b50356103bf565b6101016004803603604081101561022657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103cb565b6102666004803603602081101561025f57600080fd5b50356103df565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260208301919091528051918290030190f35b610266600480360360208110156102ac57600080fd5b50356103f5565b610101600480360360408110156102c957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610402565b60006102f8818361040f565b92915050565b600061030a600061043b565b905090565b600061031b818361043f565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a15050565b6000610365818484610590565b60408051821515815290519192507fed9840e0775590557ad736875d96c95cf1458b766335f74339951a32c82a9e33919081900360200190a1505050565b6103af6000838361068f565b5050565b60006102f881836106a7565b60006102f881836106d5565b60006103d88184846106eb565b9392505050565b6000806103ec8184610735565b91509150915091565b6000806103ec8184610766565b60006103d881848461078f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600291909101602052604090205490565b5490565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260028301602052604081205480156105865783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019101808214610517576000818152600180880160209081526040808420868552818520815481547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9182161782558286015491860191909155905416845260028a0190915290912090830190555b600081815260018088016020908152604080842080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155830184905593895573ffffffffffffffffffffffffffffffffffffffff881683526002890190529181205592506102f8915050565b60009150506102f8565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002840160205260408120548061064f575050825460408051808201825273ffffffffffffffffffffffffffffffffffffffff858116808352602080840187815260008781526001808c018452878220965187547fffffffffffffffffffffffff000000000000000000000000000000000000000016961695909517865590519484019490945594820180895590835260028801909452919020919091556103d8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160009081526001808601602052604082200183905590509392505050565b60009182526001928301602052604090912090910155565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002919091016020526040902054151590565b6000908152600191820160205260409020015490565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260028401602052604081205461071f811515846107d4565b61072c85600183036106d5565b95945050505050565b6000908152600191820160205260409020805491015473ffffffffffffffffffffffffffffffffffffffff90911691565b60008061077a8385600001541160646107d4565b6107848484610735565b915091509250929050565b60008061079c858561040f565b90506107aa811515846107d4565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01949350505050565b816103af577f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808304818104828106603090810160101b848706949093060160081b92909201016642414c230000300160c81b6044526103af91606490fdfea2646970667358221220af2d12ef061367ccef932a5af9866408e3b724a1b96361091e21f643d883297964736f6c63430007030033";

export class EnumerableIERC20ToBytes32MapMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnumerableIERC20ToBytes32MapMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<EnumerableIERC20ToBytes32MapMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EnumerableIERC20ToBytes32MapMock {
    return super.attach(address) as EnumerableIERC20ToBytes32MapMock;
  }
  connect(signer: Signer): EnumerableIERC20ToBytes32MapMock__factory {
    return super.connect(signer) as EnumerableIERC20ToBytes32MapMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumerableIERC20ToBytes32MapMockInterface {
    return new utils.Interface(
      _abi
    ) as EnumerableIERC20ToBytes32MapMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnumerableIERC20ToBytes32MapMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EnumerableIERC20ToBytes32MapMock;
  }
}
