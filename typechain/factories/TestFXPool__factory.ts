/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestFXPool, TestFXPoolInterface } from "../TestFXPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_assetWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "contract ProportionalLiquidity",
        name: "proportionalLiquidity",
        type: "address",
      },
      {
        internalType: "contract AmmV1Swaps",
        name: "swaps",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AssetIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "derivative",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assimilator",
        type: "address",
      },
    ],
    name: "AssimilatorIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epsilon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lambda",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestExitPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    name: "TestInitializePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestJoinPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    name: "TestingSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "ix",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epsilon",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assim",
        type: "address",
      },
    ],
    name: "getAssimilator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "index",
        type: "uint128",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeights",
    outputs: [
      {
        internalType: "int128[]",
        name: "",
        type: "int128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeightsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lambda",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onInitalizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assimAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "assimilator",
        type: "tuple",
      },
    ],
    name: "setAssimilator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAtHalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epsilon",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lambda",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistingStage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "$28039fd024dee0e5c388b469625a331089$__9063ac969a7390612a82908590600401613e93565b60206040518083038186803b158015612a9a57600080fd5b505af4158015612aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad29190613ad5565b905080848481518110612ae157fe5b600f92830b90920b6020928302919091019091015293909301925060010161298b565b50600b54600c546040517f0c147f2200000000000000000000000000000000000000000000000000000000815273__$374ff109b8599801873fe38f05adb3baa6$__92630c147f2292612b7f9287928792700100000000000000000000000000000000909104600f90810b9291900b90600e90600401614146565b60206040518083038186803b158015612b9757600080fd5b505af4158015612bab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bcf9190613ad5565b949350505050565b6000600f82810b9084900b037fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611b0657506f7fffffffffffffffffffffffffffffff811315611ab357600080fd5b6000677fffffffffffffff821115612c4257600080fd5b5060401b90565b6000600f83810b9083900b0260401d7fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611b0657506f7fffffffffffffffffffffffffffffff811315611ab357600080fd5b600081600f0b60001415612cb357600080fd5b600082600f0b604085600f0b901b81612cc857fe5b0590507fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611b0657506f7fffffffffffffffffffffffffffffff811315611ab357600080fd5b600081612d2257506000610922565b600083600f0b1215612d3357600080fd5b600f83900b6fffffffffffffffffffffffffffffffff8316810260401c90608084901c0277ffffffffffffffffffffffffffffffffffffffffffffffff811115612d7c57600080fd5b60401b8119811115612d8d57600080fd5b019392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600281511015612dcf57610942565b600081600081518110612dde57fe5b602002602001015190506000600190505b8251811015612332576000838281518110612e0657fe5b60200260200101519050612e2f816001600160a01b0316846001600160a01b0316106065611e2e565b9150600101612def565b600081612e4557600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff8411612e7b5782604085901b81612e7357fe5b049050612f92565b60c084811c6401000000008110612e94576020918201911c5b620100008110612ea6576010918201911c5b6101008110612eb7576008918201911c5b60108110612ec7576004918201911c5b60048110612ed7576002918201911c5b60028110612ee6576001820191505b60bf820360018603901c6001018260ff0387901b81612f0157fe5b0492506fffffffffffffffffffffffffffffffff831115612f2157600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015612f56576001820391505b608084901b92900382811015612f6d576001820391505b829003608084901c8214612f7d57fe5b888181612f8657fe5b04870196505050505050505b6fffffffffffffffffffffffffffffffff811115611ab357600080fd5b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612fce610ef6565b6001600160a01b031614158015612fe95750612fe983613453565b1561301157612ff6610ef6565b6001600160a01b0316336001600160a01b0316149050610922565b6130196128ba565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b815260040161304893929190613fc4565b60206040518083038186803b15801561306057600080fd5b505afa158015613074573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197b9190613819565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082821115611a645760405162461bcd60e51b81526004016115e490614333565b4690565b60006131208215156004611e2e565b8261312d57506000610922565b670de0b6b3a7640000838102906131509085838161314757fe5b04146005611e2e565b82818161315957fe5b04915050610922565b600082820261318684158061317f57508385838161317c57fe5b04145b6003611e2e565b670de0b6b3a764000090049392505050565b6131af6001600160a01b038316151561019b611e2e565b6131bb82600083612332565b6001600160a01b0382166000908152602081905260409020546131de90826130eb565b6001600160a01b03831660009081526020819052604090205560025461320490826130eb565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613245908590613fbb565b60405180910390a35050565b60006132608215156004611e2e565b8261326d57506000610922565b670de0b6b3a7640000838102906132879085838161314757fe5b82600182038161329357fe5b04600101915050610922565b60006001600160a01b0382163014156132c15750670de0b6b3a764000061084f565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156132fc57600080fd5b505afa158015613310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133349190613d5a565b60ff1690506000613346601283611a54565b600a0a670de0b6b3a764000002949350505050565b600082820261337584158061317f57508385838161317c57fe5b80613384576000915050610922565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201613293565b50600090565b610c118282610c11565b6133d160008383612332565b6002546133de908261216b565b6002556001600160a01b038216600090815260208190526040902054613404908261216b565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90613245908590613fbb565b600061347e7f38e9922e00000000000000000000000000000000000000000000000000000000610e7e565b82148061092257506134af7f50dd6ed900000000000000000000000000000000000000000000000000000000610e7e565b909114919050565b604080518082019091526000808252602082015290565b803561084f8161458f565b600082601f8301126134e9578081fd5b81356134fc6134f782614565565b614541565b81815291506020808301908481018184028601820187101561351d57600080fd5b60005b8481101561353c57813584529282019290820190600101613520565b505050505092915050565b600082601f830112613557578081fd5b81516135656134f782614565565b81815291506020808301908481018184028601820187101561358657600080fd5b60005b8481101561353c57815184529282019290820190600101613589565b600082601f8301126135b5578081fd5b813567ffffffffffffffff8111156135c957fe5b6135dc6020601f19601f84011601614541565b91508082528360208285010111156135f357600080fd5b8060208401602084013760009082016020015292915050565b80356002811061084f57600080fd5b60006020828403121561362c578081fd5b8135611ab38161458f565b60008060408385031215613649578081fd5b82356136548161458f565b915060208301356136648161458f565b809150509250929050565b600080600060608486031215613683578081fd5b833561368e8161458f565b9250602084013561369e8161458f565b929592945050506040919091013590565b600080600080600080600060e0888a0312156136c9578283fd5b87356136d48161458f565b965060208801356136e48161458f565b955060408801359450606088013593506080880135613702816145b2565b9699959850939692959460a0840135945060c09093013592915050565b6000808284036060811215613732578283fd5b833561373d8161458f565b92506040601f1982011215613750578182fd5b506040516040810181811067ffffffffffffffff8211171561376e57fe5b604052602084013561377f8161458f565b8152604084013561378f816145b2565b6020820152919491935090915050565b600080604083850312156137b1578182fd5b82356137bc8161458f565b946020939093013593505050565b6000602082840312156137db578081fd5b815167ffffffffffffffff8111156137f1578182fd5b612bcf84828501613547565b60006020828403121561380e578081fd5b8135611ab3816145a4565b60006020828403121561382a578081fd5b8151611ab3816145a4565b600080600080600060a0868803121561384c578283fd5b85359450602086013561385e8161458f565b9350604086013561386e8161458f565b9250606086013567ffffffffffffffff8082111561388a578283fd5b61389689838a016134d9565b935060808801359150808211156138ab578283fd5b506138b8888289016135a5565b9150509295509295909350565b600080600080600080600080610100898b0312156138e1578182fd5b883597506138f160208a016134ce565b96506138ff60408a016134ce565b9550606089013567ffffffffffffffff8082111561391b578384fd5b6139278c838d016134d9565b965060808b0135955060a08b0135945060c08b013591508082111561394a578384fd5b6139568c838d016134d9565b935060e08b013591508082111561396b578283fd5b506139788b828c016135a5565b9150509295985092959890939650565b600080600080600080600060e0888a0312156139a2578081fd5b8735965060208801356139b48161458f565b955060408801356139c48161458f565b9450606088013567ffffffffffffffff808211156139e0578283fd5b6139ec8b838c016134d9565b955060808a0135945060a08a0135935060c08a0135915080821115613a0f578283fd5b50613a1c8a828b016135a5565b91505092959891949750929550565b600060208284031215613a3c578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611ab3578182fd5b600060208284031215613a7c578081fd5b8151611ab38161458f565b60008060408385031215613a99578182fd5b8235613aa48161458f565b9150602083013567ffffffffffffffff811115613abf578182fd5b613acb858286016135a5565b9150509250929050565b600060208284031215613ae6578081fd5b815180600f0b8114611ab3578182fd5b600060408284031215613b07578081fd5b6040516040810181811067ffffffffffffffff82111715613b2457fe5b6040528251613b328161458f565b81526020830151613b42816145b2565b60208201529392505050565b600080600060608486031215613b62578081fd5b833567ffffffffffffffff80821115613b79578283fd5b8186019150610120808389031215613b8f578384fd5b613b9881614541565b9050613ba38361360c565b8152613bb1602084016134ce565b6020820152613bc2604084016134ce565b6040820152606083013560608201526080830135608082015260a083013560a0820152613bf160c084016134ce565b60c0820152613c0260e084016134ce565b60e08201526101008084013583811115613c1a578586fd5b613c268a8287016135a5565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613c56578081fd5b81356fffffffffffffffffffffffffffffffff81168114611ab3578182fd5b600060208284031215613c86578081fd5b5035919050565b600060208284031215613c9e578081fd5b5051919050565b60008060408385031215613cb7578182fd5b82519150602083015167ffffffffffffffff811115613cd4578182fd5b613acb85828601613547565b60008060008060808587031215613cf5578182fd5b8451935060208501519250604085015191506060850151613d158161458f565b939692955090935050565b600080600080600060a08688031215613d37578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b600060208284031215613d6b578081fd5b8151611ab3816145b2565b6000815180845260208085019450808401835b83811015613da557815187529582019590820190600101613d89565b509495945050505050565b60008151808452815b81811015613dd557602081850181015186830182015201613db9565b81811115613de65782602083870101525b50601f01601f19169290920160200192915050565b600f0b9052565b80516001600160a01b0316825260209081015160ff16910152565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613efe578351600f0b83529284019291840191600101613edf565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613f4a57613f3a848351613e02565b9284019290850190600101613f27565b5091979650505050505050565b600060208252611ab36020830184613d76565b600060408252613f7d6040830185613d76565b8281036020840152613f8f8185613d76565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9788526001600160a01b03968716602089015294861660408801526060870193909352908416608086015290921660a084015260c083019190915260e08201526101000190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b600083825260406020830152612bcf6040830184613db0565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0395861681528451600f90810b6020808401919091529095015190940b60408501529184166060840152909216608082015260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b600f9190910b815260200190565b600060a08201600f88810b8452602060a08186015282895180855260c087019150828b019450855b8181101561418c578551850b8352948301949183019160010161416e565b50506040935088830b8487015287830b60608701526080868203818801528188546141b78185613fbb565b91506141c28a614583565b9350875b600182818301106141d75750614207565b85546141e585828b0b613dfb565b6141f588860182881c8b0b613dfb565b509490940193918701916002016141c6565b84549750818110156142275761421f8389890b613dfb565b918501916001015b818110156142425761423d8389861c890b613dfb565b918501915b50909d9c50505050505050505050505050565b600060208252611ab36020830184613db0565b6020808252601c908201527f43757276652f706172616d657465722d696e76616c69642d6265746100000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f496e76616c6964206c656e677468206f66206d6178416d6f756e7473496e207060408201527f61796c6f61642e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f43757276652f706172616d657465722d696e76616c69642d6d61780000000000604082015260600190565b6020808252601d908201527f43757276652f706172616d657465722d696e76616c69642d616c706861000000604082015260600190565b6020808252601f908201527f43757276652f706172616d657465722d696e76616c69642d657073696c6f6e00604082015260600190565b6020808252601d908201527f43757276652f706172616d65746572732d696e6372656173652d666565000000604082015260600190565b6020808252601e908201527f43757276652f706172616d657465722d696e76616c69642d6c616d6264610000604082015260600190565b604081016109228284613e02565b600083825260406020830152612bcf6040830184613d76565b6000848252606060208301526144f46060830185613d76565b82810360408401526145068185613d76565b9695505050505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561455d57fe5b604052919050565b600067ffffffffffffffff82111561457957fe5b5060209081020190565b60009081526020902090565b6001600160a01b038116811461094257600080fd5b801515811461094257600080fd5b60ff8116811461094257600080fdfea2646970667358221220439bd49a139629934bf6a60ab640b365fb3a5a5c16c3389d534c5eec8e1c896f64736f6c634300070300334b18271a7872ab0f9e58e9ca39180e3c710490f802d663f20ae751a8e6b29bc1";

type TestFXPoolConstructorParams =
  | [linkLibraryAddresses: TestFXPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFXPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestFXPool__factory extends ContractFactory {
  constructor(...args: TestFXPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestFXPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestFXPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28039fd024dee0e5c388b469625a331089\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/Assimilators.sol:Assimilators"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$374ff109b8599801873fe38f05adb3baa6\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/CurveMath.sol:CurveMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestFXPool> {
    return super.deploy(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    ) as Promise<TestFXPool>;
  }
  getDeployTransaction(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    );
  }
  attach(address: string): TestFXPool {
    return super.attach(address) as TestFXPool;
  }
  connect(signer: Signer): TestFXPool__factory {
    return super.connect(signer) as TestFXPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFXPoolInterface {
    return new utils.Interface(_abi) as TestFXPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestFXPool {
    return new Contract(address, _abi, signerOrProvider) as TestFXPool;
  }
}

export interface TestFXPoolLibraryAddresses {
  ["contracts/amm-v1/Assimilators.sol:Assimilators"]: string;
  ["contracts/amm-v1/CurveMath.sol:CurveMath"]: string;
}
