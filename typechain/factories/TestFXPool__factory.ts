/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestFXPool, TestFXPoolInterface } from "../TestFXPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_assetWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "contract ProportionalLiquidity",
        name: "proportionalLiquidity",
        type: "address",
      },
      {
        internalType: "contract AmmV1Swaps",
        name: "swaps",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AssetIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "derivative",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assimilator",
        type: "address",
      },
    ],
    name: "AssimilatorIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epsilon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lambda",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestExitPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    name: "TestInitializePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestJoinPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    name: "TestingSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "ix",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epsilon",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assim",
        type: "address",
      },
    ],
    name: "getAssimilator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeights",
    outputs: [
      {
        internalType: "int128[]",
        name: "",
        type: "int128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeightsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lambda",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onInitalizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assimAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "assimilator",
        type: "tuple",
      },
    ],
    name: "setAssimilator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAtHalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epsilon",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lambda",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistingStage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "$28039fd024dee0e5c388b469625a331089$__9063ac969a7390612a07908590600401613e06565b60206040518083038186803b158015612a1f57600080fd5b505af4158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a579190613a95565b905080848481518110612a6657fe5b600f92830b90920b60209283029190910190910152939093019250600101612910565b50600b54600c546040517f0c147f2200000000000000000000000000000000000000000000000000000000815273__$374ff109b8599801873fe38f05adb3baa6$__92630c147f2292612b049287928792700100000000000000000000000000000000909104600f90810b9291900b90600e906004016140a0565b60206040518083038186803b158015612b1c57600080fd5b505af4158015612b30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b549190613a95565b949350505050565b6000600f82810b9084900b037fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611b1557506f7fffffffffffffffffffffffffffffff811315611ac257600080fd5b6000677fffffffffffffff821115612bc757600080fd5b5060401b90565b6000600f83810b9083900b0260401d7fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611b1557506f7fffffffffffffffffffffffffffffff811315611ac257600080fd5b600081600f0b60001415612c3857600080fd5b600082600f0b604085600f0b901b81612c4d57fe5b0590507fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611b1557506f7fffffffffffffffffffffffffffffff811315611ac257600080fd5b600081612ca7575060006108d6565b600083600f0b1215612cb857600080fd5b600f83900b6fffffffffffffffffffffffffffffffff8316810260401c90608084901c0277ffffffffffffffffffffffffffffffffffffffffffffffff811115612d0157600080fd5b60401b8119811115612d1257600080fd5b019392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600281511015612d54576108f6565b600081600081518110612d6357fe5b602002602001015190506000600190505b8251811015612340576000838281518110612d8b57fe5b60200260200101519050612db4816001600160a01b0316846001600160a01b0316106065611e3c565b9150600101612d74565b600081612dca57600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff8411612e005782604085901b81612df857fe5b049050612f17565b60c084811c6401000000008110612e19576020918201911c5b620100008110612e2b576010918201911c5b6101008110612e3c576008918201911c5b60108110612e4c576004918201911c5b60048110612e5c576002918201911c5b60028110612e6b576001820191505b60bf820360018603901c6001018260ff0387901b81612e8657fe5b0492506fffffffffffffffffffffffffffffffff831115612ea657600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015612edb576001820391505b608084901b92900382811015612ef2576001820391505b829003608084901c8214612f0257fe5b888181612f0b57fe5b04870196505050505050505b6fffffffffffffffffffffffffffffffff811115611ac257600080fd5b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612f53610eae565b6001600160a01b031614158015612f6e5750612f6e836133d8565b15612f9657612f7b610eae565b6001600160a01b0316336001600160a01b03161490506108d6565b612f9e61283f565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612fcd93929190613f37565b60206040518083038186803b158015612fe557600080fd5b505afa158015612ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061198a91906137d9565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082821115611a735760405162461bcd60e51b81526004016115ba9061428d565b4690565b60006130a58215156004611e3c565b826130b2575060006108d6565b670de0b6b3a7640000838102906130d5908583816130cc57fe5b04146005611e3c565b8281816130de57fe5b049150506108d6565b600082820261310b84158061310457508385838161310157fe5b04145b6003611e3c565b670de0b6b3a764000090049392505050565b6131346001600160a01b038316151561019b611e3c565b61314082600083612340565b6001600160a01b0382166000908152602081905260409020546131639082613070565b6001600160a01b0383166000908152602081905260409020556002546131899082613070565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906131ca908590613f2e565b60405180910390a35050565b60006131e58215156004611e3c565b826131f2575060006108d6565b670de0b6b3a76400008381029061320c908583816130cc57fe5b82600182038161321857fe5b046001019150506108d6565b60006001600160a01b0382163014156132465750670de0b6b3a7640000610d46565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561328157600080fd5b505afa158015613295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b99190613caf565b60ff16905060006132cb601283611a63565b600a0a670de0b6b3a764000002949350505050565b60008282026132fa84158061310457508385838161310157fe5b806133095760009150506108d6565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201613218565b50600090565b610bc58282610bc5565b61335660008383612340565b6002546133639082612179565b6002556001600160a01b0382166000908152602081905260409020546133899082612179565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906131ca908590613f2e565b60006134037f38e9922e00000000000000000000000000000000000000000000000000000000610e36565b8214806108d657506134347f50dd6ed900000000000000000000000000000000000000000000000000000000610e36565b909114919050565b604080518082019091526000808252602082015290565b8035610d46816144e9565b600082601f83011261346e578081fd5b813561348161347c826144bf565b61449b565b8181529150602080830190848101818402860182018710156134a257600080fd5b60005b848110156134c1578135845292820192908201906001016134a5565b505050505092915050565b600082601f8301126134dc578081fd5b813567ffffffffffffffff8111156134f057fe5b61352160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161449b565b915080825283602082850101111561353857600080fd5b8060208401602084013760009082016020015292915050565b803560028110610d4657600080fd5b600060208284031215613571578081fd5b8135611ac2816144e9565b6000806040838503121561358e578081fd5b8235613599816144e9565b915060208301356135a9816144e9565b809150509250929050565b6000806000606084860312156135c8578081fd5b83356135d3816144e9565b925060208401356135e3816144e9565b929592945050506040919091013590565b600080600080600080600060e0888a03121561360e578283fd5b8735613619816144e9565b96506020880135613629816144e9565b9550604088013594506060880135935060808801356136478161450c565b9699959850939692959460a0840135945060c09093013592915050565b6000808284036060811215613677578283fd5b8335613682816144e9565b925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156136b3578182fd5b506040516040810181811067ffffffffffffffff821117156136d157fe5b60405260208401356136e2816144e9565b815260408401356136f28161450c565b6020820152919491935090915050565b60008060408385031215613714578182fd5b823561371f816144e9565b946020939093013593505050565b6000602080838503121561373f578182fd5b825167ffffffffffffffff811115613755578283fd5b8301601f81018513613765578283fd5b805161377361347c826144bf565b818152838101908385018584028501860189101561378f578687fd5b8694505b838510156137b1578051835260019490940193918501918501613793565b50979650505050505050565b6000602082840312156137ce578081fd5b8135611ac2816144fe565b6000602082840312156137ea578081fd5b8151611ac2816144fe565b600080600080600060a0868803121561380c578283fd5b85359450602086013561381e816144e9565b9350604086013561382e816144e9565b9250606086013567ffffffffffffffff8082111561384a578283fd5b61385689838a0161345e565b9350608088013591508082111561386b578283fd5b50613878888289016134cc565b9150509295509295909350565b600080600080600080600080610100898b0312156138a1578182fd5b883597506138b160208a01613453565b96506138bf60408a01613453565b9550606089013567ffffffffffffffff808211156138db578384fd5b6138e78c838d0161345e565b965060808b0135955060a08b0135945060c08b013591508082111561390a578384fd5b6139168c838d0161345e565b935060e08b013591508082111561392b578283fd5b506139388b828c016134cc565b9150509295985092959890939650565b600080600080600080600060e0888a031215613962578081fd5b873596506020880135613974816144e9565b95506040880135613984816144e9565b9450606088013567ffffffffffffffff808211156139a0578283fd5b6139ac8b838c0161345e565b955060808a0135945060a08a0135935060c08a01359150808211156139cf578283fd5b506139dc8a828b016134cc565b91505092959891949750929550565b6000602082840312156139fc578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611ac2578182fd5b600060208284031215613a3c578081fd5b8151611ac2816144e9565b60008060408385031215613a59578182fd5b8235613a64816144e9565b9150602083013567ffffffffffffffff811115613a7f578182fd5b613a8b858286016134cc565b9150509250929050565b600060208284031215613aa6578081fd5b815180600f0b8114611ac2578182fd5b600060408284031215613ac7578081fd5b6040516040810181811067ffffffffffffffff82111715613ae457fe5b6040528251613af2816144e9565b81526020830151613b028161450c565b60208201529392505050565b600080600060608486031215613b22578081fd5b833567ffffffffffffffff80821115613b39578283fd5b8186019150610120808389031215613b4f578384fd5b613b588161449b565b9050613b6383613551565b8152613b7160208401613453565b6020820152613b8260408401613453565b6040820152606083013560608201526080830135608082015260a083013560a0820152613bb160c08401613453565b60c0820152613bc260e08401613453565b60e08201526101008084013583811115613bda578586fd5b613be68a8287016134cc565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613c16578081fd5b5035919050565b600060208284031215613c2e578081fd5b5051919050565b60008060008060808587031215613c4a578182fd5b8451935060208501519250604085015191506060850151613c6a816144e9565b939692955090935050565b600080600080600060a08688031215613c8c578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b600060208284031215613cc0578081fd5b8151611ac28161450c565b6000815180845260208085019450808401835b83811015613cfa57815187529582019590820190600101613cde565b509495945050505050565b60008151808452815b81811015613d2a57602081850181015186830182015201613d0e565b81811115613d3b5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600f0b9052565b80516001600160a01b0316825260209081015160ff16910152565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613e71578351600f0b83529284019291840191600101613e52565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613ebd57613ead848351613d75565b9284019290850190600101613e9a565b5091979650505050505050565b600060208252611ac26020830184613ccb565b600060408252613ef06040830185613ccb565b8281036020840152613f028185613ccb565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9788526001600160a01b03968716602089015294861660408801526060870193909352908416608086015290921660a084015260c083019190915260e08201526101000190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b600083825260406020830152612b546040830184613d05565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0395861681528451600f90810b6020808401919091529095015190940b60408501529184166060840152909216608082015260a081019190915260c00190565b600f9190910b815260200190565b600060a08201600f88810b8452602060a08186015282895180855260c087019150828b019450855b818110156140e6578551850b835294830194918301916001016140c8565b50506040935088830b8487015287830b60608701526080868203818801528188546141118185613f2e565b915061411c8a6144dd565b9350875b600182818301106141315750614161565b855461413f85828b0b613d6e565b61414f88860182881c8b0b613d6e565b50949094019391870191600201614120565b8454975081811015614181576141798389890b613d6e565b918501916001015b8181101561419c576141978389861c890b613d6e565b918501915b50909d9c50505050505050505050505050565b600060208252611ac26020830184613d05565b6020808252601c908201527f43757276652f706172616d657465722d696e76616c69642d6265746100000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f496e76616c6964206c656e677468206f66206d6178416d6f756e7473496e207060408201527f61796c6f61642e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f43757276652f706172616d657465722d696e76616c69642d6d61780000000000604082015260600190565b6020808252601d908201527f43757276652f706172616d657465722d696e76616c69642d616c706861000000604082015260600190565b6020808252601f908201527f43757276652f706172616d657465722d696e76616c69642d657073696c6f6e00604082015260600190565b6020808252601d908201527f43757276652f706172616d65746572732d696e6372656173652d666565000000604082015260600190565b6020808252601e908201527f43757276652f706172616d657465722d696e76616c69642d6c616d6264610000604082015260600190565b604081016108d68284613d75565b600083825260406020830152612b546040830184613ccb565b60008482526060602083015261444e6060830185613ccb565b82810360408401526144608185613ccb565b9695505050505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff811182821017156144b757fe5b604052919050565b600067ffffffffffffffff8211156144d357fe5b5060209081020190565b60009081526020902090565b6001600160a01b03811681146108f657600080fd5b80151581146108f657600080fd5b60ff811681146108f657600080fdfea26469706673582212207cf211b1d7b9cbf73b1cd3e671730de86194fb4146e4557e31e9532766cca47d64736f6c634300070300334b18271a7872ab0f9e58e9ca39180e3c710490f802d663f20ae751a8e6b29bc1";

type TestFXPoolConstructorParams =
  | [linkLibraryAddresses: TestFXPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFXPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestFXPool__factory extends ContractFactory {
  constructor(...args: TestFXPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestFXPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestFXPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28039fd024dee0e5c388b469625a331089\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/Assimilators.sol:Assimilators"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$374ff109b8599801873fe38f05adb3baa6\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/CurveMath.sol:CurveMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestFXPool> {
    return super.deploy(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    ) as Promise<TestFXPool>;
  }
  getDeployTransaction(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    );
  }
  attach(address: string): TestFXPool {
    return super.attach(address) as TestFXPool;
  }
  connect(signer: Signer): TestFXPool__factory {
    return super.connect(signer) as TestFXPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFXPoolInterface {
    return new utils.Interface(_abi) as TestFXPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestFXPool {
    return new Contract(address, _abi, signerOrProvider) as TestFXPool;
  }
}

export interface TestFXPoolLibraryAddresses {
  ["contracts/amm-v1/Assimilators.sol:Assimilators"]: string;
  ["contracts/amm-v1/CurveMath.sol:CurveMath"]: string;
}
