/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestFXPool, TestFXPoolInterface } from "../TestFXPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_assetWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "contract ProportionalLiquidity",
        name: "proportionalLiquidity",
        type: "address",
      },
      {
        internalType: "contract AmmV1Swaps",
        name: "swaps",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AssetIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "derivative",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assimilator",
        type: "address",
      },
    ],
    name: "AssimilatorIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epsilon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lambda",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestExitPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    name: "TestInitializePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestJoinPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    name: "TestingSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "ix",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delta",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epsilon",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assim",
        type: "address",
      },
    ],
    name: "getAssimilator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeights",
    outputs: [
      {
        internalType: "int128[]",
        name: "",
        type: "int128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeightsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lambda",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onInitalizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assimAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "assimilator",
        type: "tuple",
      },
    ],
    name: "setAssimilator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAtHalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epsilon",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lambda",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistingStage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6102006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526015805463ff0000001962ffffff1990911662010000171663010000001790553480156200005757600080fd5b5060405162005e4338038062005e438339810160408190526200007a9162001264565b8a8a8a8a8a8a8a8a8a8a8a8a60018b8b8b8c516001600160401b0381118015620000a357600080fd5b50604051908082528060200260200182016040528015620000ce578160200160208202803683370190505b508a8a8a33828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b8152505050604051806040016040528060128152602001714d6f636b6564205377697373204672616e6360701b815250600390805190602001906200016d92919062000f86565b506040805180820190915260038082526221a42360e91b60209092019182526200019a9160049162000f86565b505060058054600860ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200020d90506276a7008311156101946200041d565b6200022162278d008211156101956200041d565b429091016101608190520161018052855162000243906002111560c86200041d565b6200025d6200025162000432565b8751111560c96200041d565b62000273866200043760201b62001a251760201c565b6200027e8462000443565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f90620002af908d90600401620014a0565b602060405180830381600087803b158015620002ca57600080fd5b505af1158015620002df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200030591906200124b565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d2906200033a9084908b908b9060040162001406565b600060405180830381600087803b1580156200035557600080fd5b505af11580156200036a573d6000803e3d6000fd5b50505050806101a081815250505050505050505050505050620003a8886000815181106200039457fe5b6020026020010151620004cf60201b60201c565b6101c0528751620003c190899060019081106200039457fe5b6101e052600980546001600160a01b038085166001600160a01b031992831617909255600a805492841692909116919091179055620004018787620005a3565b5050505050505050505050505050505050505050505062001720565b816200042e576200042e8162000837565b5050565b600290565b806200042e816200088a565b6200045864e8d4a5100082101560cb6200041d565b6200047067016345785d8a000082111560ca6200041d565b6200048f8160c06008546200091460201b62001a2f179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90620004c4908390620016bf565b60405180910390a150565b60006001600160a01b038216301415620004f35750670de0b6b3a76400006200059e565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200052f57600080fd5b505afa15801562000544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056a9190620013b6565b60ff1690506000620005896012836200092960201b62001a451760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b8051600214620005d05760405162461bcd60e51b8152600401620005c790620014fb565b60405180910390fd5b6005825181620005dc57fe5b0615620005fd5760405162461bcd60e51b8152600401620005c79062001540565b60005b81518110156200083257600081600502905060138482815181106200062157fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583516012908590839081106200066e57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558351601490859060028401908110620006be57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583518490600283019081106200070b57fe5b60200260200101516001600160a01b03168482815181106200072957fe5b60200260200101516001600160a01b0316146200078e5760128482600201815181106200075257fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b620008288482815181106200079f57fe5b6020026020010151858360010181518110620007b757fe5b6020026020010151868460020181518110620007cf57fe5b6020026020010151878560030181518110620007e757fe5b6020026020010151888660040181518110620007ff57fe5b60200260200101518888815181106200081457fe5b60200260200101516200094160201b60201c565b5060010162000600565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200089b5762000911565b600081600081518110620008ab57fe5b602002602001015190506000600190505b825181101562000832576000838281518110620008d557fe5b6020026020010151905062000906816001600160a01b0316846001600160a01b03161060656200041d60201b60201c565b9150600101620008bc565b50565b6001600160401b03811b1992909216911b1790565b60006200093b8383111560016200041d565b50900390565b6001600160a01b0386166200096a5760405162461bcd60e51b8152600401620005c790620015d8565b6001600160a01b038516620009935760405162461bcd60e51b8152600401620005c79062001662565b6001600160a01b038416620009bc5760405162461bcd60e51b8152600401620005c790620014b5565b6001600160a01b038316620009e55760405162461bcd60e51b8152600401620005c79062001586565b670de0b6b3a7640000811062000a0f5760405162461bcd60e51b8152600401620005c79062001620565b836001600160a01b0316866001600160a01b03161462000ab35760405163095ea7b360e01b81526001600160a01b0387169063095ea7b39062000a5b90859060001990600401620013ed565b602060405180830381600087803b15801562000a7657600080fd5b505af115801562000a8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ab1919062001229565b505b62000abd6200100b565b506040805180820182526001600160a01b038088168252600f5460ff90811660208085019182528b84166000908152601090915294909420835181549551909216600160a01b0260ff60a01b19929093166001600160a01b031990951694909417161790915562000b2d6200100b565b506040805180820182526001600160a01b038681168252600f5460ff90811660208085019182528a84166000908152601082529586208551815493516001600160a01b031990941695169490941760ff60a01b1916600160a01b92909316919091029190911790915590919062000bf89062000bbf90600190670de0b6b3a76400009062000db3811b62001a5b17901c565b62000be1670de0b6b3a76400008762000db360201b62001a5b1790919060201c565b600f0b62000df560201b62001aab1790919060201c565b600e805460018082019092557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd600282040180549183166010026101000a6001600160801b0381810219909316600f86810b94909416919091021790558054918201815560005284517f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802909101805460208701516001600160a01b03199091166001600160a01b039384161760ff60a01b1916600160a01b60ff9092169190910217905560405191925088811691908b16907f69745294f8c4916d2a4ca68ea4e3be1d5990927ba68481e69368deb3c4395d029062000cf9908890620016bf565b60405180910390a3866001600160a01b0316896001600160a01b03168a6001600160a01b031660008051602062005e238339815191528b60405162000d3f9190620013d9565b60405180910390a4856001600160a01b0316886001600160a01b03161462000da857866001600160a01b0316896001600160a01b0316886001600160a01b031660008051602062005e238339815191528960405162000d9f9190620013d9565b60405180910390a45b505050505050505050565b60008162000dc057600080fd5b600062000dce848462000e2b565b905060016001607f1b036001600160801b038216111562000dee57600080fd5b9392505050565b6000600f83810b9083900b0160016001607f1b0319811280159062000e21575060016001607f1b038113155b62000dee57600080fd5b60008162000e3857600080fd5b60006001600160c01b03841162000e605782604085901b8162000e5757fe5b04905062000f71565b60c084811c640100000000811062000e7a576020918201911c5b62010000811062000e8d576010918201911c5b610100811062000e9f576008918201911c5b6010811062000eb0576004918201911c5b6004811062000ec1576002918201911c5b6002811062000ed1576001820191505b60bf820360018603901c6001018260ff0387901b8162000eed57fe5b0492506001600160801b0383111562000f0557600080fd5b608085901c83026001600160801b038616840260c088901c604089901b8281101562000f32576001820391505b608084901b9290038281101562000f4a576001820391505b829003608084901c821462000f5b57fe5b88818162000f6557fe5b04870196505050505050505b6001600160801b0381111562000dee57600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000fc957805160ff191683800117855562000ff9565b8280016001018555821562000ff9579182015b8281111562000ff957825182559160200191906001019062000fdc565b506200100792915062001022565b5090565b604080518082019091526000808252602082015290565b5b8082111562001007576000815560010162001023565b600082601f8301126200104a578081fd5b8151620010616200105b82620016ec565b620016c8565b8181529150602080830190848101818402860182018710156200108357600080fd5b60005b84811015620010af5781516200109c816200170a565b8452928201929082019060010162001086565b505050505092915050565b600082601f830112620010cb578081fd5b8151620010dc6200105b82620016ec565b818152915060208083019084810181840286018201871015620010fe57600080fd5b60005b84811015620010af57815162001117816200170a565b8452928201929082019060010162001101565b600082601f8301126200113b578081fd5b81516200114c6200105b82620016ec565b8181529150602080830190848101818402860182018710156200116e57600080fd5b60005b84811015620010af5781518452928201929082019060010162001171565b80516200059e816200170a565b600082601f830112620011ad578081fd5b81516001600160401b03811115620011c157fe5b6020620011d7601f8301601f19168201620016c8565b92508183528481838601011115620011ee57600080fd5b60005b828110156200120e578481018201518482018301528101620011f1565b82811115620012205760008284860101525b50505092915050565b6000602082840312156200123b578081fd5b8151801515811462000dee578182fd5b6000602082840312156200125d578081fd5b5051919050565b60008060008060008060008060008060006101608c8e03121562001286578687fd5b620012918c6200118f565b60208d0151909b506001600160401b03811115620012ad578788fd5b620012bb8e828f016200119c565b60408e0151909b5090506001600160401b03811115620012d9578788fd5b620012e78e828f016200119c565b60608e0151909a5090506001600160401b0381111562001305578788fd5b620013138e828f01620010ba565b60808e015190995090506001600160401b0381111562001331578788fd5b6200133f8e828f0162001039565b60a08e015190985090506001600160401b038111156200135d578687fd5b6200136b8e828f016200112a565b96505060c08c0151945060e08c015193506101008c01519250620013936101208d016200118f565b9150620013a46101408d016200118f565b90509295989b509295989b9093969950565b600060208284031215620013c8578081fd5b815160ff8116811462000dee578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620014515784516001600160a01b0316835293830193918301916001016200142a565b505084810360408601528551808252908201925081860190845b81811015620014925782516001600160a01b0316855293830193918301916001016200146b565b509298975050505050505050565b6020810160038310620014af57fe5b91905290565b60208082526026908201527f43757276652f726573657276652d63616e6e6f742d62652d7a65726f74682d6160408201526564647265737360d01b606082015260800190565b60208082526025908201527f43757276652f6173736574576569676874732d6d7573742d62652d6c656e6774604082015264682d74776f60d81b606082015260800190565b60208082526026908201527f43757276652f6173736574732d6d7573742d62652d646976697369626c652d62604082015265792d6669766560d01b606082015260800190565b60208082526032908201527f43757276652f726573657276652d617373696d696c61746f722d63616e6e6f746040820152712d62652d7a65726f74682d6164647265737360701b606082015260800190565b60208082526028908201527f43757276652f6e756d6572616972652d63616e6e6f742d62652d7a65726f74686040820152672d6164647265737360c01b606082015260800190565b60208082526022908201527f43757276652f7765696768742d6d7573742d62652d6c6573732d7468616e2d6f6040820152616e6560f01b606082015260800190565b60208082526034908201527f43757276652f6e756d6572616972652d617373696d696c61746f722d63616e6e60408201527f6f742d62652d7a65726f74682d61646472657373000000000000000000000000606082015260800190565b90815260200190565b6040518181016001600160401b0381118282101715620016e457fe5b604052919050565b60006001600160401b038211156200170057fe5b5060209081020190565b6001600160a01b03811681146200091157600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516101e051614677620017ac60003980611e96525080611e5c525080610adb525080611e14525080611df0525080610ed45250806113245250806120f6525080612138525080612117525080610eb0525080610e3a52506146776000f3fe608060405234801561001057600080fd5b506004361061038e5760003560e01c806387ec6817116101de578063b5648c251161010f578063d5c096c4116100ad578063db1d0fd51161007c578063db1d0fd51461076d578063dd62ed3e14610775578063e17f9ee014610788578063eac8f5b81461079b5761038e565b8063d5c096c41461072c578063d828bb881461073f578063d851fdfd14610752578063dad0be61146107655761038e565b8063c0046e39116100e9578063c0046e39146106dd578063caa6fea4146106f0578063cf35bdd0146106f8578063d505accf146107195761038e565b8063b5648c2514610697578063b5f163ff146106aa578063bb6d485a146106bd5761038e565b8063a457c2d71161017c578063a8e9d52811610156578063a8e9d52814610656578063a9059cbb14610669578063aaabadc51461067c578063addd5099146106845761038e565b8063a457c2d714610633578063a7ba9fb114610646578063a89d490c1461064e5761038e565b806395d89b41116101b857806395d89b41146106085780639d1dd428146106105780639d2c110c146106185780639faa3c911461062b5761038e565b806387ec6817146105e5578063893d20e8146105f85780638d928af8146106005761038e565b806338e9922e116102c357806361718b831161026157806379f93a671161023057806379f93a67146105975780637ecebe001461059f5780638334278d146105b2578063851c1bb3146105d25761038e565b806361718b831461053b57806367e4ac2c1461054e57806370a082311461056357806374f3b009146105765761038e565b80634f25e9e31161029d5780634f25e9e3146104fa57806350dd6ed91461050d57806355c67628146105205780636028bfd4146105285761038e565b806338e9922e146104cc57806338fff2d0146104df57806339509351146104e75761038e565b80631c0de0511161033057806323b872dd1161030a57806323b872dd1461047a5780632c9b76d01461048d578063313ce567146104af5780633644e515146104c45761038e565b80631c0de051146104395780631dd746ea1461045057806322acb867146104655761038e565b8063095ea7b31161036c578063095ea7b3146103e757806312b495a8146103fa57806316c38b3c1461040f57806318160ddd146104245761038e565b8063028398a014610393578063054f7d9c146103bd57806306fdde03146103d2575b600080fd5b6103a66103a13660046138e5565b6107ae565b6040516103b4929190614542565b60405180910390f35b6103c5610808565b6040516103b49190614018565b6103da610811565b6040516103b491906142d5565b6103c56103f536600461384f565b6108c5565b6104026108dc565b6040516103b491906141b8565b61042261041d3660046138ad565b6108e5565b005b61042c6108f9565b6040516103b4919061403b565b6104416108ff565b6040516103b493929190614023565b610458610928565b6040516103b49190613fd7565b61046d610937565b6040516103b49190613f43565b6103c561048836600461371f565b6109b4565b6104a061049b366004613975565b610a46565b6040516103b49392919061455b565b6104b7610aad565b6040516103b491906145b3565b61042c610ab6565b6104226104da366004613cf5565b610ac0565b61042c610ad9565b6103c56104f536600461384f565b610afd565b61042c610508366004613bfe565b610b38565b61042261051b366004613b37565b610bab565b61042c610bc9565b6103a6610536366004613a38565b610bda565b6104226105493660046137cf565b610c11565b610556610ca5565b6040516103b49190613f8a565b61042c6105713660046136cb565b610d2c565b610589610584366004613a38565b610d4b565b6040516103b4929190613fea565b61042c610dee565b61042c6105ad3660046136cb565b610df4565b6105c56105c0366004613cf5565b610e0f565b6040516103b49190613f13565b61042c6105e0366004613adb565b610e36565b6103a66105f3366004613a38565b610e88565b6105c5610eae565b6105c5610ed2565b6103da610ef6565b6103c5610f75565b61042c610626366004613bfe565b610f84565b6104026110e2565b6103c561064136600461384f565b6110ff565b61040261113d565b61042c61115a565b6105c5610664366004613cf5565b611160565b6103c561067736600461384f565b61116d565b6105c561117a565b6105c56106923660046136cb565b611184565b61042c6106a5366004613bfe565b61119f565b6104026106b8366004613cf5565b611203565b6106d06106cb3660046136cb565b611237565b6040516103b49190614534565b6105c56106eb366004613cf5565b611291565b6103c561129e565b61070b610706366004613cf5565b6112ac565b6040516103b4929190613f27565b61042261072736600461375f565b6112ef565b61058961073a366004613a38565b611438565b61042261074d366004613da0565b611569565b610402610760366004613cf5565b6118cd565b610402611906565b61040261190f565b61042c6107833660046136e7565b611918565b6104a0610796366004613975565b611973565b6106d06107a9366004613cf5565b6119c4565b600060606107bf8787878787611b00565b60405191935091507f1ae0bf238a5a9f2ff7744d18da2c78789b0891a0530c54a9989d067d748420fa906107f69084908490614542565b60405180910390a19550959350505050565b60155460ff1681565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b5050505050905090565b60006108d2338484611c87565b5060015b92915050565b600c54600f0b81565b6108ed611cef565b6108f681611d35565b50565b60025490565b600080600061090c611dd1565b159250610917611dee565b9150610921611e12565b9050909192565b6060610932611e36565b905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156108bb57602002820191906000526020600020906000905b82829054906101000a9004600f0b600f0b81526020019060100190602082600f010492830192600103820291508084116109745790505050505050905090565b6000806109c18533611918565b90506109e5336001600160a01b03871614806109dd5750838210155b61019e611ed2565b6109f0858585611ee0565b336001600160a01b03861614801590610a2957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b15610a3b57610a3b8533858403611c87565b506001949350505050565b6000606080610a5b8b8b8b8b8b8b8b8b611fbd565b60405192955090935091507f635379a32463784b6dab021faf6ead6bd7abd5e59d383a610e26bcb5c5440a8290610a979085908590859061455b565b60405180910390a1985098509895505050505050565b60055460ff1690565b60006109326120f2565b610ac8611cef565b610ad061218f565b6108f6816121a4565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916108d2918590610b33908661220f565b611c87565b6000610b45848484612234565b90507fe19fdaf8b58c09ea3bdd91592bf625f1a9d965a23caa896882acde160565701484608001518560200151866040015187606001518860c001518960e001518989604051610b9c989796959493929190614063565b60405180910390a19392505050565b610bb3611cef565b610bbb61218f565b610bc5828261223d565b5050565b6008546000906109329060c0612355565b60006060610bf08651610beb612363565b612368565b610c0589898989898989611fbd6123756123db565b97509795505050505050565b6001600160a01b0391821660009081526010602090815260409091208251815493909201517fffffffffffffffffffffffff000000000000000000000000000000000000000090931691909316177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000060ff90921691909102179055565b6060600f805480602002602001604051908101604052809291908181526020016000905b82821015610d2357600084815260209081902060408051808201909152908401546001600160a01b038116825274010000000000000000000000000000000000000000900460ff1681830152825260019092019101610cc9565b50505050905090565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610d75610d5a610ed2565b6001600160a01b0316336001600160a01b03161460cd611ed2565b610d8a610d80610ad9565b82146101f4611ed2565b6060610d94611e36565b9050610da0888261256b565b6000606080610db58e8e8e8e8e8e8a8f611fbd565b925092509250610dc58d846125cc565b610dcf8285612375565b610dd98185612375565b909550935050505b5097509795505050505050565b600e5490565b6001600160a01b031660009081526006602052604090205490565b60148181548110610e1c57fe5b6000918252602090912001546001600160a01b0316905081565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610e6b929190613e9d565b604051602081830303815290604052805190602001209050919050565b60006060610e998651610beb612363565b610c05898989898989896125d66127446123db565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108bb5780601f10610890576101008083540402835291602001916108bb565b60155462010000900460ff1681565b60008360800151610f96610d5a610ed2565b610fa1610d80610ad9565b6000610fb086602001516127a5565b90506000610fc187604001516127a5565b9050600087516001811115610fd257fe5b1415611062576000610fe788606001516127b0565b9050600081896060015103905061100b896020015161100683876127d1565b6127dd565b6060890182905261101c88856127d1565b975061102887846127d1565b96506110388960600151856127d1565b60608a0152600061104a8a8a8a6127ef565b9050611056818561292c565b965050505050506110da565b61106c86836127d1565b955061107885826127d1565b94506110888760600151826127d1565b6060880152600061109a888888612234565b90506110a68184612938565b905060006110b382612944565b9050600082820390506110ce8a6020015161100683886127d1565b5094506110da92505050565b509392505050565b600b547001000000000000000000000000000000009004600f0b81565b60008061110c3385611918565b90508083106111265761112133856000611c87565b611133565b6111333385858403611c87565b5060019392505050565b600c547001000000000000000000000000000000009004600f0b81565b600f5490565b60138181548110610e1c57fe5b60006108d2338484611ee0565b600061093261296a565b6011602052600090815260409020546001600160a01b031681565b60006111ac8484846127ef565b90507f29cf9219f01c64a61650bfb8b7559484f3208bd5eb817dcaaebdb819955ea02d84608001518560200151866040015187606001518860c001518960e001518989604051610b9c989796959493929190614063565b600e818154811061121057fe5b9060005260206000209060029182820401919006601002915054906101000a9004600f0b81565b61123f613567565b506001600160a01b0390811660009081526010602090815260409182902082518084019093525492831682527401000000000000000000000000000000000000000090920460ff169181019190915290565b60128181548110610e1c57fe5b601554610100900460ff1681565b600f81815481106112b957fe5b6000918252602090912001546001600160a01b038116915074010000000000000000000000000000000000000000900460ff1682565b6112fd8442111560d1611ed2565b6001600160a01b0387166000908152600660209081526040808320549051909291611354917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d91016140aa565b6040516020818303038152906040528051906020012090506000611377826129e4565b905060006001828888886040516000815260200160405260405161139e949392919061413a565b6020604051602081039080840390855afa1580156113c0573d6000803e3d6000fd5b5050604051601f190151915061140290506001600160a01b038216158015906113fa57508b6001600160a01b0316826001600160a01b0316145b6101f8611ed2565b6001600160a01b038b16600090815260066020526040902060018501905561142b8b8b8b611c87565b5050505050505050505050565b60608088611447610d5a610ed2565b611452610d80610ad9565b606061145c611e36565b90506114666108f9565b611519576000606061147b8d8d8d868b611b00565b9150915061149461148a612a00565b83101560cc611ed2565b6114a660006114a1612a00565b612a07565b6114b98b6114b2612a00565b8403612a07565b6114c38184612744565b806114cc612363565b67ffffffffffffffff811180156114e257600080fd5b5060405190808252806020026020018201604052801561150c578160200160208202803683370190505b5095509550505050610de1565b611523888261256b565b60006060806115388e8e8e8e8e8e8a8f6125d6565b9250925092506115488c84612a07565b6115528285612744565b61155c8185612375565b9095509350610de1915050565b8460001080156115805750670de0b6b3a764000085105b6115a55760405162461bcd60e51b815260040161159c90614458565b60405180910390fd5b8484106115c45760405162461bcd60e51b815260040161159c906142e8565b6706f05b59d3b200008311156115ec5760405162461bcd60e51b815260040161159c90614421565b662386f26fc100008211156116135760405162461bcd60e51b815260040161159c9061448f565b670de0b6b3a764000081111561163b5760405162461bcd60e51b815260040161159c906144fd565b30600061164782612a11565b905061165e60018801670de0b6b3a7640000611a5b565b600b8054600f9290920b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff000000000000000000000000000000009092169190911790556116b960018701670de0b6b3a7640000611a5b565b600b80546fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000600f94850b92909216820217918290556000926117099280820b820b929004900b612c87565b905060126117426117278361171e6002612cdb565b600f0b90612cf9565b61173989670de0b6b3a7640000611a5b565b600f0b90612d50565b600c805492909101600f0b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff0000000000000000000000000000000090921691909117905561179e60018601670de0b6b3a7640000611a5b565b600c8054600f9290920b6fffffffffffffffffffffffffffffffff9081167001000000000000000000000000000000000292169190911790556117ec60018501670de0b6b3a7640000611a5b565b600d8054600f9290920b6fffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909216919091179055600061183d84612a11565b905080600f0b83600f0b12156118655760405162461bcd60e51b815260040161159c906144c6565b600c547fb399767364127d5a414f09f214fa5606358052b764894b1084ce5ef067c05a97908a908a906118a790600f90810b900b670de0b6b3a7640000612dc3565b89896040516118ba959493929190614590565b60405180910390a1505050505050505050565b6000600e82815481106118dc57fe5b90600052602060002090600291828204019190066010029054906101000a9004600f0b9050919050565b600d54600f0b81565b600b54600f0b81565b6000611922610ed2565b6001600160a01b0316826001600160a01b0316141561196257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108d6565b61196c8383612e45565b90506108d6565b60006060806119888b8b8b8b8b8b8b8b6125d6565b60405192955090935091507fb9333a4b37fad3b59ebdef0968184fd1a5c87ff6e7d18ca610f5490f46b05ba690610a979085908590859061455b565b6119cc613567565b600f82815481106119d957fe5b6000918252602091829020604080518082019091529101546001600160a01b038116825274010000000000000000000000000000000000000000900460ff169181019190915292915050565b80610bc581612e70565b67ffffffffffffffff811b1992909216911b1790565b6000611a55838311156001611ed2565b50900390565b600081611a6757600080fd5b6000611a738484612ee9565b90506f7fffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff82161115611aa457600080fd5b9392505050565b6000600f83810b9083900b017fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611af757506f7fffffffffffffffffffffffffffffff8113155b611aa457600080fd5b600060608083806020019051810190611b19919061387a565b9050611b23612363565b815114611b425760405162461bcd60e51b815260040161159c90614356565b60006060600960009054906101000a90046001600160a01b03166001600160a01b0316636e38abdf3085600081518110611b7857fe5b60200260200101516040518363ffffffff1660e01b8152600401611b9d92919061419f565b600060405180830381600087803b158015611bb757600080fd5b505af1158015611bcb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bf39190810190613d25565b6040805160028082526060820190925292975087945090925081602001602082028036833701905050935080600081518110611c2b57fe5b602002602001015184600081518110611c4057fe5b60200260200101818152505080600181518110611c5957fe5b602002602001015184600181518110611c6e57fe5b6020026020010181815250505050509550959350505050565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611ce290859061403b565b60405180910390a3505050565b6000611d1e6000357fffffffff0000000000000000000000000000000000000000000000000000000016610e36565b90506108f6611d2d823361305f565b610191611ed2565b8015611d5557611d50611d46611dee565b4210610193611ed2565b611d6a565b611d6a611d60611e12565b42106101a9611ed2565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611dc6908390614018565b60405180910390a150565b6000611ddb611e12565b42118061093257505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6040805160028082526060808301845292839291906020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110611e8857fe5b6020026020010181815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110611ec257fe5b6020908102919091010152905090565b81610bc557610bc581613148565b611ef76001600160a01b0384161515610198611ed2565b611f0e6001600160a01b0383161515610199611ed2565b611f198383836123d6565b6001600160a01b038316600090815260208190526040902054611f3c908261319b565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611f6b908261220f565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611ce290859061403b565b6000606080606084806020019051810190611fd8919061387a565b905088516002148015611fec575080516002145b6120085760405162461bcd60e51b815260040161159c906143ea565b6040805160028082526060820183526305f5e1009650909160208301908036833701905050915060008260008151811061203e57fe5b60200260200101818152505060008260018151811061205957fe5b602090810291909101015260408051600280825260608201909252908160200160208202803683370190505092508060008151811061209457fe5b6020026020010151836000815181106120a957fe5b602002602001018181525050806001815181106120c257fe5b6020026020010151836001815181106120d757fe5b60200260200101818152505050985098509895505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061215f6131bd565b306040516020016121749594939291906140de565b60405160208183030381529060405280519060200120905090565b6121a261219a611dd1565b610192611ed2565b565b6121b764e8d4a5100082101560cb611ed2565b6121cd67016345785d8a000082111560ca611ed2565b6008546121dc908260c0611a2f565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611dc690839061403b565b600082820183811015611aa45760405162461bcd60e51b815260040161159c9061431f565b50506060015190565b6000612247610ad9565b90506000612253610ed2565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b8152600401612280929190614123565b60806040518083038186803b15801561229857600080fd5b505afa1580156122ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d09190613d60565b6040517f18e736d40000000000000000000000000000000000000000000000000000000081529094506001600160a01b03851693506318e736d4925061231d91508590879060040161410a565b600060405180830381600087803b15801561233757600080fd5b505af115801561234b573d6000803e3d6000fd5b5050505050505050565b1c67ffffffffffffffff1690565b600290565b610bc58183146067611ed2565b60005b612380612363565b8110156123d6576123b783828151811061239657fe5b60200260200101518383815181106123aa57fe5b60200260200101516131c1565b8382815181106123c357fe5b6020908102919091010152600101612378565b505050565b3330146124ca576000306001600160a01b03166000366040516123ff929190613ecd565b6000604051808303816000865af19150503d806000811461243c576040519150601f19603f3d011682016040523d82523d6000602084013e612441565b606091505b50509050806000811461245057fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb0000000000000000000000000000000000000000000000000000000081146124ac573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606124d4611e36565b90506124e0878261256b565b600060606124f88c8c8c8c8c8c898d8d63ffffffff16565b509150915061250b81848663ffffffff16565b8051601f1982018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60005b612576612363565b8110156123d6576125ad83828151811061258c57fe5b60200260200101518383815181106125a057fe5b6020026020010151613212565b8382815181106125b957fe5b602090810291909101015260010161256e565b610bc58282613248565b60006060806060848060200190518101906125f1919061387a565b905088516002148015612605575080516002145b6126215760405162461bcd60e51b815260040161159c906143ea565b60006060600960009054906101000a90046001600160a01b03166001600160a01b0316636e38abdf308560008151811061265757fe5b60200260200101516040518363ffffffff1660e01b815260040161267c92919061419f565b600060405180830381600087803b15801561269657600080fd5b505af11580156126aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126d29190810190613d25565b6040805160028082526060820190925292945090925081602001602082028036833701905050935060028460008151811061270957fe5b60200260200101818152505060028460018151811061272457fe5b6020908102919091010152909d909c50919a509098505050505050505050565b60005b61274f612363565b8110156123d65761278683828151811061276557fe5b602002602001015183838151811061277957fe5b6020026020010151613301565b83828151811061279257fe5b6020908102919091010152600101612747565b60006108d68261334f565b6000806127c56127be610bc9565b849061340b565b9050611aa48382611a45565b6000611aa48383613212565b610bc56127e983613465565b8261346b565b60006127f9613567565b604051806040016040528061281b64e8d4a51000878161281557fe5b04612cdb565b600f0b815260200161283264e8d4a5100086612815565b600f0b9052600a54602087015160408089015160608a015191517f7c4eaaac0000000000000000000000000000000000000000000000000000000081529495506000946001600160a01b0390941693637c4eaaac9361289a9330938993909190600401614158565b60206040518083038186803b1580156128b257600080fd5b505afa1580156128c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ea9190613d0d565b90507fb498cafe3e3088f7b7b5cf6afd13373111c6ffee5ce1618f58a2adf2cc9c5a838160405161291b919061403b565b60405180910390a195945050505050565b6000611aa483836131c1565b6000611aa48383613301565b60006108d6612963612954610bc9565b670de0b6b3a764000090611a45565b8390613301565b6000612974610ed2565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156129ac57600080fd5b505afa1580156129c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109329190613b1b565b60006129ee6120f2565b82604051602001610e6b929190613edd565b620f424090565b610bc58282613475565b60408051600280825260608083018452600093849391929060208301908036833701905050905060005b8151811015612bb4576040517feac8f5b80000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063eac8f5b890612a8c90859060040161403b565b604080518083038186803b158015612aa357600080fd5b505afa158015612ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612adb9190613ba6565b516040517fac969a7300000000000000000000000000000000000000000000000000000000815290915060009073__$28039fd024dee0e5c388b469625a331089$__9063ac969a7390612b32908590600401613f13565b60206040518083038186803b158015612b4a57600080fd5b505af4158015612b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b829190613b85565b905080848481518110612b9157fe5b600f92830b90920b60209283029190910190910152939093019250600101612a3b565b50600b54600c546040517f0c147f2200000000000000000000000000000000000000000000000000000000815273__$374ff109b8599801873fe38f05adb3baa6$__92630c147f2292612c2f9287928792700100000000000000000000000000000000909104600f90810b9291900b90600e906004016141c6565b60206040518083038186803b158015612c4757600080fd5b505af4158015612c5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c7f9190613b85565b949350505050565b6000600f82810b9084900b037fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611af757506f7fffffffffffffffffffffffffffffff811315611aa457600080fd5b6000677fffffffffffffff821115612cf257600080fd5b5060401b90565b6000600f83810b9083900b0260401d7fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611af757506f7fffffffffffffffffffffffffffffff811315611aa457600080fd5b600081600f0b60001415612d6357600080fd5b600082600f0b604085600f0b901b81612d7857fe5b0590507fffffffffffffffffffffffffffffffff800000000000000000000000000000008112801590611af757506f7fffffffffffffffffffffffffffffff811315611aa457600080fd5b600081612dd2575060006108d6565b600083600f0b1215612de357600080fd5b600f83900b6fffffffffffffffffffffffffffffffff8316810260401c90608084901c0277ffffffffffffffffffffffffffffffffffffffffffffffff811115612e2c57600080fd5b60401b8119811115612e3d57600080fd5b019392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600281511015612e7f576108f6565b600081600081518110612e8e57fe5b602002602001015190506000600190505b82518110156123d6576000838281518110612eb657fe5b60200260200101519050612edf816001600160a01b0316846001600160a01b0316106065611ed2565b9150600101612e9f565b600081612ef557600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff8411612f2b5782604085901b81612f2357fe5b049050613042565b60c084811c6401000000008110612f44576020918201911c5b620100008110612f56576010918201911c5b6101008110612f67576008918201911c5b60108110612f77576004918201911c5b60048110612f87576002918201911c5b60028110612f96576001820191505b60bf820360018603901c6001018260ff0387901b81612fb157fe5b0492506fffffffffffffffffffffffffffffffff831115612fd157600080fd5b608085901c83026fffffffffffffffffffffffffffffffff8616840260c088901c604089901b82811015613006576001820391505b608084901b9290038281101561301d576001820391505b829003608084901c821461302d57fe5b88818161303657fe5b04870196505050505050505b6fffffffffffffffffffffffffffffffff811115611aa457600080fd5b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b61307e610eae565b6001600160a01b031614158015613099575061309983613503565b156130c1576130a6610eae565b6001600160a01b0316336001600160a01b03161490506108d6565b6130c961296a565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b81526004016130f893929190614044565b60206040518083038186803b15801561311057600080fd5b505afa158015613124573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196c91906138c9565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082821115611a555760405162461bcd60e51b815260040161159c906143b3565b4690565b60006131d08215156004611ed2565b826131dd575060006108d6565b670de0b6b3a764000083810290613200908583816131f757fe5b04146005611ed2565b82818161320957fe5b049150506108d6565b600082820261323684158061322f57508385838161322c57fe5b04145b6003611ed2565b670de0b6b3a764000090049392505050565b61325f6001600160a01b038316151561019b611ed2565b61326b826000836123d6565b6001600160a01b03821660009081526020819052604090205461328e908261319b565b6001600160a01b0383166000908152602081905260409020556002546132b4908261319b565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906132f590859061403b565b60405180910390a35050565b60006133108215156004611ed2565b8261331d575060006108d6565b670de0b6b3a764000083810290613337908583816131f757fe5b82600182038161334357fe5b046001019150506108d6565b60006001600160a01b0382163014156133715750670de0b6b3a7640000610d46565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156133ac57600080fd5b505afa1580156133c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e49190613dda565b60ff16905060006133f6601283611a45565b600a0a670de0b6b3a764000002949350505050565b600082820261342584158061322f57508385838161322c57fe5b806134345760009150506108d6565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201613343565b50600090565b610bc58282610bc5565b613481600083836123d6565b60025461348e908261220f565b6002556001600160a01b0382166000908152602081905260409020546134b4908261220f565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906132f590859061403b565b600061352e7f38e9922e00000000000000000000000000000000000000000000000000000000610e36565b8214806108d6575061355f7f50dd6ed900000000000000000000000000000000000000000000000000000000610e36565b909114919050565b604080518082019091526000808252602082015290565b8035610d468161460f565b600082601f830112613599578081fd5b81356135ac6135a7826145e5565b6145c1565b8181529150602080830190848101818402860182018710156135cd57600080fd5b60005b848110156135ec578135845292820192908201906001016135d0565b505050505092915050565b600082601f830112613607578081fd5b81516136156135a7826145e5565b81815291506020808301908481018184028601820187101561363657600080fd5b60005b848110156135ec57815184529282019290820190600101613639565b600082601f830112613665578081fd5b813567ffffffffffffffff81111561367957fe5b61368c6020601f19601f840116016145c1565b91508082528360208285010111156136a357600080fd5b8060208401602084013760009082016020015292915050565b803560028110610d4657600080fd5b6000602082840312156136dc578081fd5b8135611aa48161460f565b600080604083850312156136f9578081fd5b82356137048161460f565b915060208301356137148161460f565b809150509250929050565b600080600060608486031215613733578081fd5b833561373e8161460f565b9250602084013561374e8161460f565b929592945050506040919091013590565b600080600080600080600060e0888a031215613779578283fd5b87356137848161460f565b965060208801356137948161460f565b9550604088013594506060880135935060808801356137b281614632565b9699959850939692959460a0840135945060c09093013592915050565b60008082840360608112156137e2578283fd5b83356137ed8161460f565b92506040601f1982011215613800578182fd5b506040516040810181811067ffffffffffffffff8211171561381e57fe5b604052602084013561382f8161460f565b8152604084013561383f81614632565b6020820152919491935090915050565b60008060408385031215613861578182fd5b823561386c8161460f565b946020939093013593505050565b60006020828403121561388b578081fd5b815167ffffffffffffffff8111156138a1578182fd5b612c7f848285016135f7565b6000602082840312156138be578081fd5b8135611aa481614624565b6000602082840312156138da578081fd5b8151611aa481614624565b600080600080600060a086880312156138fc578283fd5b85359450602086013561390e8161460f565b9350604086013561391e8161460f565b9250606086013567ffffffffffffffff8082111561393a578283fd5b61394689838a01613589565b9350608088013591508082111561395b578283fd5b5061396888828901613655565b9150509295509295909350565b600080600080600080600080610100898b031215613991578182fd5b883597506139a160208a0161357e565b96506139af60408a0161357e565b9550606089013567ffffffffffffffff808211156139cb578384fd5b6139d78c838d01613589565b965060808b0135955060a08b0135945060c08b01359150808211156139fa578384fd5b613a068c838d01613589565b935060e08b0135915080821115613a1b578283fd5b50613a288b828c01613655565b9150509295985092959890939650565b600080600080600080600060e0888a031215613a52578081fd5b873596506020880135613a648161460f565b95506040880135613a748161460f565b9450606088013567ffffffffffffffff80821115613a90578283fd5b613a9c8b838c01613589565b955060808a0135945060a08a0135935060c08a0135915080821115613abf578283fd5b50613acc8a828b01613655565b91505092959891949750929550565b600060208284031215613aec578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611aa4578182fd5b600060208284031215613b2c578081fd5b8151611aa48161460f565b60008060408385031215613b49578182fd5b8235613b548161460f565b9150602083013567ffffffffffffffff811115613b6f578182fd5b613b7b85828601613655565b9150509250929050565b600060208284031215613b96578081fd5b815180600f0b8114611aa4578182fd5b600060408284031215613bb7578081fd5b6040516040810181811067ffffffffffffffff82111715613bd457fe5b6040528251613be28161460f565b81526020830151613bf281614632565b60208201529392505050565b600080600060608486031215613c12578081fd5b833567ffffffffffffffff80821115613c29578283fd5b8186019150610120808389031215613c3f578384fd5b613c48816145c1565b9050613c53836136bc565b8152613c616020840161357e565b6020820152613c726040840161357e565b6040820152606083013560608201526080830135608082015260a083013560a0820152613ca160c0840161357e565b60c0820152613cb260e0840161357e565b60e08201526101008084013583811115613cca578586fd5b613cd68a828701613655565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613d06578081fd5b5035919050565b600060208284031215613d1e578081fd5b5051919050565b60008060408385031215613d37578182fd5b82519150602083015167ffffffffffffffff811115613d54578182fd5b613b7b858286016135f7565b60008060008060808587031215613d75578182fd5b8451935060208501519250604085015191506060850151613d958161460f565b939692955090935050565b600080600080600060a08688031215613db7578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b600060208284031215613deb578081fd5b8151611aa481614632565b6000815180845260208085019450808401835b83811015613e2557815187529582019590820190600101613e09565b509495945050505050565b60008151808452815b81811015613e5557602081850181015186830182015201613e39565b81811115613e665782602083870101525b50601f01601f19169290920160200192915050565b600f0b9052565b80516001600160a01b0316825260209081015160ff16910152565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613f7e578351600f0b83529284019291840191600101613f5f565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613fca57613fba848351613e82565b9284019290850190600101613fa7565b5091979650505050505050565b600060208252611aa46020830184613df6565b600060408252613ffd6040830185613df6565b828103602084015261400f8185613df6565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9788526001600160a01b03968716602089015294861660408801526060870193909352908416608086015290921660a084015260c083019190915260e08201526101000190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b600083825260406020830152612c7f6040830184613e30565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0395861681528451600f90810b6020808401919091529095015190940b60408501529184166060840152909216608082015260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b600f9190910b815260200190565b600060a08201600f88810b8452602060a08186015282895180855260c087019150828b019450855b8181101561420c578551850b835294830194918301916001016141ee565b50506040935088830b8487015287830b6060870152608086820381880152818854614237818561403b565b91506142428a614603565b9350875b600182818301106142575750614287565b855461426585828b0b613e7b565b61427588860182881c8b0b613e7b565b50949094019391870191600201614246565b84549750818110156142a75761429f8389890b613e7b565b918501916001015b818110156142c2576142bd8389861c890b613e7b565b918501915b50909d9c50505050505050505050505050565b600060208252611aa46020830184613e30565b6020808252601c908201527f43757276652f706172616d657465722d696e76616c69642d6265746100000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f496e76616c6964206c656e677468206f66206d6178416d6f756e7473496e207060408201527f61796c6f61642e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f43757276652f706172616d657465722d696e76616c69642d6d61780000000000604082015260600190565b6020808252601d908201527f43757276652f706172616d657465722d696e76616c69642d616c706861000000604082015260600190565b6020808252601f908201527f43757276652f706172616d657465722d696e76616c69642d657073696c6f6e00604082015260600190565b6020808252601d908201527f43757276652f706172616d65746572732d696e6372656173652d666565000000604082015260600190565b6020808252601e908201527f43757276652f706172616d657465722d696e76616c69642d6c616d6264610000604082015260600190565b604081016108d68284613e82565b600083825260406020830152612c7f6040830184613df6565b6000848252606060208301526145746060830185613df6565b82810360408401526145868185613df6565b9695505050505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff811182821017156145dd57fe5b604052919050565b600067ffffffffffffffff8211156145f957fe5b5060209081020190565b60009081526020902090565b6001600160a01b03811681146108f657600080fd5b80151581146108f657600080fd5b60ff811681146108f657600080fdfea2646970667358221220e308d2ee6bae0a955635716e7a6045211fb6ac72ea24dd438a3de27eaa7a2fad64736f6c634300070300334b18271a7872ab0f9e58e9ca39180e3c710490f802d663f20ae751a8e6b29bc1";

type TestFXPoolConstructorParams =
  | [linkLibraryAddresses: TestFXPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFXPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestFXPool__factory extends ContractFactory {
  constructor(...args: TestFXPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestFXPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestFXPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28039fd024dee0e5c388b469625a331089\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/Assimilators.sol:Assimilators"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$374ff109b8599801873fe38f05adb3baa6\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/CurveMath.sol:CurveMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestFXPool> {
    return super.deploy(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    ) as Promise<TestFXPool>;
  }
  getDeployTransaction(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    );
  }
  attach(address: string): TestFXPool {
    return super.attach(address) as TestFXPool;
  }
  connect(signer: Signer): TestFXPool__factory {
    return super.connect(signer) as TestFXPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFXPoolInterface {
    return new utils.Interface(_abi) as TestFXPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestFXPool {
    return new Contract(address, _abi, signerOrProvider) as TestFXPool;
  }
}

export interface TestFXPoolLibraryAddresses {
  ["contracts/amm-v1/Assimilators.sol:Assimilators"]: string;
  ["contracts/amm-v1/CurveMath.sol:CurveMath"]: string;
}
