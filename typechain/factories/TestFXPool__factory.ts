/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestFXPool, TestFXPoolInterface } from "../TestFXPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_assetWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "contract ProportionalLiquidity",
        name: "proportionalLiquidity",
        type: "address",
      },
      {
        internalType: "contract AmmV1Swaps",
        name: "swaps",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "AssetIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "derivative",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "numeraire",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reserve",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assimilator",
        type: "address",
      },
    ],
    name: "AssimilatorIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "alpha",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epsilon",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lambda",
        type: "uint256",
      },
    ],
    name: "ParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestExitPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    name: "TestInitializePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    name: "TestJoinPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "TestSwapGivenOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    name: "TestingSwapGivenIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "ix",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epsilon",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "frozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAsset",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssetsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assim",
        type: "address",
      },
    ],
    name: "getAssimilator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeightsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lambda",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numeraires",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onInitalizePool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwapGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "calculatedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserves",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assimAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "ix",
            type: "uint8",
          },
        ],
        internalType: "struct FXPool.Assimilator",
        name: "assimilator",
        type: "tuple",
      },
    ],
    name: "setAssimilator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_alpha",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_beta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAtHalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epsilon",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lambda",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistingStage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6102006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120526017805463ff0000001962ffffff1990911662010000171663010000001790553480156200005757600080fd5b506040516200560e3803806200560e8339810160408190526200007a916200104c565b8a8a8a8a8a8a8a8a8a8a8a8a60018b8b8b8c516001600160401b0381118015620000a357600080fd5b50604051908082528060200260200182016040528015620000ce578160200160208202803683370190505b508a8a8a33828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200014392919062000d67565b5080516200015990600490602084019062000d67565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b0319166101405250620001cc90506276a700831115610194620003dc565b620001e062278d00821115610195620003dc565b429091016101608190520161018052855162000202906002111560c8620003dc565b6200021c62000210620003f1565b8751111560c9620003dc565b6200023286620003f660201b620018221760201c565b6200023d8462000402565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f906200026e908d9060040162001288565b602060405180830381600087803b1580156200028957600080fd5b505af11580156200029e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c4919062001033565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d290620002f99084908b908b90600401620011ee565b600060405180830381600087803b1580156200031457600080fd5b505af115801562000329573d6000803e3d6000fd5b50505050806101a08181525050505050505050505050505062000367886000815181106200035357fe5b60200260200101516200048e60201b60201c565b6101c05287516200038090899060019081106200035357fe5b6101e052600980546001600160a01b038085166001600160a01b031992831617909255600a805492841692909116919091179055620003c0878762000562565b505050505050505050505050505050505050505050506200153f565b81620003ed57620003ed81620007f6565b5050565b600290565b80620003ed8162000849565b6200041764e8d4a5100082101560cb620003dc565b6200042f67016345785d8a000082111560ca620003dc565b6200044e8160c0600854620008d360201b6200182c179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9062000483908390620014de565b60405180910390a150565b60006001600160a01b038216301415620004b25750670de0b6b3a76400006200055d565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620004ee57600080fd5b505afa15801562000503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052991906200119e565b60ff169050600062000548601283620008e860201b620018421760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b80516002146200058f5760405162461bcd60e51b81526004016200058690620012e3565b60405180910390fd5b60058251816200059b57fe5b0615620005bc5760405162461bcd60e51b8152600401620005869062001328565b60005b8151811015620007f15760008160050290506015848281518110620005e057fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583516014908590839081106200062d57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905583516016908590600284019081106200067d57fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790558351849060028301908110620006ca57fe5b60200260200101516001600160a01b0316848281518110620006e857fe5b60200260200101516001600160a01b0316146200074d5760148482600201815181106200071157fe5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b620007e78482815181106200075e57fe5b60200260200101518583600101815181106200077657fe5b60200260200101518684600201815181106200078e57fe5b6020026020010151878560030181518110620007a657fe5b6020026020010151888660040181518110620007be57fe5b6020026020010151888881518110620007d357fe5b60200260200101516200090060201b60201c565b50600101620005bf565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200085a57620008d0565b6000816000815181106200086a57fe5b602002602001015190506000600190505b8251811015620007f15760008382815181106200089457fe5b60200260200101519050620008c5816001600160a01b0316846001600160a01b0316106065620003dc60201b60201c565b91506001016200087b565b50565b6001600160401b03811b1992909216911b1790565b6000620008fa838311156001620003dc565b50900390565b6001600160a01b038616620009295760405162461bcd60e51b81526004016200058690620013c0565b6001600160a01b038516620009525760405162461bcd60e51b8152600401620005869062001481565b6001600160a01b0384166200097b5760405162461bcd60e51b815260040162000586906200129d565b6001600160a01b038316620009a45760405162461bcd60e51b815260040162000586906200136e565b670de0b6b3a76400008110620009ce5760405162461bcd60e51b815260040162000586906200143f565b836001600160a01b0316866001600160a01b03161462000a725760405163095ea7b360e01b81526001600160a01b0387169063095ea7b39062000a1a90859060001990600401620011d5565b602060405180830381600087803b15801562000a3557600080fd5b505af115801562000a4a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a7091906200100a565b505b62000a7c62000dec565b506040805180820182526001600160a01b03808816825260115460ff90811660208085019182528b84166000908152601290915294909420835181549551909216600160a01b0260ff60a01b19929093166001600160a01b031990951694909417161790915562000aec62000dec565b506040805180820182526001600160a01b03868116825260115460ff90811660208085019182528a84166000908152601282529586208551815493516001600160a01b031990941695169490941760ff60a01b1916600160a01b92909316919091029190911790915590919062000b7990600190670de0b6b3a76400009062000d31811b6200185817901c565b62000b9b670de0b6b3a76400008662000d3160201b620018581790919060201c565b601080546001808201909255919092017f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290910181905560118054928301815560005284517f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68909201805460208701516001600160a01b03199091166001600160a01b039485161760ff60a01b1916600160a01b60ff90921691909102179055604051909250888216918b16907f69745294f8c4916d2a4ca68ea4e3be1d5990927ba68481e69368deb3c4395d029062000c77908890620014de565b60405180910390a3866001600160a01b0316896001600160a01b03168a6001600160a01b0316600080516020620055ee8339815191528b60405162000cbd9190620011c1565b60405180910390a4856001600160a01b0316886001600160a01b03161462000d2657866001600160a01b0316896001600160a01b0316886001600160a01b0316600080516020620055ee8339815191528960405162000d1d9190620011c1565b60405180910390a45b505050505050505050565b600080821162000d555760405162461bcd60e51b8152600401620005869062001408565b81838162000d5f57fe5b049392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000daa57805160ff191683800117855562000dda565b8280016001018555821562000dda579182015b8281111562000dda57825182559160200191906001019062000dbd565b5062000de892915062000e03565b5090565b604080518082019091526000808252602082015290565b5b8082111562000de8576000815560010162000e04565b600082601f83011262000e2b578081fd5b815162000e4262000e3c826200150b565b620014e7565b81815291506020808301908481018184028601820187101562000e6457600080fd5b60005b8481101562000e9057815162000e7d8162001529565b8452928201929082019060010162000e67565b505050505092915050565b600082601f83011262000eac578081fd5b815162000ebd62000e3c826200150b565b81815291506020808301908481018184028601820187101562000edf57600080fd5b60005b8481101562000e9057815162000ef88162001529565b8452928201929082019060010162000ee2565b600082601f83011262000f1c578081fd5b815162000f2d62000e3c826200150b565b81815291506020808301908481018184028601820187101562000f4f57600080fd5b60005b8481101562000e905781518452928201929082019060010162000f52565b80516200055d8162001529565b600082601f83011262000f8e578081fd5b81516001600160401b0381111562000fa257fe5b602062000fb8601f8301601f19168201620014e7565b9250818352848183860101111562000fcf57600080fd5b60005b8281101562000fef57848101820151848201830152810162000fd2565b82811115620010015760008284860101525b50505092915050565b6000602082840312156200101c578081fd5b815180151581146200102c578182fd5b9392505050565b60006020828403121562001045578081fd5b5051919050565b60008060008060008060008060008060006101608c8e0312156200106e578687fd5b620010798c62000f70565b60208d0151909b506001600160401b0381111562001095578788fd5b620010a38e828f0162000f7d565b60408e0151909b5090506001600160401b03811115620010c1578788fd5b620010cf8e828f0162000f7d565b60608e0151909a5090506001600160401b03811115620010ed578788fd5b620010fb8e828f0162000e9b565b60808e015190995090506001600160401b0381111562001119578788fd5b620011278e828f0162000e1a565b60a08e015190985090506001600160401b0381111562001145578687fd5b620011538e828f0162000f0b565b96505060c08c0151945060e08c015193506101008c015192506200117b6101208d0162000f70565b91506200118c6101408d0162000f70565b90509295989b509295989b9093969950565b600060208284031215620011b0578081fd5b815160ff811681146200102c578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620012395784516001600160a01b03168352938301939183019160010162001212565b505084810360408601528551808252908201925081860190845b818110156200127a5782516001600160a01b03168552938301939183019160010162001253565b509298975050505050505050565b60208101600383106200129757fe5b91905290565b60208082526026908201527f43757276652f726573657276652d63616e6e6f742d62652d7a65726f74682d6160408201526564647265737360d01b606082015260800190565b60208082526025908201527f43757276652f6173736574576569676874732d6d7573742d62652d6c656e6774604082015264682d74776f60d81b606082015260800190565b60208082526026908201527f43757276652f6173736574732d6d7573742d62652d646976697369626c652d62604082015265792d6669766560d01b606082015260800190565b60208082526032908201527f43757276652f726573657276652d617373696d696c61746f722d63616e6e6f746040820152712d62652d7a65726f74682d6164647265737360701b606082015260800190565b60208082526028908201527f43757276652f6e756d6572616972652d63616e6e6f742d62652d7a65726f74686040820152672d6164647265737360c01b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526022908201527f43757276652f7765696768742d6d7573742d62652d6c6573732d7468616e2d6f6040820152616e6560f01b606082015260800190565b60208082526034908201527f43757276652f6e756d6572616972652d617373696d696c61746f722d63616e6e60408201527f6f742d62652d7a65726f74682d61646472657373000000000000000000000000606082015260800190565b90815260200190565b6040518181016001600160401b03811182821017156200150357fe5b604052919050565b60006001600160401b038211156200151f57fe5b5060209081020190565b6001600160a01b0381168114620008d057600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516101e051614023620015cb60003980611b6c525080611b32525080610a98525080611aea525080611ac6525080610e9152508061129d525080611dcc525080611e0e525080611ded525080610e6d525080610df752506140236000f3fe608060405234801561001057600080fd5b506004361061038e5760003560e01c806387ec6817116101de578063b5648c251161010f578063d5c096c4116100ad578063db1d0fd51161007c578063db1d0fd514610753578063dd62ed3e1461075b578063e17f9ee01461076e578063eac8f5b8146107815761038e565b8063d5c096c414610712578063d828bb8814610725578063d851fdfd14610738578063dad0be611461074b5761038e565b8063c0046e39116100e9578063c0046e39146106c3578063caa6fea4146106d6578063cf35bdd0146106de578063d505accf146106ff5761038e565b8063b5648c251461067d578063b5f163ff14610690578063bb6d485a146106a35761038e565b8063a457c2d71161017c578063a8e9d52811610156578063a8e9d5281461063c578063a9059cbb1461064f578063aaabadc514610662578063addd50991461066a5761038e565b8063a457c2d714610619578063a7ba9fb11461062c578063a89d490c146106345761038e565b806395d89b41116101b857806395d89b41146105ee5780639d1dd428146105f65780639d2c110c146105fe5780639faa3c91146106115761038e565b806387ec6817146105cb578063893d20e8146105de5780638d928af8146105e65761038e565b806338e9922e116102c357806361718b831161026157806379f93a671161023057806379f93a671461057d5780637ecebe00146105855780638334278d14610598578063851c1bb3146105b85761038e565b806361718b831461052157806367e4ac2c1461053457806370a082311461054957806374f3b0091461055c5761038e565b80634f25e9e31161029d5780634f25e9e3146104e057806350dd6ed9146104f357806355c67628146105065780636028bfd41461050e5761038e565b806338e9922e146104b257806338fff2d0146104c557806339509351146104cd5761038e565b80631c0de0511161033057806323b872dd1161030a57806323b872dd146104605780632c9b76d014610473578063313ce567146104955780633644e515146104aa5761038e565b80631c0de0511461042c5780631dd746ea1461044357806322acb867146104585761038e565b8063095ea7b31161036c578063095ea7b3146103e757806312b495a8146103fa57806316c38b3c1461040f57806318160ddd146104245761038e565b8063028398a014610393578063054f7d9c146103bd57806306fdde03146103d2575b600080fd5b6103a66103a1366004613307565b610794565b6040516103b4929190613e64565b60405180910390f35b6103c56107ee565b6040516103b491906139cb565b6103da6107f7565b6040516103b49190613b63565b6103c56103f5366004613271565b6108ab565b6104026108c2565b6040516103b491906139ee565b61042261041d3660046132cf565b6108c8565b005b6104026108dc565b6104346108e2565b6040516103b4939291906139d6565b61044b61090b565b6040516103b4919061398a565b61044b61091a565b6103c561046e366004613141565b610971565b610486610481366004613397565b610a03565b6040516103b493929190613e7d565b61049d610a6a565b6040516103b49190613f6b565b610402610a73565b6104226104c03660046136f6565b610a7d565b610402610a96565b6103c56104db366004613271565b610aba565b6104026104ee3660046135ff565b610af5565b610422610501366004613559565b610b68565b610402610b86565b6103a661051c36600461345a565b610b97565b61042261052f3660046131f1565b610bce565b61053c610c62565b6040516103b4919061393d565b6104026105573660046130ed565b610ce9565b61056f61056a36600461345a565b610d08565b6040516103b492919061399d565b610402610dab565b6104026105933660046130ed565b610db1565b6105ab6105a63660046136f6565b610dcc565b6040516103b4919061390d565b6104026105c63660046134fd565b610df3565b6103a66105d936600461345a565b610e45565b6105ab610e6b565b6105ab610e8f565b6103da610eb3565b6103c5610f32565b61040261060c3660046135ff565b610f41565b61040261109f565b6103c5610627366004613271565b6110a5565b6104026110e3565b6104026110e9565b6105ab61064a3660046136f6565b6110ef565b6103c561065d366004613271565b6110fc565b6105ab611109565b6105ab6106783660046130ed565b611113565b61040261068b3660046135ff565b61112e565b61040261069e3660046136f6565b611192565b6106b66106b13660046130ed565b6111b0565b6040516103b49190613e56565b6105ab6106d13660046136f6565b61120a565b6103c5611217565b6106f16106ec3660046136f6565b611225565b6040516103b4929190613921565b61042261070d366004613181565b611268565b61056f61072036600461345a565b6113b1565b6104226107333660046137a1565b6114e2565b6104026107463660046136f6565b6116e8565b610402611709565b61040261170f565b610402610769366004613109565b611715565b61048661077c366004613397565b611770565b6106b661078f3660046136f6565b6117c1565b600060606107a5878787878761188a565b60405191935091507f1ae0bf238a5a9f2ff7744d18da2c78789b0891a0530c54a9989d067d748420fa906107dc9084908490613e64565b60405180910390a19550959350505050565b60175460ff1681565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108a15780601f10610876576101008083540402835291602001916108a1565b820191906000526020600020905b81548152906001019060200180831161088457829003601f168201915b5050505050905090565b60006108b833848461195d565b5060015b92915050565b600d5481565b6108d06119c5565b6108d981611a0b565b50565b60025490565b60008060006108ef611aa7565b1592506108fa611ac4565b9150610904611ae8565b9050909192565b6060610915611b0c565b905090565b606060108054806020026020016040519081016040528092919081815260200182805480156108a157602002820191906000526020600020905b815481526020019060010190808311610954575050505050905090565b60008061097e8533611715565b90506109a2336001600160a01b038716148061099a5750838210155b61019e611ba8565b6109ad858585611bb6565b336001600160a01b038616148015906109e657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b156109f8576109f8853385840361195d565b506001949350505050565b6000606080610a188b8b8b8b8b8b8b8b611c93565b60405192955090935091507f635379a32463784b6dab021faf6ead6bd7abd5e59d383a610e26bcb5c5440a8290610a5490859085908590613e7d565b60405180910390a1985098509895505050505050565b60055460ff1690565b6000610915611dc8565b610a856119c5565b610a8d611e65565b6108d981611e7a565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916108b8918590610af09086611ee5565b61195d565b6000610b02848484611f11565b90507fe19fdaf8b58c09ea3bdd91592bf625f1a9d965a23caa896882acde160565701484608001518560200151866040015187606001518860c001518960e001518989604051610b59989796959493929190613a16565b60405180910390a19392505050565b610b706119c5565b610b78611e65565b610b828282611f1a565b5050565b6008546000906109159060c0612032565b60006060610bad8651610ba8612040565b612045565b610bc289898989898989611c936120526120b8565b97509795505050505050565b6001600160a01b0391821660009081526012602090815260409091208251815493909201517fffffffffffffffffffffffff000000000000000000000000000000000000000090931691909316177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000060ff90921691909102179055565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610ce057600084815260209081902060408051808201909152908401546001600160a01b038116825274010000000000000000000000000000000000000000900460ff1681830152825260019092019101610c86565b50505050905090565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610d32610d17610e8f565b6001600160a01b0316336001600160a01b03161460cd611ba8565b610d47610d3d610a96565b82146101f4611ba8565b6060610d51611b0c565b9050610d5d8882612248565b6000606080610d728e8e8e8e8e8e8a8f611c93565b925092509250610d828d846122a9565b610d8c8285612052565b610d968185612052565b909550935050505b5097509795505050505050565b60105490565b6001600160a01b031660009081526006602052604090205490565b60168181548110610dd957fe5b6000918252602090912001546001600160a01b0316905081565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610e28929190613897565b604051602081830303815290604052805190602001209050919050565b60006060610e568651610ba8612040565b610bc2898989898989896122b361249d6120b8565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108a15780601f10610876576101008083540402835291602001916108a1565b60175462010000900460ff1681565b60008360800151610f53610d17610e8f565b610f5e610d3d610a96565b6000610f6d86602001516124fe565b90506000610f7e87604001516124fe565b9050600087516001811115610f8f57fe5b141561101f576000610fa48860600151612509565b90506000818960600151039050610fc88960200151610fc3838761252a565b612536565b60608901829052610fd9888561252a565b9750610fe5878461252a565b9650610ff589606001518561252a565b60608a015260006110078a8a8a612548565b90506110138185612655565b96505050505050611097565b611029868361252a565b9550611035858261252a565b945061104587606001518261252a565b60608801526000611057888888611f11565b90506110638184612661565b905060006110708261266d565b90506000828203905061108b8a60200151610fc3838861252a565b50945061109792505050565b509392505050565b600c5481565b6000806110b23385611715565b90508083106110cc576110c73385600061195d565b6110d9565b6110d9338585840361195d565b5060019392505050565b600e5481565b60115490565b60158181548110610dd957fe5b60006108b8338484611bb6565b6000610915612693565b6013602052600090815260409020546001600160a01b031681565b600061113b848484612548565b90507f29cf9219f01c64a61650bfb8b7559484f3208bd5eb817dcaaebdb819955ea02d84608001518560200151866040015187606001518860c001518960e001518989604051610b59989796959493929190613a16565b6010818154811061119f57fe5b600091825260209091200154905081565b6111b8612f6f565b506001600160a01b0390811660009081526012602090815260409182902082518084019093525492831682527401000000000000000000000000000000000000000090920460ff169181019190915290565b60148181548110610dd957fe5b601754610100900460ff1681565b6011818154811061123257fe5b6000918252602090912001546001600160a01b038116915074010000000000000000000000000000000000000000900460ff1682565b6112768442111560d1611ba8565b6001600160a01b03871660009081526006602090815260408083205490519092916112cd917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613a5d565b60405160208183030381529060405280519060200120905060006112f08261270d565b90506000600182888888604051600081526020016040526040516113179493929190613aed565b6020604051602081039080840390855afa158015611339573d6000803e3d6000fd5b5050604051601f190151915061137b90506001600160a01b0382161580159061137357508b6001600160a01b0316826001600160a01b0316145b6101f8611ba8565b6001600160a01b038b1660009081526006602052604090206001850190556113a48b8b8b61195d565b5050505050505050505050565b606080886113c0610d17610e8f565b6113cb610d3d610a96565b60606113d5611b0c565b90506113df6108dc565b61149257600060606113f48d8d8d868b61188a565b9150915061140d611403612729565b83101560cc611ba8565b61141f600061141a612729565b612730565b6114328b61142b612729565b8403612730565b61143c818461249d565b80611445612040565b67ffffffffffffffff8111801561145b57600080fd5b50604051908082528060200260200182016040528015611485578160200160208202803683370190505b5095509550505050610d9e565b61149c8882612248565b60006060806114b18e8e8e8e8e8e8a8f6122b3565b9250925092506114c18c84612730565b6114cb828561249d565b6114d58185612052565b9095509350610d9e915050565b8460001080156114f95750670de0b6b3a764000085105b61151e5760405162461bcd60e51b815260040161151590613d1d565b60405180910390fd5b84841061153d5760405162461bcd60e51b815260040161151590613b76565b6706f05b59d3b200008311156115655760405162461bcd60e51b815260040161151590613ce6565b662386f26fc1000082111561158c5760405162461bcd60e51b815260040161151590613db1565b670de0b6b3a76400008111156115b45760405162461bcd60e51b815260040161151590613e1f565b3060006115c08261273a565b90506115d760018801670de0b6b3a7640000611858565b600b556115ef60018701670de0b6b3a7640000611858565b600c819055600b540361161e611606600283612989565b61161888670de0b6b3a7640000611858565b90611858565b6001908101600d5561163a908601670de0b6b3a7640000611858565b600e5561165260018501670de0b6b3a7640000611858565b600f5560006116608461273a565b9050808310156116825760405162461bcd60e51b815260040161151590613de8565b7fb399767364127d5a414f09f214fa5606358052b764894b1084ce5ef067c05a9789896116c2670de0b6b3a7640000600d5461298990919063ffffffff16565b89896040516116d5959493929190613f48565b60405180910390a1505050505050505050565b6000601082815481106116f757fe5b90600052602060002001549050919050565b600f5481565b600b5481565b600061171f610e8f565b6001600160a01b0316826001600160a01b0316141561175f57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6108bc565b61176983836129c3565b90506108bc565b60006060806117858b8b8b8b8b8b8b8b6122b3565b60405192955090935091507fb9333a4b37fad3b59ebdef0968184fd1a5c87ff6e7d18ca610f5490f46b05ba690610a5490859085908590613e7d565b6117c9612f6f565b601182815481106117d657fe5b6000918252602091829020604080518082019091529101546001600160a01b038116825274010000000000000000000000000000000000000000900460ff169181019190915292915050565b80610b82816129ee565b67ffffffffffffffff811b1992909216911b1790565b6000611852838311156001611ba8565b50900390565b60008082116118795760405162461bcd60e51b815260040161151590613caf565b81838161188257fe5b049392505050565b6000606080838060200190518101906118a3919061329c565b90506118ad612040565b8151146118cc5760405162461bcd60e51b815260040161151590613be4565b604080516002808252606082018352660aa87bee538000955090916020830190803683370190505091508060008151811061190357fe5b60200260200101518260008151811061191857fe5b6020026020010181815250508060018151811061193157fe5b60200260200101518260018151811061194657fe5b602002602001018181525050509550959350505050565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906119b89085906139ee565b60405180910390a3505050565b60006119f46000357fffffffff0000000000000000000000000000000000000000000000000000000016610df3565b90506108d9611a038233612a67565b610191611ba8565b8015611a2b57611a26611a1c611ac4565b4210610193611ba8565b611a40565b611a40611a36611ae8565b42106101a9611ba8565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611a9c9083906139cb565b60405180910390a150565b6000611ab1611ae8565b42118061091557505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6040805160028082526060808301845292839291906020830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110611b5e57fe5b6020026020010181815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110611b9857fe5b6020908102919091010152905090565b81610b8257610b8281612b50565b611bcd6001600160a01b0384161515610198611ba8565b611be46001600160a01b0383161515610199611ba8565b611bef8383836120b3565b6001600160a01b038316600090815260208190526040902054611c129082612ba3565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611c419082611ee5565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906119b89085906139ee565b6000606080606084806020019051810190611cae919061329c565b905088516002148015611cc2575080516002145b611cde5760405162461bcd60e51b815260040161151590613c78565b6040805160028082526060820183526305f5e10096509091602083019080368337019050509150600082600081518110611d1457fe5b602002602001018181525050600082600181518110611d2f57fe5b6020908102919091010152604080516002808252606082019092529081602001602082028036833701905050925080600081518110611d6a57fe5b602002602001015183600081518110611d7f57fe5b60200260200101818152505080600181518110611d9857fe5b602002602001015183600181518110611dad57fe5b60200260200101818152505050985098509895505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611e35612bc5565b30604051602001611e4a959493929190613a91565b60405160208183030381529060405280519060200120905090565b611e78611e70611aa7565b610192611ba8565b565b611e8d64e8d4a5100082101560cb611ba8565b611ea367016345785d8a000082111560ca611ba8565b600854611eb2908260c061182c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611a9c9083906139ee565b600082820183811015611f0a5760405162461bcd60e51b815260040161151590613bad565b9392505050565b50506060015190565b6000611f24610a96565b90506000611f30610e8f565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b8152600401611f5d929190613ad6565b60806040518083038186803b158015611f7557600080fd5b505afa158015611f89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fad9190613761565b6040517f18e736d40000000000000000000000000000000000000000000000000000000081529094506001600160a01b03851693506318e736d49250611ffa915085908790600401613abd565b600060405180830381600087803b15801561201457600080fd5b505af1158015612028573d6000803e3d6000fd5b5050505050505050565b1c67ffffffffffffffff1690565b600290565b610b828183146067611ba8565b60005b61205d612040565b8110156120b35761209483828151811061207357fe5b602002602001015183838151811061208757fe5b6020026020010151612bc9565b8382815181106120a057fe5b6020908102919091010152600101612055565b505050565b3330146121a7576000306001600160a01b03166000366040516120dc9291906138c7565b6000604051808303816000865af19150503d8060008114612119576040519150601f19603f3d011682016040523d82523d6000602084013e61211e565b606091505b50509050806000811461212d57fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb000000000000000000000000000000000000000000000000000000008114612189573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606121b1611b0c565b90506121bd8782612248565b600060606121d58c8c8c8c8c8c898d8d63ffffffff16565b50915091506121e881848663ffffffff16565b8051601f1982018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60005b612253612040565b8110156120b35761228a83828151811061226957fe5b602002602001015183838151811061227d57fe5b6020026020010151612c1a565b83828151811061229657fe5b602090810291909101015260010161224b565b610b828282612c50565b60006060806060848060200190518101906122ce919061329c565b9050885160021480156122e2575080516002145b6122fe5760405162461bcd60e51b815260040161151590613c78565b60006060600960009054906101000a90046001600160a01b03166001600160a01b031663efe5049c308560008151811061233457fe5b60200260200101516040518363ffffffff1660e01b8152600401612359929190613b4a565b60006040518083038186803b15801561237157600080fd5b505afa158015612385573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123ad9190810190613726565b60408051600280825260608201909252929850889450909250816020016020820280368337019050509450806000815181106123e557fe5b6020026020010151856000815181106123fa57fe5b6020026020010181815250508060018151811061241357fe5b60200260200101518560018151811061242857fe5b6020908102919091010152604080516002808252606082019092529081602001602082028036833701905050935060008460008151811061246557fe5b60200260200101818152505060008460018151811061248057fe5b602002602001018181525050505050985098509895505050505050565b60005b6124a8612040565b8110156120b3576124df8382815181106124be57fe5b60200260200101518383815181106124d257fe5b6020026020010151612d09565b8382815181106124eb57fe5b60209081029190910101526001016124a0565b60006108bc82612d57565b60008061251e612517610b86565b8490612e13565b9050611f0a8382611842565b6000611f0a8383612c1a565b610b8261254283612e6d565b82612e73565b6000612552612f86565b506040805180820182528481526020808201859052600a549087015187840151606089015194517fa34f62ea00000000000000000000000000000000000000000000000000000000815293946000946001600160a01b039094169363a34f62ea936125c39330938993600401613b0b565b60206040518083038186803b1580156125db57600080fd5b505afa1580156125ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612613919061370e565b90507fb498cafe3e3088f7b7b5cf6afd13373111c6ffee5ce1618f58a2adf2cc9c5a838160405161264491906139ee565b60405180910390a195945050505050565b6000611f0a8383612bc9565b6000611f0a8383612d09565b60006108bc61268c61267d610b86565b670de0b6b3a764000090611842565b8390612d09565b600061269d610e8f565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156126d557600080fd5b505afa1580156126e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610915919061353d565b6000612717611dc8565b82604051602001610e289291906138d7565b620f424090565b610b828282612e7d565b60408051600280825260608083018452600093849391929060208301908036833701905050905060005b81518110156128d3576040517feac8f5b80000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063eac8f5b8906127b59085906004016139ee565b604080518083038186803b1580156127cc57600080fd5b505afa1580156127e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280491906135a7565b516040517fac969a7300000000000000000000000000000000000000000000000000000000815290915060009073__$28039fd024dee0e5c388b469625a331089$__9063ac969a739061285b90859060040161390d565b60206040518083038186803b15801561287357600080fd5b505af4158015612887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ab919061370e565b9050808484815181106128ba57fe5b6020908102919091010152939093019250600101612764565b50600c54600d546040517fff8f8f1200000000000000000000000000000000000000000000000000000000815273__$374ff109b8599801873fe38f05adb3baa6$__9263ff8f8f129261293192879287929091601090600401613eb2565b60206040518083038186803b15801561294957600080fd5b505af415801561295d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612981919061370e565b949350505050565b600082612998575060006108bc565b828202828482816129a557fe5b0414611f0a5760405162461bcd60e51b815260040161151590613d54565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6002815110156129fd576108d9565b600081600081518110612a0c57fe5b602002602001015190506000600190505b82518110156120b3576000838281518110612a3457fe5b60200260200101519050612a5d816001600160a01b0316846001600160a01b0316106065611ba8565b9150600101612a1d565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612a86610e6b565b6001600160a01b031614158015612aa15750612aa183612f0b565b15612ac957612aae610e6b565b6001600160a01b0316336001600160a01b03161490506108bc565b612ad1612693565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612b00939291906139f7565b60206040518083038186803b158015612b1857600080fd5b505afa158015612b2c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176991906132eb565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000828211156118525760405162461bcd60e51b815260040161151590613c41565b4690565b6000612bd88215156004611ba8565b82612be5575060006108bc565b670de0b6b3a764000083810290612c0890858381612bff57fe5b04146005611ba8565b828181612c1157fe5b049150506108bc565b6000828202612c3e841580612c37575083858381612c3457fe5b04145b6003611ba8565b670de0b6b3a764000090049392505050565b612c676001600160a01b038316151561019b611ba8565b612c73826000836120b3565b6001600160a01b038216600090815260208190526040902054612c969082612ba3565b6001600160a01b038316600090815260208190526040902055600254612cbc9082612ba3565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612cfd9085906139ee565b60405180910390a35050565b6000612d188215156004611ba8565b82612d25575060006108bc565b670de0b6b3a764000083810290612d3f90858381612bff57fe5b826001820381612d4b57fe5b046001019150506108bc565b60006001600160a01b038216301415612d795750670de0b6b3a7640000610d03565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612db457600080fd5b505afa158015612dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dec91906137db565b60ff1690506000612dfe601283611842565b600a0a670de0b6b3a764000002949350505050565b6000828202612e2d841580612c37575083858381612c3457fe5b80612e3c5760009150506108bc565b670de0b6b3a76400007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201612d4b565b50600090565b610b828282610b82565b612e89600083836120b3565b600254612e969082611ee5565b6002556001600160a01b038216600090815260208190526040902054612ebc9082611ee5565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612cfd9085906139ee565b6000612f367f38e9922e00000000000000000000000000000000000000000000000000000000610df3565b8214806108bc5750612f677f50dd6ed900000000000000000000000000000000000000000000000000000000610df3565b909114919050565b604080518082019091526000808252602082015290565b604051806040016040528060008152602001600081525090565b8035610d0381613fbb565b600082601f830112612fbb578081fd5b8135612fce612fc982613f9d565b613f79565b818152915060208083019084810181840286018201871015612fef57600080fd5b60005b8481101561300e57813584529282019290820190600101612ff2565b505050505092915050565b600082601f830112613029578081fd5b8151613037612fc982613f9d565b81815291506020808301908481018184028601820187101561305857600080fd5b60005b8481101561300e5781518452928201929082019060010161305b565b600082601f830112613087578081fd5b813567ffffffffffffffff81111561309b57fe5b6130ae6020601f19601f84011601613f79565b91508082528360208285010111156130c557600080fd5b8060208401602084013760009082016020015292915050565b803560028110610d0357600080fd5b6000602082840312156130fe578081fd5b8135611f0a81613fbb565b6000806040838503121561311b578081fd5b823561312681613fbb565b9150602083013561313681613fbb565b809150509250929050565b600080600060608486031215613155578081fd5b833561316081613fbb565b9250602084013561317081613fbb565b929592945050506040919091013590565b600080600080600080600060e0888a03121561319b578283fd5b87356131a681613fbb565b965060208801356131b681613fbb565b9550604088013594506060880135935060808801356131d481613fde565b9699959850939692959460a0840135945060c09093013592915050565b6000808284036060811215613204578283fd5b833561320f81613fbb565b92506040601f1982011215613222578182fd5b506040516040810181811067ffffffffffffffff8211171561324057fe5b604052602084013561325181613fbb565b8152604084013561326181613fde565b6020820152919491935090915050565b60008060408385031215613283578182fd5b823561328e81613fbb565b946020939093013593505050565b6000602082840312156132ad578081fd5b815167ffffffffffffffff8111156132c3578182fd5b61298184828501613019565b6000602082840312156132e0578081fd5b8135611f0a81613fd0565b6000602082840312156132fc578081fd5b8151611f0a81613fd0565b600080600080600060a0868803121561331e578283fd5b85359450602086013561333081613fbb565b9350604086013561334081613fbb565b9250606086013567ffffffffffffffff8082111561335c578283fd5b61336889838a01612fab565b9350608088013591508082111561337d578283fd5b5061338a88828901613077565b9150509295509295909350565b600080600080600080600080610100898b0312156133b3578182fd5b883597506133c360208a01612fa0565b96506133d160408a01612fa0565b9550606089013567ffffffffffffffff808211156133ed578384fd5b6133f98c838d01612fab565b965060808b0135955060a08b0135945060c08b013591508082111561341c578384fd5b6134288c838d01612fab565b935060e08b013591508082111561343d578283fd5b5061344a8b828c01613077565b9150509295985092959890939650565b600080600080600080600060e0888a031215613474578081fd5b87359650602088013561348681613fbb565b9550604088013561349681613fbb565b9450606088013567ffffffffffffffff808211156134b2578283fd5b6134be8b838c01612fab565b955060808a0135945060a08a0135935060c08a01359150808211156134e1578283fd5b506134ee8a828b01613077565b91505092959891949750929550565b60006020828403121561350e578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611f0a578182fd5b60006020828403121561354e578081fd5b8151611f0a81613fbb565b6000806040838503121561356b578182fd5b823561357681613fbb565b9150602083013567ffffffffffffffff811115613591578182fd5b61359d85828601613077565b9150509250929050565b6000604082840312156135b8578081fd5b6040516040810181811067ffffffffffffffff821117156135d557fe5b60405282516135e381613fbb565b815260208301516135f381613fde565b60208201529392505050565b600080600060608486031215613613578081fd5b833567ffffffffffffffff8082111561362a578283fd5b8186019150610120808389031215613640578384fd5b61364981613f79565b9050613654836130de565b815261366260208401612fa0565b602082015261367360408401612fa0565b6040820152606083013560608201526080830135608082015260a083013560a08201526136a260c08401612fa0565b60c08201526136b360e08401612fa0565b60e082015261010080840135838111156136cb578586fd5b6136d78a828701613077565b9183019190915250976020870135975060409096013595945050505050565b600060208284031215613707578081fd5b5035919050565b60006020828403121561371f578081fd5b5051919050565b60008060408385031215613738578182fd5b82519150602083015167ffffffffffffffff811115613755578182fd5b61359d85828601613019565b60008060008060808587031215613776578182fd5b845193506020850151925060408501519150606085015161379681613fbb565b939692955090935050565b600080600080600060a086880312156137b8578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000602082840312156137ec578081fd5b8151611f0a81613fde565b6000815180845260208085019450808401835b838110156138265781518752958201959082019060010161380a565b509495945050505050565b60008151808452815b818110156138565760208185018101518683018201520161383a565b818111156138675782602083870101525b50601f01601f19169290920160200192915050565b80516001600160a01b0316825260209081015160ff16910152565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825260ff16602082015260400190565b602080825282518282018190526000919060409081850190868401855b8281101561397d5761396d84835161387c565b928401929085019060010161395a565b5091979650505050505050565b600060208252611f0a60208301846137f7565b6000604082526139b060408301856137f7565b82810360208401526139c281856137f7565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9788526001600160a01b03968716602089015294861660408801526060870193909352908416608086015290921660a084015260c083019190915260e08201526101000190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000838252604060208301526129816040830184613831565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b03958616815284516020808301919091529094015160408501529184166060840152909216608082015260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b600060208252611f0a6020830184613831565b6020808252601c908201527f43757276652f706172616d657465722d696e76616c69642d6265746100000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f496e76616c6964206c656e677468206f66206d6178416d6f756e7473496e207060408201527f61796c6f61642e00000000000000000000000000000000000000000000000000606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252600e908201527f496e76616c696420666f726d6174000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252601b908201527f43757276652f706172616d657465722d696e76616c69642d6d61780000000000604082015260600190565b6020808252601d908201527f43757276652f706172616d657465722d696e76616c69642d616c706861000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f43757276652f706172616d657465722d696e76616c69642d657073696c6f6e00604082015260600190565b6020808252601d908201527f43757276652f706172616d65746572732d696e6372656173652d666565000000604082015260600190565b6020808252601e908201527f43757276652f706172616d657465722d696e76616c69642d6c616d6264610000604082015260600190565b604081016108bc828461387c565b60008382526040602083015261298160408301846137f7565b600084825260606020830152613e9660608301856137f7565b8281036040840152613ea881856137f7565b9695505050505050565b600060a08201878352602060a08185015281885180845260c086019150828a019350845b81811015613ef257845183529383019391830191600101613ed6565b50506040850188905260608501879052848103608086015285548082528685528285209183019350845b81811015613f3857825485529383019360019283019201613f1c565b50929a9950505050505050505050565b948552602085019390935260408401919091526060830152608082015260a00190565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715613f9557fe5b604052919050565b600067ffffffffffffffff821115613fb157fe5b5060209081020190565b6001600160a01b03811681146108d957600080fd5b80151581146108d957600080fd5b60ff811681146108d957600080fdfea2646970667358221220327f10fda70954279a40e55e0320e418644546711e689046fb17a38e6dd9527c64736f6c634300070300334b18271a7872ab0f9e58e9ca39180e3c710490f802d663f20ae751a8e6b29bc1";

type TestFXPoolConstructorParams =
  | [linkLibraryAddresses: TestFXPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestFXPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestFXPool__factory extends ContractFactory {
  constructor(...args: TestFXPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestFXPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestFXPoolLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$28039fd024dee0e5c388b469625a331089\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/Assimilators.sol:Assimilators"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$374ff109b8599801873fe38f05adb3baa6\\$__", "g"),
      linkLibraryAddresses["contracts/amm-v1/CurveMath.sol:CurveMath"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestFXPool> {
    return super.deploy(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    ) as Promise<TestFXPool>;
  }
  getDeployTransaction(
    vault: string,
    name: string,
    symbol: string,
    tokens: string[],
    _assets: string[],
    _assetWeights: BigNumberish[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    proportionalLiquidity: string,
    swaps: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      name,
      symbol,
      tokens,
      _assets,
      _assetWeights,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      proportionalLiquidity,
      swaps,
      overrides || {}
    );
  }
  attach(address: string): TestFXPool {
    return super.attach(address) as TestFXPool;
  }
  connect(signer: Signer): TestFXPool__factory {
    return super.connect(signer) as TestFXPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestFXPoolInterface {
    return new utils.Interface(_abi) as TestFXPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestFXPool {
    return new Contract(address, _abi, signerOrProvider) as TestFXPool;
  }
}

export interface TestFXPoolLibraryAddresses {
  ["contracts/amm-v1/Assimilators.sol:Assimilators"]: string;
  ["contracts/amm-v1/CurveMath.sol:CurveMath"]: string;
}
