/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Reinvestor, ReinvestorInterface } from "../Reinvestor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callbackData",
        type: "bytes",
      },
    ],
    name: "distributorCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "ensurePoolTokenSetSaved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "poolHasToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "poolTokenAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "poolTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "savePoolTokenSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161154f38038061154f83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6114ac6100a3600039806101be52806102fa52806103aa52806105c2528061093e52506114ac6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ab322301161005b5780637ab32230146100d3578063dfad281c146100e6578063e1c2341014610106578063fbfa77cf146101265761007d565b806329d76f291461008257806343f28ddd1461009757806355c524c1146100c0575b600080fd5b610095610090366004610f40565b61012e565b005b6100aa6100a5366004610f40565b610150565b6040516100b791906112d9565b60405180910390f35b6100956100ce366004610fa8565b61016d565b6100956100e1366004610f40565b61036a565b6100f96100f4366004610f87565b610589565b6040516100b791906111b4565b610119610114366004610f58565b6105a8565b6040516100b791906112ce565b6100f96105c0565b60008181526001602052604090205460ff1661014d5761014d8161036a565b50565b6000818152602081905260408120610167906105e4565b92915050565b610175610d52565b61018182840184611015565b9050610190816020015161012e565b606061019f82602001516105e8565b90506060806101b68460200151856040015161069e565b9150915060607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630f5a6efa3087604001516040518363ffffffff1660e01b815260040161021b9291906111d5565b60006040518083038186803b15801561023357600080fd5b505afa158015610247573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261028d9190810190610f05565b90506102a9856020015186600001518760400151848787610791565b6102bd8560200151866000015186866108ae565b6040517f0e8e3e8400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690630e8e3e849061032f90859060040161123c565b600060405180830381600087803b15801561034957600080fd5b505af115801561035d573d6000803e3d6000fd5b5050505050505050505050565b6040517ff94d466800000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063f94d4668906103df9085906004016112d9565b60006040518083038186803b1580156103f757600080fd5b505afa15801561040b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104519190810190610e39565b505060008381526001602052604090205490915060ff16156104fd576000828152602081905260408120610484906105e4565b905060005b818110156104f65760008481526020819052604081208284037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906104d090836109b3565b60008781526020819052604090209091506104eb90826109ed565b505050600101610489565b5050610538565b600082815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790555b60005b81518110156105845761057b82828151811061055357fe5b6020026020010151600080868152602001908152602001600020610b9b90919063ffffffff16565b5060010161053b565b505050565b60008281526020819052604081206105a19083610c23565b9392505050565b60008281526020819052604081206105a19083610c3f565b7f000000000000000000000000000000000000000000000000000000000000000081565b5490565b606060006105f583610150565b90508067ffffffffffffffff8111801561060e57600080fd5b50604051908082528060200260200182016040528015610638578160200160208202803683370190505b50915060005b8181101561069757600084815260208190526040902061065e90826109b3565b83828151811061066a57fe5b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015260010161063e565b5050919050565b60608060008060005b85518110156106e1576106cd878783815181106106c057fe5b60200260200101516105a8565b156106d9576001909201915b6001016106a7565b508185510390506106f186610150565b67ffffffffffffffff8111801561070757600080fd5b50604051908082528060200260200182016040528015610731578160200160208202803683370190505b5093508067ffffffffffffffff8111801561074b57600080fd5b5060405190808252806020026020018201604052801561078557816020015b610772610d71565b81526020019060019003908161076a5790505b50925050509250929050565b6000805b85518110156108a45760008682815181106107ac57fe5b602002602001015190506107c089826105a8565b156107ff578582815181106107d157fe5b6020026020010151856107e48b84610c6d565b815181106107ee57fe5b60200260200101818152505061089b565b6040805160a0810190915280600181526020018273ffffffffffffffffffffffffffffffffffffffff16815260200187848151811061083a57fe5b602002602001015181526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681525084848151811061088957fe5b60209081029190910101526001909201915b50600101610795565b5050505050505050565b606060018260006040516020016108c7939291906113d6565b60405160208183030381529060405290506108e0610da1565b5060408051608081018252848152602081018490528082018390526001606082015290517fb95cac2800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b95cac289061097990899030908a9087906004016112e2565b600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b50505050505050505050565b60008260000182815481106109c457fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169392505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001830160205260408120548015610b915783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019101808214610af6576000866000018281548110610a5b57fe5b600091825260209091200154875473ffffffffffffffffffffffffffffffffffffffff90911691508190889085908110610a9157fe5b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff94851617905592909116815260018881019092526040902090830190555b8554869080610b0157fe5b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff8716825260018881019091526040822091909155935061016792505050565b6000915050610167565b6000610ba78383610c3f565b610c1b57508154600180820184556000848152602080822090930180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915585549082528286019093526040902091909155610167565b506000610167565b8154600090610c359083106064610c85565b6105a183836109b3565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001919091016020526040902054151590565b60008281526020819052604081206105a19083610c97565b81610c9357610c9381610ce5565b5050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260019190910160205260409020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6040805160608082018352600080835260208301529181019190915290565b6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b600082601f830112610ddb578081fd5b8151610dee610de98261142c565b611408565b818152915060208083019084810181840286018201871015610e0f57600080fd5b60005b84811015610e2e57815184529282019290820190600101610e12565b505050505092915050565b600080600060608486031215610e4d578283fd5b835167ffffffffffffffff80821115610e64578485fd5b818601915086601f830112610e77578485fd5b8151610e85610de98261142c565b80828252602080830192508086018b828387028901011115610ea557898afd5b8996505b84871015610ed0578051610ebc81611454565b845260019690960195928101928101610ea9565b508901519097509350505080821115610ee7578384fd5b50610ef486828701610dcb565b925050604084015190509250925092565b600060208284031215610f16578081fd5b815167ffffffffffffffff811115610f2c578182fd5b610f3884828501610dcb565b949350505050565b600060208284031215610f51578081fd5b5035919050565b60008060408385031215610f6a578182fd5b823591506020830135610f7c81611454565b809150509250929050565b60008060408385031215610f99578182fd5b50508035926020909101359150565b60008060208385031215610fba578182fd5b823567ffffffffffffffff80821115610fd1578384fd5b818501915085601f830112610fe4578384fd5b813581811115610ff2578485fd5b866020828501011115611003578485fd5b60209290920196919550909350505050565b60006020808385031215611027578182fd5b823567ffffffffffffffff8082111561103e578384fd5b9084019060608287031215611051578384fd5b60405160608101818110838211171561106657fe5b604052823561107481611454565b8152828401358482015260408301358281111561108f578586fd5b80840193505086601f8401126110a3578485fd5b823591506110b3610de98361142c565b82815284810190848601868502860187018a10156110cf578788fd5b8795505b848610156110fa5780356110e681611454565b8352600195909501949186019186016110d3565b506040830152509695505050505050565b6000815180845260208085019450808401835b8381101561113a5781518752958201959082019060010161111e565b509495945050505050565b15159052565b60008151808452815b8181101561117057602081850181015186830182015201611154565b818111156111815782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60006040820173ffffffffffffffffffffffffffffffffffffffff808616845260206040818601528286518085526060870191508288019450855b8181101561122e578551851683529483019491830191600101611210565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156112c1578151805161126e8161144a565b85528087015173ffffffffffffffffffffffffffffffffffffffff908116888701528682015187870152606080830151821690870152608091820151169085015260a09093019290850190600101611259565b5091979650505050505050565b901515815260200190565b90815260200190565b6000858252602073ffffffffffffffffffffffffffffffffffffffff80871682850152808616604085015260806060850152610100840185516080808701528181518084526101208801915085830193508692505b8083101561135957835185168252928501926001929092019190850190611337565b508488015194507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff809350838782030160a0880152611397818661110b565b94505050506040850151818584030160c08601526113b5838261114b565b9250505060608401516113cb60e0850182611145565b509695505050505050565b60006113e18561144a565b848252606060208301526113f8606083018561110b565b9050826040830152949350505050565b60405181810167ffffffffffffffff8111828210171561142457fe5b604052919050565b600067ffffffffffffffff82111561144057fe5b5060209081020190565b6004811061014d57fe5b73ffffffffffffffffffffffffffffffffffffffff8116811461014d57600080fdfea264697066735822122098984900901d4f928bae074a8ec36da080a0451e6dce234ee76c92accc94773564736f6c63430007030033";

export class Reinvestor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Reinvestor> {
    return super.deploy(_vault, overrides || {}) as Promise<Reinvestor>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): Reinvestor {
    return super.attach(address) as Reinvestor;
  }
  connect(signer: Signer): Reinvestor__factory {
    return super.connect(signer) as Reinvestor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReinvestorInterface {
    return new utils.Interface(_abi) as ReinvestorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reinvestor {
    return new Contract(address, _abi, signerOrProvider) as Reinvestor;
  }
}
