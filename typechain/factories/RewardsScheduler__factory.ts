/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardsScheduler,
  RewardsSchedulerInterface,
} from "../RewardsScheduler";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "rewardId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewarder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardScheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "rewardId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewarder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "rewardsToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewarder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "getRewardId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rewardId",
        type: "bytes32",
      },
    ],
    name: "getScheduledRewardInfo",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "rewardsToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "rewarder",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum RewardsScheduler.RewardStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct RewardsScheduler.ScheduledReward",
        name: "reward",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "scheduleReward",
    outputs: [
      {
        internalType: "bytes32",
        name: "rewardId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "rewardIds",
        type: "bytes32[]",
      },
    ],
    name: "startRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5033606081901b6080526110cf610040600039806103785280610418528061051752806106a952506110cf6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806333e2923a14610051578063415065e51461007a578063a781e3d01461009a578063eaf7dd86146100af575b600080fd5b61006461005f366004610c25565b6100c2565b6040516100719190610dd7565b60405180910390f35b61008d610088366004610c0d565b6100fb565b6040516100719190611008565b6100ad6100a8366004610b77565b61019a565b005b6100646100bd366004610c75565b610623565b6000848484846040516020016100db9493929190610d0b565b604051602081830303815290604052805190602001209050949350505050565b610103610b44565b60008281526020818152604091829020825160c081018452815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169382019390935260028083015494820194909452600382015490921660608301526004810154608083015260058101549192909160a084019160ff9091169081111561018657fe5b600281111561019157fe5b90525092915050565b60005b8181101561061e5760008383838181106101b357fe5b9050602002013590506101c4610b44565b60008281526020818152604091829020825160c081018452815473ffffffffffffffffffffffffffffffffffffffff9081168252600183015481169382019390935260028083015494820194909452600382015490921660608301526004810154608083015260058101549192909160a084019160ff9091169081111561024757fe5b600281111561025257fe5b905250905060018160a00151600281111561026957fe5b146102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610f17565b60405180910390fd5b42816040015111156102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610e5d565b6000828152602081815260409182902060050180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600217905560808301519083015191517fdd62ed3e000000000000000000000000000000000000000000000000000000008152909173ffffffffffffffffffffffffffffffffffffffff169063dd62ed3e906103a09030907f000000000000000000000000000000000000000000000000000000000000000090600401610d59565b60206040518083038186803b1580156103b857600080fd5b505afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f09190610cba565b10156104c957806020015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610475929190610db1565b602060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c79190610be6565b505b80516020820151606083015160808401516040517f9089ad0b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001694639089ad0b9461054e9491939092600401610e26565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b50505050806020015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16826060015173ffffffffffffffffffffffffffffffffffffffff167fa753b09628f7d9b30952f8f0d502c505edccf445e6b081a06ee2e0d985e23074858560400151866080015160405161060c93929190610de0565b60405180910390a4505060010161019d565b505050565b6000610631858533856100c2565b905042821161066c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610f4e565b6040517f7688c02600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690637688c026906106e290889088903390600401610df6565b60206040518083038186803b1580156106fa57600080fd5b505afa15801561070e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107329190610be6565b610768576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610fab565b60008181526020819052604081206005015460ff16600281111561078857fe5b146107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610eba565b6040805160c08101825273ffffffffffffffffffffffffffffffffffffffff878116825286811660208084019182528385018781523360608601908152608086018a8152600160a0880181815260008b81529586905298909420875181549088167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617825595518186018054918916918816919091179055925160028085019190915591516003840180549190971695169490941790945591516004830155935160058201805494959294919390927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909216919084908111156108c257fe5b02179055506108ec91505073ffffffffffffffffffffffffffffffffffffffff8516333086610974565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa58c3fb0b762e349c223acd7d13503a3e32fa581928fe494cebdf77d5c91447e84868860405161096493929190610de0565b60405180910390a4949350505050565b610a17846323b872dd60e01b85858560405160240161099593929190610d80565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610a1d565b50505050565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051610a469190610cd2565b6000604051808303816000865af19150503d8060008114610a83576040519150601f19603f3d011682016040523d82523d6000602084013e610a88565b606091505b50915091506000821415610aa0573d6000803e3d6000fd5b610a17815160001480610ac2575081806020019051810190610ac29190610be6565b6101a281610ad357610ad381610ad7565b5050565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6040805160c08101825260008082526020820181905291810182905260608101829052608081018290529060a082015290565b60008060208385031215610b89578182fd5b823567ffffffffffffffff80821115610ba0578384fd5b818501915085601f830112610bb3578384fd5b813581811115610bc1578485fd5b8660208083028501011115610bd4578485fd5b60209290920196919550909350505050565b600060208284031215610bf7578081fd5b81518015158114610c06578182fd5b9392505050565b600060208284031215610c1e578081fd5b5035919050565b60008060008060808587031215610c3a578182fd5b8435610c4581611074565b93506020850135610c5581611074565b92506040850135610c6581611074565b9396929550929360600135925050565b60008060008060808587031215610c8a578384fd5b8435610c9581611074565b93506020850135610ca581611074565b93969395505050506040820135916060013590565b600060208284031215610ccb578081fd5b5051919050565b60008251815b81811015610cf25760208186018101518583015201610cd8565b81811115610d005782828501525b509190910192915050565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606095861b8116825293851b841660148201529190931b9091166028820152603c810191909152605c0190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b90815260200190565b9283526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff93841681529183166020830152909116604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff9485168152928416602084015292166040820152606081019190915260800190565b60208082526022908201527f5265776172642073746172742074696d6520697320696e20746865206675747560408201527f7265000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f5265776172642068617320616c7265616479206265656e207363686564756c6560408201527f6400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526018908201527f5265776172642063616e6e6f7420626520737461727465640000000000000000604082015260600190565b6020808252602b908201527f5265776172642063616e206f6e6c79206265207363686564756c656420666f7260408201527f2074686520667574757265000000000000000000000000000000000000000000606082015260800190565b6020808252602e908201527f4f6e6c792077686974656c6973746564207265776172646572732063616e207360408201527f63686564756c6520726577617264000000000000000000000000000000000000606082015260800190565b600060c08201905073ffffffffffffffffffffffffffffffffffffffff80845116835280602085015116602084015260408401516040840152806060850151166060840152506080830151608083015260a08301516003811061106757fe5b8060a08401525092915050565b73ffffffffffffffffffffffffffffffffffffffff8116811461109657600080fd5b5056fea2646970667358221220245dfe311c3794e3c8c6318cae38577c1f0a7f7b63431e4c41167c664ff866ad64736f6c63430007030033";

export class RewardsScheduler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardsScheduler> {
    return super.deploy(overrides || {}) as Promise<RewardsScheduler>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewardsScheduler {
    return super.attach(address) as RewardsScheduler;
  }
  connect(signer: Signer): RewardsScheduler__factory {
    return super.connect(signer) as RewardsScheduler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsSchedulerInterface {
    return new utils.Interface(_abi) as RewardsSchedulerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsScheduler {
    return new Contract(address, _abi, signerOrProvider) as RewardsScheduler;
  }
}
