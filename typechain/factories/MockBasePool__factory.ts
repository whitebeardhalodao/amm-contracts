/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockBasePool, MockBasePoolInterface } from "../MockBasePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "enum IVault.PoolSpecialization",
        name: "specialization",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "assetManagers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMiscData",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "poolConfig",
        type: "bytes",
      },
    ],
    name: "setAssetManagerPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "setMiscData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162002d7d38038062002d7d8339810160408190526200005a91620006e8565b89898989898989898989828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b81525050508160039080519060200190620000d492919062000493565b508051620000ea90600490602084019062000493565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200015d90506276a700831115610194620002ec565b6200017162278d00821115610195620002ec565b429091016101608190520161018052855162000193906002111560c8620002ec565b620001ad620001a162000301565b8751111560c9620002ec565b620001c3866200030660201b62000cf51760201c565b620001ce8462000312565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f90620001ff908d906004016200088e565b602060405180830381600087803b1580156200021a57600080fd5b505af11580156200022f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002559190620006cf565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d2906200028a9084908b908b90600401620007f4565b600060405180830381600087803b158015620002a557600080fd5b505af1158015620002ba573d6000803e3d6000fd5b50505050806101a08181525050505050505050505050505085516101c081815250505050505050505050505062000904565b81620002fd57620002fd816200039e565b5050565b600890565b80620002fd81620003f1565b6200032764e8d4a5100082101560cb620002ec565b6200033f67016345785d8a000082111560ca620002ec565b6200035e8160c06008546200047e60201b62000cff179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9062000393908390620008a3565b60405180910390a150565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60028151101562000402576200047b565b6000816000815181106200041257fe5b602002602001015190506000600190505b8251811015620004785760008382815181106200043c57fe5b602002602001015190506200046d816001600160a01b0316846001600160a01b0316106065620002ec60201b60201c565b915060010162000423565b50505b50565b6001600160401b03811b1992909216911b1790565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004d657805160ff191683800117855562000506565b8280016001018555821562000506579182015b8281111562000506578251825591602001919060010190620004e9565b506200051492915062000518565b5090565b5b8082111562000514576000815560010162000519565b80516200053c81620008ee565b919050565b600082601f83011262000552578081fd5b8151620005696200056382620008d0565b620008ac565b8181529150602080830190848101818402860182018710156200058b57600080fd5b60005b84811015620005b7578151620005a481620008ee565b845292820192908201906001016200058e565b505050505092915050565b600082601f830112620005d3578081fd5b8151620005e46200056382620008d0565b8181529150602080830190848101818402860182018710156200060657600080fd5b60005b84811015620005b75781516200061f81620008ee565b8452928201929082019060010162000609565b8051600381106200053c57600080fd5b600082601f83011262000653578081fd5b81516001600160401b038111156200066757fe5b60206200067d601f8301601f19168201620008ac565b925081835284818386010111156200069457600080fd5b60005b82811015620006b457848101820151848201830152810162000697565b82811115620006c65760008284860101525b50505092915050565b600060208284031215620006e1578081fd5b5051919050565b6000806000806000806000806000806101408b8d03121562000708578586fd5b620007138b6200052f565b99506200072360208c0162000632565b60408c01519099506001600160401b038082111562000740578788fd5b6200074e8e838f0162000642565b995060608d015191508082111562000764578788fd5b620007728e838f0162000642565b985060808d015191508082111562000788578788fd5b620007968e838f01620005c2565b975060a08d0151915080821115620007ac578687fd5b50620007bb8d828e0162000541565b95505060c08b0151935060e08b015192506101008b01519150620007e36101208c016200052f565b90509295989b9194979a5092959850565b60006060820185835260206060818501528186518084526080860191508288019350845b818110156200083f5784516001600160a01b03168352938301939183019160010162000818565b505084810360408601528551808252908201925081860190845b81811015620008805782516001600160a01b03168552938301939183019160010162000859565b509298975050505050505050565b60208101600383106200089d57fe5b91905290565b90815260200190565b6040518181016001600160401b0381118282101715620008c857fe5b604052919050565b60006001600160401b03821115620008e457fe5b5060209081020190565b6001600160a01b03811681146200047b57600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c0516123f7620009866000398061131d525080610623525080610eaf525080610e8b5250806108b15250806109e952508061108e5250806110d05250806110af52508061088d52508061081752506123f76000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806355c676281161010f5780638d928af8116100a2578063aaabadc511610071578063aaabadc5146103eb578063d505accf146103f3578063d5c096c414610406578063dd62ed3e14610419576101e5565b80638d928af8146103b557806395d89b41146103bd578063a457c2d7146103c5578063a9059cbb146103d8576101e5565b80637ecebe00116100de5780637ecebe0014610367578063851c1bb31461037a57806387ec68171461038d578063893d20e8146103a0576101e5565b806355c676281461030a5780636028bfd41461031257806370a082311461033357806374f3b00914610346576101e5565b8063313ce56711610187578063395093511161015657806339509351146102c95780634a6b0b15146102dc5780634d3ca9f3146102e457806350dd6ed9146102f7576101e5565b8063313ce567146102915780633644e515146102a657806338e9922e146102ae57806338fff2d0146102c1576101e5565b806318160ddd116101c357806318160ddd1461023d5780631c0de051146102525780631dd746ea1461026957806323b872dd1461027e576101e5565b806306fdde03146101ea578063095ea7b31461020857806316c38b3c14610228575b600080fd5b6101f261042c565b6040516101ff9190612333565b60405180910390f35b61021b610216366004611e16565b6104e0565b6040516101ff91906121fe565b61023b610236366004611e41565b6104f7565b005b61024561050b565b6040516101ff9190612221565b61025a610511565b6040516101ff93929190612209565b61027161053a565b6040516101ff91906121bd565b61021b61028c366004611d61565b610549565b6102996105f5565b6040516101ff919061235f565b6102456105fe565b61023b6102bc366004611e79565b610608565b610245610621565b61021b6102d7366004611e16565b610645565b61024561068d565b61023b6102f2366004611e79565b610697565b61023b610305366004611ff5565b6106a0565b6102456106be565b610325610320366004611e91565b6106cf565b6040516101ff929190612346565b610245610341366004611d0d565b610706565b610359610354366004611e91565b61072e565b6040516101ff9291906121d0565b610245610375366004611d0d565b6107eb565b610245610388366004611f99565b610813565b61032561039b366004611e91565b610865565b6103a861088b565b6040516101ff919061219c565b6103a86108af565b6101f26108d3565b61021b6103d3366004611e16565b610952565b61021b6103e6366004611e16565b610990565b6103a861099d565b61023b610401366004611da1565b6109a7565b610359610414366004611e91565b610b4f565b610245610427366004611d29565b610c80565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b60006104ed338484610d15565b5060015b92915050565b6104ff610d8a565b61050881610dd0565b50565b60025490565b600080600061051e610e6c565b159250610529610e89565b9150610533610ead565b9050909192565b6060610544610ed1565b905090565b6000806105568533610c80565b90506105873373ffffffffffffffffffffffffffffffffffffffff8716148061057f5750838210155b61019e610f5b565b610592858585610f69565b3373ffffffffffffffffffffffffffffffffffffffff8616148015906105d857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114155b156105ea576105ea8533858403610d15565b506001949350505050565b60055460ff1690565b600061054461108a565b610610610d8a565b610618611127565b6105088161113c565b7f000000000000000000000000000000000000000000000000000000000000000090565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916104ed91859061068890866111a7565b610d15565b60006105446111c0565b610508816111c6565b6106a8610d8a565b6106b0611127565b6106ba82826111db565b5050565b6008546000906105449060c061130d565b600060606106e586516106e061131b565b61133f565b6106fa8989898989898961134c61135f6113c5565b97509795505050505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6060808861077261073d6108af565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460cd610f5b565b61078761077d610621565b82146101f4610f5b565b6060610791610ed1565b905061079d8882611580565b60006060806107b28e8e8e8e8e8e8a8f61134c565b9250925092506107c28d846115e1565b6107cc828561135f565b6107d6818561135f565b909550935050505b5097509795505050505050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610848929190612126565b604051602081830303815290604052805190602001209050919050565b6000606061087686516106e061131b565b6106fa8989898989898961134c6115eb6113c5565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d65780601f106104ab576101008083540402835291602001916104d6565b60008061095f3385610c80565b90508083106109795761097433856000610d15565b610986565b6109863385858403610d15565b5060019392505050565b60006104ed338484610f69565b600061054461164c565b6109b58442111560d1610f5b565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600660209081526040808320549051909291610a19917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101612256565b6040516020818303038152906040528051906020012090506000610a3c826116d3565b9050600060018288888860405160008152602001604052604051610a639493929190612315565b6020604051602081039080840390855afa158015610a85573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150610b0c905073ffffffffffffffffffffffffffffffffffffffff821615801590610b0457508b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6101f8610f5b565b73ffffffffffffffffffffffffffffffffffffffff8b166000908152600660205260409020600185019055610b428b8b8b610d15565b5050505050505050505050565b60608088610b5e61073d6108af565b610b6961077d610621565b6060610b73610ed1565b9050610b7d61050b565b610c305760006060610b928d8d8d868b6116ef565b91509150610bab610ba16116fd565b83101560cc610f5b565b610bbd6000610bb86116fd565b611704565b610bd08b610bc96116fd565b8403611704565b610bda81846115eb565b80610be361131b565b67ffffffffffffffff81118015610bf957600080fd5b50604051908082528060200260200182016040528015610c23578160200160208202803683370190505b50955095505050506107de565b610c3a8882611580565b6000606080610c4f8e8e8e8e8e8e8a8f61134c565b925092509250610c5f8c84611704565b610c6982856115eb565b610c73818561135f565b90955093506107de915050565b6000610c8a6108af565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ce457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6104f1565b610cee838361170e565b90506104f1565b806106ba81611746565b67ffffffffffffffff811b1992909216911b1790565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610d7d908590612221565b60405180910390a3505050565b6000610db96000357fffffffff0000000000000000000000000000000000000000000000000000000016610813565b9050610508610dc882336117d9565b610191610f5b565b8015610df057610deb610de1610e89565b4210610193610f5b565b610e05565b610e05610dfb610ead565b42106101a9610f5b565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490610e619083906121fe565b60405180910390a150565b6000610e76610ead565b42118061054457505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606000610edd61131b565b90508067ffffffffffffffff81118015610ef657600080fd5b50604051908082528060200260200182016040528015610f20578160200160208202803683370190505b50915060005b81811015610f5657670de0b6b3a7640000838281518110610f4357fe5b6020908102919091010152600101610f26565b505090565b816106ba576106ba816118f6565b610f8d73ffffffffffffffffffffffffffffffffffffffff84161515610198610f5b565b610fb173ffffffffffffffffffffffffffffffffffffffff83161515610199610f5b565b610fbc8383836113c0565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054610fef90826101a0611963565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461102b90826111a7565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d7d908590612221565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006110f7611979565b3060405160200161110c959493929190612297565b60405160208183030381529060405280519060200120905090565b61113a611132610e6c565b610192610f5b565b565b61114f64e8d4a5100082101560cb610f5b565b61116567016345785d8a000082111560ca610f5b565b600854611174908260c0610cff565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610e61908390612221565b60008282016111b98482101583610f5b565b9392505050565b60085490565b6008546111d59082600061197d565b60085550565b60006111e5610621565b905060006111f16108af565b73ffffffffffffffffffffffffffffffffffffffff1663b05f8e4883866040518363ffffffff1660e01b815260040161122b9291906122f1565b60806040518083038186803b15801561124357600080fd5b505afa158015611257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127b9190612043565b6040517f18e736d400000000000000000000000000000000000000000000000000000000815290945073ffffffffffffffffffffffffffffffffffffffff851693506318e736d492506112d59150859087906004016122d0565b600060405180830381600087803b1580156112ef57600080fd5b505af1158015611303573d6000803e3d6000fd5b5050505050505050565b1c67ffffffffffffffff1690565b7f000000000000000000000000000000000000000000000000000000000000000090565b6106ba8183146067610f5b565b6000606080985098509895505050505050565b60005b61136a61131b565b8110156113c0576113a183828151811061138057fe5b602002602001015183838151811061139457fe5b60200260200101516119a9565b8382815181106113ad57fe5b6020908102919091010152600101611362565b505050565b3330146114c15760003073ffffffffffffffffffffffffffffffffffffffff166000366040516113f6929190612156565b6000604051808303816000865af19150503d8060008114611433576040519150601f19603f3d011682016040523d82523d6000602084013e611438565b606091505b50509050806000811461144757fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb0000000000000000000000000000000000000000000000000000000081146114a3573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b60606114cb610ed1565b90506114d78782611580565b600060606114ef8c8c8c8c8c8c898d8d63ffffffff16565b509150915061150281848663ffffffff16565b80517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60005b61158b61131b565b8110156113c0576115c28382815181106115a157fe5b60200260200101518383815181106115b557fe5b60200260200101516119fa565b8382815181106115ce57fe5b6020908102919091010152600101611583565b6106ba8282611a30565b60005b6115f661131b565b8110156113c05761162d83828151811061160c57fe5b602002602001015183838151811061162057fe5b6020026020010151611b20565b83828151811061163957fe5b60209081029190910101526001016115ee565b60006116566108af565b73ffffffffffffffffffffffffffffffffffffffff1663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561169b57600080fd5b505afa1580156116af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105449190611fd9565b60006116dd61108a565b82604051602001610848929190612166565b600060609550959350505050565b620f424090565b6106ba8282611b6e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60028151101561175557610508565b60008160008151811061176457fe5b602002602001015190506000600190505b82518110156113c057600083828151811061178c57fe5b602002602001015190506117cf8173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106065610f5b565b9150600101611775565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b6117f861088b565b73ffffffffffffffffffffffffffffffffffffffff1614158015611820575061182083611c16565b156118625761182d61088b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161490506104f1565b61186a61164c565b73ffffffffffffffffffffffffffffffffffffffff16639be2a8848484306040518463ffffffff1660e01b81526004016118a69392919061222a565b60206040518083038186803b1580156118be57600080fd5b505afa1580156118d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cee9190611e5d565b7f08c379a0000000000000000000000000000000000000000000000000000000006000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006119728484111583610f5b565b5050900390565b4690565b77ffffffffffffffffffffffffffffffffffffffffffffffff828116821b90821b198416179392505050565b60006119b88215156004610f5b565b826119c5575060006104f1565b670de0b6b3a7640000838102906119e8908583816119df57fe5b04146005610f5b565b8281816119f157fe5b049150506104f1565b6000828202611a1e841580611a17575083858381611a1457fe5b04145b6003610f5b565b670de0b6b3a764000090049392505050565b611a5473ffffffffffffffffffffffffffffffffffffffff8316151561019b610f5b565b611a60826000836113c0565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611a9390826101a1611963565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902055600254611ac69082611c7a565b60025560405160009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b14908590612221565b60405180910390a35050565b6000611b2f8215156004610f5b565b82611b3c575060006104f1565b670de0b6b3a764000083810290611b56908583816119df57fe5b826001820381611b6257fe5b046001019150506104f1565b611b7a600083836113c0565b600254611b8790826111a7565b60025573ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040902054611bba90826111a7565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b14908590612221565b6000611c417f38e9922e00000000000000000000000000000000000000000000000000000000610813565b8214806104f15750611c727f50dd6ed900000000000000000000000000000000000000000000000000000000610813565b821492915050565b60006111b983836001611963565b600082601f830112611c98578081fd5b813567ffffffffffffffff811115611cac57fe5b611cdd60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161236d565b9150808252836020828501011115611cf457600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215611d1e578081fd5b81356111b981612391565b60008060408385031215611d3b578081fd5b8235611d4681612391565b91506020830135611d5681612391565b809150509250929050565b600080600060608486031215611d75578081fd5b8335611d8081612391565b92506020840135611d9081612391565b929592945050506040919091013590565b600080600080600080600060e0888a031215611dbb578283fd5b8735611dc681612391565b96506020880135611dd681612391565b95506040880135945060608801359350608088013560ff81168114611df9578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e28578182fd5b8235611e3381612391565b946020939093013593505050565b600060208284031215611e52578081fd5b81356111b9816123b3565b600060208284031215611e6e578081fd5b81516111b9816123b3565b600060208284031215611e8a578081fd5b5035919050565b600080600080600080600060e0888a031215611eab578283fd5b87359650602080890135611ebe81612391565b96506040890135611ece81612391565b9550606089013567ffffffffffffffff80821115611eea578586fd5b818b0191508b601f830112611efd578586fd5b813581811115611f0957fe5b611f16848583020161236d565b8082825285820191508585018f878886028801011115611f3457898afd5b8995505b83861015611f56578035835260019590950194918601918601611f38565b509850505060808b0135955060a08b0135945060c08b0135925080831115611f7c578384fd5b5050611f8a8a828b01611c88565b91505092959891949750929550565b600060208284031215611faa578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146111b9578182fd5b600060208284031215611fea578081fd5b81516111b981612391565b60008060408385031215612007578182fd5b823561201281612391565b9150602083013567ffffffffffffffff81111561202d578182fd5b61203985828601611c88565b9150509250929050565b60008060008060808587031215612058578182fd5b845193506020850151925060408501519150606085015161207881612391565b939692955090935050565b6000815180845260208085019450808401835b838110156120b257815187529582019590820190600101612096565b509495945050505050565b60008151808452815b818110156120e2576020818501810151868301820152016120c6565b818111156120f35782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6000602082526111b96020830184612083565b6000604082526121e36040830185612083565b82810360208401526121f58185612083565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b92835273ffffffffffffffffffffffffffffffffffffffff918216602084015216604082015260600190565b95865273ffffffffffffffffffffffffffffffffffffffff94851660208701529290931660408501526060840152608083019190915260a082015260c00190565b94855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b6000838252604060208301526122e960408301846120bd565b949350505050565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082526111b960208301846120bd565b6000838252604060208301526122e96040830184612083565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561238957fe5b604052919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461050857600080fd5b801515811461050857600080fdfea26469706673582212204400f833aa4dd61a0fe6e73613f6d13a47a100d885fca48756ab58f8b5199fa964736f6c63430007030033";

export class MockBasePool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    vault: string,
    specialization: BigNumberish,
    name: string,
    symbol: string,
    tokens: string[],
    assetManagers: string[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBasePool> {
    return super.deploy(
      vault,
      specialization,
      name,
      symbol,
      tokens,
      assetManagers,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      owner,
      overrides || {}
    ) as Promise<MockBasePool>;
  }
  getDeployTransaction(
    vault: string,
    specialization: BigNumberish,
    name: string,
    symbol: string,
    tokens: string[],
    assetManagers: string[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      specialization,
      name,
      symbol,
      tokens,
      assetManagers,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      owner,
      overrides || {}
    );
  }
  attach(address: string): MockBasePool {
    return super.attach(address) as MockBasePool;
  }
  connect(signer: Signer): MockBasePool__factory {
    return super.connect(signer) as MockBasePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBasePoolInterface {
    return new utils.Interface(_abi) as MockBasePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBasePool {
    return new Contract(address, _abi, signerOrProvider) as MockBasePool;
  }
}
