/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockedProportionalLiquidity,
  MockedProportionalLiquidityInterface,
} from "../MockedProportionalLiquidity";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "foo",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "bar",
        type: "uint256[]",
      },
    ],
    name: "MockedProportionalDeposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    name: "proportionalDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "updatedDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "deposits",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610270806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a7db384c14610030575b600080fd5b6100da6004803603604081101561004657600080fd5b8135919081019060408101602082013564010000000081111561006857600080fd5b82018360208201111561007a57600080fd5b8035906020019184602083028401116401000000008311171561009c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610135945050505050565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610120578181015183820152602001610108565b50505050905001935050505060405180910390f35b604080516002808252606080830184528593909291906020830190803683370190505090508260008151811061016757fe5b60200260200101518160008151811061017c57fe5b6020026020010181815250508260018151811061019557fe5b6020026020010151816001815181106101aa57fe5b6020026020010181815250507fbf72d5a4257065aa2663c8a17a5b83b35d3a76f6de28dde11733c0beea7afd5e82846040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561021f578181015183820152602001610207565b50505050905001935050505060405180910390a1925092905056fea26469706673582212208ae272962f474d2b6a403e7ff6f736b3d99fe5bcbf778d71a9d931a44b8ea8a464736f6c63430007010033";

export class MockedProportionalLiquidity__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockedProportionalLiquidity> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockedProportionalLiquidity>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockedProportionalLiquidity {
    return super.attach(address) as MockedProportionalLiquidity;
  }
  connect(signer: Signer): MockedProportionalLiquidity__factory {
    return super.connect(signer) as MockedProportionalLiquidity__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockedProportionalLiquidityInterface {
    return new utils.Interface(_abi) as MockedProportionalLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockedProportionalLiquidity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockedProportionalLiquidity;
  }
}
